/*
Camunda Platform REST API

OpenApi Spec for Camunda Platform REST API.

API version: 7.21.2-ee
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package camundarestgo

import (
	"encoding/json"
)

// checks if the HistoricDecisionInstanceStatisticsDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HistoricDecisionInstanceStatisticsDto{}

// HistoricDecisionInstanceStatisticsDto struct for HistoricDecisionInstanceStatisticsDto
type HistoricDecisionInstanceStatisticsDto struct {
	// A key of decision definition.
	DecisionDefinitionKey NullableString `json:"decisionDefinitionKey,omitempty"`
	// A number of evaluation for decision definition.
	Evaluations NullableInt32 `json:"evaluations,omitempty"`
}

// NewHistoricDecisionInstanceStatisticsDto instantiates a new HistoricDecisionInstanceStatisticsDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHistoricDecisionInstanceStatisticsDto() *HistoricDecisionInstanceStatisticsDto {
	this := HistoricDecisionInstanceStatisticsDto{}
	return &this
}

// NewHistoricDecisionInstanceStatisticsDtoWithDefaults instantiates a new HistoricDecisionInstanceStatisticsDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHistoricDecisionInstanceStatisticsDtoWithDefaults() *HistoricDecisionInstanceStatisticsDto {
	this := HistoricDecisionInstanceStatisticsDto{}
	return &this
}

// GetDecisionDefinitionKey returns the DecisionDefinitionKey field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HistoricDecisionInstanceStatisticsDto) GetDecisionDefinitionKey() string {
	if o == nil || IsNil(o.DecisionDefinitionKey.Get()) {
		var ret string
		return ret
	}
	return *o.DecisionDefinitionKey.Get()
}

// GetDecisionDefinitionKeyOk returns a tuple with the DecisionDefinitionKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HistoricDecisionInstanceStatisticsDto) GetDecisionDefinitionKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DecisionDefinitionKey.Get(), o.DecisionDefinitionKey.IsSet()
}

// HasDecisionDefinitionKey returns a boolean if a field has been set.
func (o *HistoricDecisionInstanceStatisticsDto) HasDecisionDefinitionKey() bool {
	if o != nil && o.DecisionDefinitionKey.IsSet() {
		return true
	}

	return false
}

// SetDecisionDefinitionKey gets a reference to the given NullableString and assigns it to the DecisionDefinitionKey field.
func (o *HistoricDecisionInstanceStatisticsDto) SetDecisionDefinitionKey(v string) {
	o.DecisionDefinitionKey.Set(&v)
}
// SetDecisionDefinitionKeyNil sets the value for DecisionDefinitionKey to be an explicit nil
func (o *HistoricDecisionInstanceStatisticsDto) SetDecisionDefinitionKeyNil() {
	o.DecisionDefinitionKey.Set(nil)
}

// UnsetDecisionDefinitionKey ensures that no value is present for DecisionDefinitionKey, not even an explicit nil
func (o *HistoricDecisionInstanceStatisticsDto) UnsetDecisionDefinitionKey() {
	o.DecisionDefinitionKey.Unset()
}

// GetEvaluations returns the Evaluations field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HistoricDecisionInstanceStatisticsDto) GetEvaluations() int32 {
	if o == nil || IsNil(o.Evaluations.Get()) {
		var ret int32
		return ret
	}
	return *o.Evaluations.Get()
}

// GetEvaluationsOk returns a tuple with the Evaluations field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HistoricDecisionInstanceStatisticsDto) GetEvaluationsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Evaluations.Get(), o.Evaluations.IsSet()
}

// HasEvaluations returns a boolean if a field has been set.
func (o *HistoricDecisionInstanceStatisticsDto) HasEvaluations() bool {
	if o != nil && o.Evaluations.IsSet() {
		return true
	}

	return false
}

// SetEvaluations gets a reference to the given NullableInt32 and assigns it to the Evaluations field.
func (o *HistoricDecisionInstanceStatisticsDto) SetEvaluations(v int32) {
	o.Evaluations.Set(&v)
}
// SetEvaluationsNil sets the value for Evaluations to be an explicit nil
func (o *HistoricDecisionInstanceStatisticsDto) SetEvaluationsNil() {
	o.Evaluations.Set(nil)
}

// UnsetEvaluations ensures that no value is present for Evaluations, not even an explicit nil
func (o *HistoricDecisionInstanceStatisticsDto) UnsetEvaluations() {
	o.Evaluations.Unset()
}

func (o HistoricDecisionInstanceStatisticsDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HistoricDecisionInstanceStatisticsDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.DecisionDefinitionKey.IsSet() {
		toSerialize["decisionDefinitionKey"] = o.DecisionDefinitionKey.Get()
	}
	if o.Evaluations.IsSet() {
		toSerialize["evaluations"] = o.Evaluations.Get()
	}
	return toSerialize, nil
}

type NullableHistoricDecisionInstanceStatisticsDto struct {
	value *HistoricDecisionInstanceStatisticsDto
	isSet bool
}

func (v NullableHistoricDecisionInstanceStatisticsDto) Get() *HistoricDecisionInstanceStatisticsDto {
	return v.value
}

func (v *NullableHistoricDecisionInstanceStatisticsDto) Set(val *HistoricDecisionInstanceStatisticsDto) {
	v.value = val
	v.isSet = true
}

func (v NullableHistoricDecisionInstanceStatisticsDto) IsSet() bool {
	return v.isSet
}

func (v *NullableHistoricDecisionInstanceStatisticsDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHistoricDecisionInstanceStatisticsDto(val *HistoricDecisionInstanceStatisticsDto) *NullableHistoricDecisionInstanceStatisticsDto {
	return &NullableHistoricDecisionInstanceStatisticsDto{value: val, isSet: true}
}

func (v NullableHistoricDecisionInstanceStatisticsDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHistoricDecisionInstanceStatisticsDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


