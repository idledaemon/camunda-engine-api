/*
Camunda Platform REST API

OpenApi Spec for Camunda Platform REST API.

API version: 7.21.2-ee
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package camundarestgo

import (
	"encoding/json"
)

// checks if the HistoricExternalTaskLogQueryDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HistoricExternalTaskLogQueryDto{}

// HistoricExternalTaskLogQueryDto A Historic External Task Log instance query which defines a list of Historic External Task Log instances
type HistoricExternalTaskLogQueryDto struct {
	// Filter by historic external task log id.
	LogId NullableString `json:"logId,omitempty"`
	// Filter by external task id.
	ExternalTaskId NullableString `json:"externalTaskId,omitempty"`
	// Filter by an external task topic.
	TopicName NullableString `json:"topicName,omitempty"`
	// Filter by the id of the worker that the task was most recently locked by.
	WorkerId NullableString `json:"workerId,omitempty"`
	// Filter by external task exception message.
	ErrorMessage NullableString `json:"errorMessage,omitempty"`
	// Only include historic external task logs which belong to one of the passed activity ids.
	ActivityIdIn []string `json:"activityIdIn,omitempty"`
	// Only include historic external task logs which belong to one of the passed activity instance ids.
	ActivityInstanceIdIn []string `json:"activityInstanceIdIn,omitempty"`
	// Only include historic external task logs which belong to one of the passed execution ids.
	ExecutionIdIn []string `json:"executionIdIn,omitempty"`
	// Filter by process instance id.
	ProcessInstanceId NullableString `json:"processInstanceId,omitempty"`
	// Filter by process definition id.
	ProcessDefinitionId NullableString `json:"processDefinitionId,omitempty"`
	// Filter by process definition key.
	ProcessDefinitionKey NullableString `json:"processDefinitionKey,omitempty"`
	// Only include historic external task log entries which belong to one of the passed and comma-separated tenant ids.
	TenantIdIn []string `json:"tenantIdIn,omitempty"`
	// Only include historic external task log entries that belong to no tenant. Value may only be `true`, as `false` is the default behavior.
	WithoutTenantId NullableBool `json:"withoutTenantId,omitempty"`
	// Only include logs for which the associated external task had a priority lower than or equal to the given value. Value must be a valid `long` value.
	PriorityLowerThanOrEquals NullableInt64 `json:"priorityLowerThanOrEquals,omitempty"`
	// Only include logs for which the associated external task had a priority higher than or equal to the given value. Value must be a valid `long` value.
	PriorityHigherThanOrEquals NullableInt64 `json:"priorityHigherThanOrEquals,omitempty"`
	// Only include creation logs. Value may only be `true`, as `false` is the default behavior.
	CreationLog NullableBool `json:"creationLog,omitempty"`
	// Only include failure logs. Value may only be `true`, as `false` is the default behavior.
	FailureLog NullableBool `json:"failureLog,omitempty"`
	// Only include success logs. Value may only be `true`, as `false` is the default behavior.
	SuccessLog NullableBool `json:"successLog,omitempty"`
	// Only include deletion logs. Value may only be `true`, as `false` is the default behavior.
	DeletionLog NullableBool `json:"deletionLog,omitempty"`
	// An array of criteria to sort the result by. Each element of the array is                        an object that specifies one ordering. The position in the array                        identifies the rank of an ordering, i.e., whether it is primary, secondary,                        etc. Sorting has no effect for `count` endpoints.
	Sorting []HistoricExternalTaskLogQueryDtoSortingInner `json:"sorting,omitempty"`
}

// NewHistoricExternalTaskLogQueryDto instantiates a new HistoricExternalTaskLogQueryDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHistoricExternalTaskLogQueryDto() *HistoricExternalTaskLogQueryDto {
	this := HistoricExternalTaskLogQueryDto{}
	return &this
}

// NewHistoricExternalTaskLogQueryDtoWithDefaults instantiates a new HistoricExternalTaskLogQueryDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHistoricExternalTaskLogQueryDtoWithDefaults() *HistoricExternalTaskLogQueryDto {
	this := HistoricExternalTaskLogQueryDto{}
	return &this
}

// GetLogId returns the LogId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HistoricExternalTaskLogQueryDto) GetLogId() string {
	if o == nil || IsNil(o.LogId.Get()) {
		var ret string
		return ret
	}
	return *o.LogId.Get()
}

// GetLogIdOk returns a tuple with the LogId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HistoricExternalTaskLogQueryDto) GetLogIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LogId.Get(), o.LogId.IsSet()
}

// HasLogId returns a boolean if a field has been set.
func (o *HistoricExternalTaskLogQueryDto) HasLogId() bool {
	if o != nil && o.LogId.IsSet() {
		return true
	}

	return false
}

// SetLogId gets a reference to the given NullableString and assigns it to the LogId field.
func (o *HistoricExternalTaskLogQueryDto) SetLogId(v string) {
	o.LogId.Set(&v)
}
// SetLogIdNil sets the value for LogId to be an explicit nil
func (o *HistoricExternalTaskLogQueryDto) SetLogIdNil() {
	o.LogId.Set(nil)
}

// UnsetLogId ensures that no value is present for LogId, not even an explicit nil
func (o *HistoricExternalTaskLogQueryDto) UnsetLogId() {
	o.LogId.Unset()
}

// GetExternalTaskId returns the ExternalTaskId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HistoricExternalTaskLogQueryDto) GetExternalTaskId() string {
	if o == nil || IsNil(o.ExternalTaskId.Get()) {
		var ret string
		return ret
	}
	return *o.ExternalTaskId.Get()
}

// GetExternalTaskIdOk returns a tuple with the ExternalTaskId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HistoricExternalTaskLogQueryDto) GetExternalTaskIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExternalTaskId.Get(), o.ExternalTaskId.IsSet()
}

// HasExternalTaskId returns a boolean if a field has been set.
func (o *HistoricExternalTaskLogQueryDto) HasExternalTaskId() bool {
	if o != nil && o.ExternalTaskId.IsSet() {
		return true
	}

	return false
}

// SetExternalTaskId gets a reference to the given NullableString and assigns it to the ExternalTaskId field.
func (o *HistoricExternalTaskLogQueryDto) SetExternalTaskId(v string) {
	o.ExternalTaskId.Set(&v)
}
// SetExternalTaskIdNil sets the value for ExternalTaskId to be an explicit nil
func (o *HistoricExternalTaskLogQueryDto) SetExternalTaskIdNil() {
	o.ExternalTaskId.Set(nil)
}

// UnsetExternalTaskId ensures that no value is present for ExternalTaskId, not even an explicit nil
func (o *HistoricExternalTaskLogQueryDto) UnsetExternalTaskId() {
	o.ExternalTaskId.Unset()
}

// GetTopicName returns the TopicName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HistoricExternalTaskLogQueryDto) GetTopicName() string {
	if o == nil || IsNil(o.TopicName.Get()) {
		var ret string
		return ret
	}
	return *o.TopicName.Get()
}

// GetTopicNameOk returns a tuple with the TopicName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HistoricExternalTaskLogQueryDto) GetTopicNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TopicName.Get(), o.TopicName.IsSet()
}

// HasTopicName returns a boolean if a field has been set.
func (o *HistoricExternalTaskLogQueryDto) HasTopicName() bool {
	if o != nil && o.TopicName.IsSet() {
		return true
	}

	return false
}

// SetTopicName gets a reference to the given NullableString and assigns it to the TopicName field.
func (o *HistoricExternalTaskLogQueryDto) SetTopicName(v string) {
	o.TopicName.Set(&v)
}
// SetTopicNameNil sets the value for TopicName to be an explicit nil
func (o *HistoricExternalTaskLogQueryDto) SetTopicNameNil() {
	o.TopicName.Set(nil)
}

// UnsetTopicName ensures that no value is present for TopicName, not even an explicit nil
func (o *HistoricExternalTaskLogQueryDto) UnsetTopicName() {
	o.TopicName.Unset()
}

// GetWorkerId returns the WorkerId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HistoricExternalTaskLogQueryDto) GetWorkerId() string {
	if o == nil || IsNil(o.WorkerId.Get()) {
		var ret string
		return ret
	}
	return *o.WorkerId.Get()
}

// GetWorkerIdOk returns a tuple with the WorkerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HistoricExternalTaskLogQueryDto) GetWorkerIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.WorkerId.Get(), o.WorkerId.IsSet()
}

// HasWorkerId returns a boolean if a field has been set.
func (o *HistoricExternalTaskLogQueryDto) HasWorkerId() bool {
	if o != nil && o.WorkerId.IsSet() {
		return true
	}

	return false
}

// SetWorkerId gets a reference to the given NullableString and assigns it to the WorkerId field.
func (o *HistoricExternalTaskLogQueryDto) SetWorkerId(v string) {
	o.WorkerId.Set(&v)
}
// SetWorkerIdNil sets the value for WorkerId to be an explicit nil
func (o *HistoricExternalTaskLogQueryDto) SetWorkerIdNil() {
	o.WorkerId.Set(nil)
}

// UnsetWorkerId ensures that no value is present for WorkerId, not even an explicit nil
func (o *HistoricExternalTaskLogQueryDto) UnsetWorkerId() {
	o.WorkerId.Unset()
}

// GetErrorMessage returns the ErrorMessage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HistoricExternalTaskLogQueryDto) GetErrorMessage() string {
	if o == nil || IsNil(o.ErrorMessage.Get()) {
		var ret string
		return ret
	}
	return *o.ErrorMessage.Get()
}

// GetErrorMessageOk returns a tuple with the ErrorMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HistoricExternalTaskLogQueryDto) GetErrorMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ErrorMessage.Get(), o.ErrorMessage.IsSet()
}

// HasErrorMessage returns a boolean if a field has been set.
func (o *HistoricExternalTaskLogQueryDto) HasErrorMessage() bool {
	if o != nil && o.ErrorMessage.IsSet() {
		return true
	}

	return false
}

// SetErrorMessage gets a reference to the given NullableString and assigns it to the ErrorMessage field.
func (o *HistoricExternalTaskLogQueryDto) SetErrorMessage(v string) {
	o.ErrorMessage.Set(&v)
}
// SetErrorMessageNil sets the value for ErrorMessage to be an explicit nil
func (o *HistoricExternalTaskLogQueryDto) SetErrorMessageNil() {
	o.ErrorMessage.Set(nil)
}

// UnsetErrorMessage ensures that no value is present for ErrorMessage, not even an explicit nil
func (o *HistoricExternalTaskLogQueryDto) UnsetErrorMessage() {
	o.ErrorMessage.Unset()
}

// GetActivityIdIn returns the ActivityIdIn field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HistoricExternalTaskLogQueryDto) GetActivityIdIn() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.ActivityIdIn
}

// GetActivityIdInOk returns a tuple with the ActivityIdIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HistoricExternalTaskLogQueryDto) GetActivityIdInOk() ([]string, bool) {
	if o == nil || IsNil(o.ActivityIdIn) {
		return nil, false
	}
	return o.ActivityIdIn, true
}

// HasActivityIdIn returns a boolean if a field has been set.
func (o *HistoricExternalTaskLogQueryDto) HasActivityIdIn() bool {
	if o != nil && !IsNil(o.ActivityIdIn) {
		return true
	}

	return false
}

// SetActivityIdIn gets a reference to the given []string and assigns it to the ActivityIdIn field.
func (o *HistoricExternalTaskLogQueryDto) SetActivityIdIn(v []string) {
	o.ActivityIdIn = v
}

// GetActivityInstanceIdIn returns the ActivityInstanceIdIn field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HistoricExternalTaskLogQueryDto) GetActivityInstanceIdIn() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.ActivityInstanceIdIn
}

// GetActivityInstanceIdInOk returns a tuple with the ActivityInstanceIdIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HistoricExternalTaskLogQueryDto) GetActivityInstanceIdInOk() ([]string, bool) {
	if o == nil || IsNil(o.ActivityInstanceIdIn) {
		return nil, false
	}
	return o.ActivityInstanceIdIn, true
}

// HasActivityInstanceIdIn returns a boolean if a field has been set.
func (o *HistoricExternalTaskLogQueryDto) HasActivityInstanceIdIn() bool {
	if o != nil && !IsNil(o.ActivityInstanceIdIn) {
		return true
	}

	return false
}

// SetActivityInstanceIdIn gets a reference to the given []string and assigns it to the ActivityInstanceIdIn field.
func (o *HistoricExternalTaskLogQueryDto) SetActivityInstanceIdIn(v []string) {
	o.ActivityInstanceIdIn = v
}

// GetExecutionIdIn returns the ExecutionIdIn field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HistoricExternalTaskLogQueryDto) GetExecutionIdIn() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.ExecutionIdIn
}

// GetExecutionIdInOk returns a tuple with the ExecutionIdIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HistoricExternalTaskLogQueryDto) GetExecutionIdInOk() ([]string, bool) {
	if o == nil || IsNil(o.ExecutionIdIn) {
		return nil, false
	}
	return o.ExecutionIdIn, true
}

// HasExecutionIdIn returns a boolean if a field has been set.
func (o *HistoricExternalTaskLogQueryDto) HasExecutionIdIn() bool {
	if o != nil && !IsNil(o.ExecutionIdIn) {
		return true
	}

	return false
}

// SetExecutionIdIn gets a reference to the given []string and assigns it to the ExecutionIdIn field.
func (o *HistoricExternalTaskLogQueryDto) SetExecutionIdIn(v []string) {
	o.ExecutionIdIn = v
}

// GetProcessInstanceId returns the ProcessInstanceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HistoricExternalTaskLogQueryDto) GetProcessInstanceId() string {
	if o == nil || IsNil(o.ProcessInstanceId.Get()) {
		var ret string
		return ret
	}
	return *o.ProcessInstanceId.Get()
}

// GetProcessInstanceIdOk returns a tuple with the ProcessInstanceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HistoricExternalTaskLogQueryDto) GetProcessInstanceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProcessInstanceId.Get(), o.ProcessInstanceId.IsSet()
}

// HasProcessInstanceId returns a boolean if a field has been set.
func (o *HistoricExternalTaskLogQueryDto) HasProcessInstanceId() bool {
	if o != nil && o.ProcessInstanceId.IsSet() {
		return true
	}

	return false
}

// SetProcessInstanceId gets a reference to the given NullableString and assigns it to the ProcessInstanceId field.
func (o *HistoricExternalTaskLogQueryDto) SetProcessInstanceId(v string) {
	o.ProcessInstanceId.Set(&v)
}
// SetProcessInstanceIdNil sets the value for ProcessInstanceId to be an explicit nil
func (o *HistoricExternalTaskLogQueryDto) SetProcessInstanceIdNil() {
	o.ProcessInstanceId.Set(nil)
}

// UnsetProcessInstanceId ensures that no value is present for ProcessInstanceId, not even an explicit nil
func (o *HistoricExternalTaskLogQueryDto) UnsetProcessInstanceId() {
	o.ProcessInstanceId.Unset()
}

// GetProcessDefinitionId returns the ProcessDefinitionId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HistoricExternalTaskLogQueryDto) GetProcessDefinitionId() string {
	if o == nil || IsNil(o.ProcessDefinitionId.Get()) {
		var ret string
		return ret
	}
	return *o.ProcessDefinitionId.Get()
}

// GetProcessDefinitionIdOk returns a tuple with the ProcessDefinitionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HistoricExternalTaskLogQueryDto) GetProcessDefinitionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProcessDefinitionId.Get(), o.ProcessDefinitionId.IsSet()
}

// HasProcessDefinitionId returns a boolean if a field has been set.
func (o *HistoricExternalTaskLogQueryDto) HasProcessDefinitionId() bool {
	if o != nil && o.ProcessDefinitionId.IsSet() {
		return true
	}

	return false
}

// SetProcessDefinitionId gets a reference to the given NullableString and assigns it to the ProcessDefinitionId field.
func (o *HistoricExternalTaskLogQueryDto) SetProcessDefinitionId(v string) {
	o.ProcessDefinitionId.Set(&v)
}
// SetProcessDefinitionIdNil sets the value for ProcessDefinitionId to be an explicit nil
func (o *HistoricExternalTaskLogQueryDto) SetProcessDefinitionIdNil() {
	o.ProcessDefinitionId.Set(nil)
}

// UnsetProcessDefinitionId ensures that no value is present for ProcessDefinitionId, not even an explicit nil
func (o *HistoricExternalTaskLogQueryDto) UnsetProcessDefinitionId() {
	o.ProcessDefinitionId.Unset()
}

// GetProcessDefinitionKey returns the ProcessDefinitionKey field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HistoricExternalTaskLogQueryDto) GetProcessDefinitionKey() string {
	if o == nil || IsNil(o.ProcessDefinitionKey.Get()) {
		var ret string
		return ret
	}
	return *o.ProcessDefinitionKey.Get()
}

// GetProcessDefinitionKeyOk returns a tuple with the ProcessDefinitionKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HistoricExternalTaskLogQueryDto) GetProcessDefinitionKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProcessDefinitionKey.Get(), o.ProcessDefinitionKey.IsSet()
}

// HasProcessDefinitionKey returns a boolean if a field has been set.
func (o *HistoricExternalTaskLogQueryDto) HasProcessDefinitionKey() bool {
	if o != nil && o.ProcessDefinitionKey.IsSet() {
		return true
	}

	return false
}

// SetProcessDefinitionKey gets a reference to the given NullableString and assigns it to the ProcessDefinitionKey field.
func (o *HistoricExternalTaskLogQueryDto) SetProcessDefinitionKey(v string) {
	o.ProcessDefinitionKey.Set(&v)
}
// SetProcessDefinitionKeyNil sets the value for ProcessDefinitionKey to be an explicit nil
func (o *HistoricExternalTaskLogQueryDto) SetProcessDefinitionKeyNil() {
	o.ProcessDefinitionKey.Set(nil)
}

// UnsetProcessDefinitionKey ensures that no value is present for ProcessDefinitionKey, not even an explicit nil
func (o *HistoricExternalTaskLogQueryDto) UnsetProcessDefinitionKey() {
	o.ProcessDefinitionKey.Unset()
}

// GetTenantIdIn returns the TenantIdIn field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HistoricExternalTaskLogQueryDto) GetTenantIdIn() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.TenantIdIn
}

// GetTenantIdInOk returns a tuple with the TenantIdIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HistoricExternalTaskLogQueryDto) GetTenantIdInOk() ([]string, bool) {
	if o == nil || IsNil(o.TenantIdIn) {
		return nil, false
	}
	return o.TenantIdIn, true
}

// HasTenantIdIn returns a boolean if a field has been set.
func (o *HistoricExternalTaskLogQueryDto) HasTenantIdIn() bool {
	if o != nil && !IsNil(o.TenantIdIn) {
		return true
	}

	return false
}

// SetTenantIdIn gets a reference to the given []string and assigns it to the TenantIdIn field.
func (o *HistoricExternalTaskLogQueryDto) SetTenantIdIn(v []string) {
	o.TenantIdIn = v
}

// GetWithoutTenantId returns the WithoutTenantId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HistoricExternalTaskLogQueryDto) GetWithoutTenantId() bool {
	if o == nil || IsNil(o.WithoutTenantId.Get()) {
		var ret bool
		return ret
	}
	return *o.WithoutTenantId.Get()
}

// GetWithoutTenantIdOk returns a tuple with the WithoutTenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HistoricExternalTaskLogQueryDto) GetWithoutTenantIdOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.WithoutTenantId.Get(), o.WithoutTenantId.IsSet()
}

// HasWithoutTenantId returns a boolean if a field has been set.
func (o *HistoricExternalTaskLogQueryDto) HasWithoutTenantId() bool {
	if o != nil && o.WithoutTenantId.IsSet() {
		return true
	}

	return false
}

// SetWithoutTenantId gets a reference to the given NullableBool and assigns it to the WithoutTenantId field.
func (o *HistoricExternalTaskLogQueryDto) SetWithoutTenantId(v bool) {
	o.WithoutTenantId.Set(&v)
}
// SetWithoutTenantIdNil sets the value for WithoutTenantId to be an explicit nil
func (o *HistoricExternalTaskLogQueryDto) SetWithoutTenantIdNil() {
	o.WithoutTenantId.Set(nil)
}

// UnsetWithoutTenantId ensures that no value is present for WithoutTenantId, not even an explicit nil
func (o *HistoricExternalTaskLogQueryDto) UnsetWithoutTenantId() {
	o.WithoutTenantId.Unset()
}

// GetPriorityLowerThanOrEquals returns the PriorityLowerThanOrEquals field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HistoricExternalTaskLogQueryDto) GetPriorityLowerThanOrEquals() int64 {
	if o == nil || IsNil(o.PriorityLowerThanOrEquals.Get()) {
		var ret int64
		return ret
	}
	return *o.PriorityLowerThanOrEquals.Get()
}

// GetPriorityLowerThanOrEqualsOk returns a tuple with the PriorityLowerThanOrEquals field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HistoricExternalTaskLogQueryDto) GetPriorityLowerThanOrEqualsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.PriorityLowerThanOrEquals.Get(), o.PriorityLowerThanOrEquals.IsSet()
}

// HasPriorityLowerThanOrEquals returns a boolean if a field has been set.
func (o *HistoricExternalTaskLogQueryDto) HasPriorityLowerThanOrEquals() bool {
	if o != nil && o.PriorityLowerThanOrEquals.IsSet() {
		return true
	}

	return false
}

// SetPriorityLowerThanOrEquals gets a reference to the given NullableInt64 and assigns it to the PriorityLowerThanOrEquals field.
func (o *HistoricExternalTaskLogQueryDto) SetPriorityLowerThanOrEquals(v int64) {
	o.PriorityLowerThanOrEquals.Set(&v)
}
// SetPriorityLowerThanOrEqualsNil sets the value for PriorityLowerThanOrEquals to be an explicit nil
func (o *HistoricExternalTaskLogQueryDto) SetPriorityLowerThanOrEqualsNil() {
	o.PriorityLowerThanOrEquals.Set(nil)
}

// UnsetPriorityLowerThanOrEquals ensures that no value is present for PriorityLowerThanOrEquals, not even an explicit nil
func (o *HistoricExternalTaskLogQueryDto) UnsetPriorityLowerThanOrEquals() {
	o.PriorityLowerThanOrEquals.Unset()
}

// GetPriorityHigherThanOrEquals returns the PriorityHigherThanOrEquals field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HistoricExternalTaskLogQueryDto) GetPriorityHigherThanOrEquals() int64 {
	if o == nil || IsNil(o.PriorityHigherThanOrEquals.Get()) {
		var ret int64
		return ret
	}
	return *o.PriorityHigherThanOrEquals.Get()
}

// GetPriorityHigherThanOrEqualsOk returns a tuple with the PriorityHigherThanOrEquals field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HistoricExternalTaskLogQueryDto) GetPriorityHigherThanOrEqualsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.PriorityHigherThanOrEquals.Get(), o.PriorityHigherThanOrEquals.IsSet()
}

// HasPriorityHigherThanOrEquals returns a boolean if a field has been set.
func (o *HistoricExternalTaskLogQueryDto) HasPriorityHigherThanOrEquals() bool {
	if o != nil && o.PriorityHigherThanOrEquals.IsSet() {
		return true
	}

	return false
}

// SetPriorityHigherThanOrEquals gets a reference to the given NullableInt64 and assigns it to the PriorityHigherThanOrEquals field.
func (o *HistoricExternalTaskLogQueryDto) SetPriorityHigherThanOrEquals(v int64) {
	o.PriorityHigherThanOrEquals.Set(&v)
}
// SetPriorityHigherThanOrEqualsNil sets the value for PriorityHigherThanOrEquals to be an explicit nil
func (o *HistoricExternalTaskLogQueryDto) SetPriorityHigherThanOrEqualsNil() {
	o.PriorityHigherThanOrEquals.Set(nil)
}

// UnsetPriorityHigherThanOrEquals ensures that no value is present for PriorityHigherThanOrEquals, not even an explicit nil
func (o *HistoricExternalTaskLogQueryDto) UnsetPriorityHigherThanOrEquals() {
	o.PriorityHigherThanOrEquals.Unset()
}

// GetCreationLog returns the CreationLog field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HistoricExternalTaskLogQueryDto) GetCreationLog() bool {
	if o == nil || IsNil(o.CreationLog.Get()) {
		var ret bool
		return ret
	}
	return *o.CreationLog.Get()
}

// GetCreationLogOk returns a tuple with the CreationLog field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HistoricExternalTaskLogQueryDto) GetCreationLogOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreationLog.Get(), o.CreationLog.IsSet()
}

// HasCreationLog returns a boolean if a field has been set.
func (o *HistoricExternalTaskLogQueryDto) HasCreationLog() bool {
	if o != nil && o.CreationLog.IsSet() {
		return true
	}

	return false
}

// SetCreationLog gets a reference to the given NullableBool and assigns it to the CreationLog field.
func (o *HistoricExternalTaskLogQueryDto) SetCreationLog(v bool) {
	o.CreationLog.Set(&v)
}
// SetCreationLogNil sets the value for CreationLog to be an explicit nil
func (o *HistoricExternalTaskLogQueryDto) SetCreationLogNil() {
	o.CreationLog.Set(nil)
}

// UnsetCreationLog ensures that no value is present for CreationLog, not even an explicit nil
func (o *HistoricExternalTaskLogQueryDto) UnsetCreationLog() {
	o.CreationLog.Unset()
}

// GetFailureLog returns the FailureLog field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HistoricExternalTaskLogQueryDto) GetFailureLog() bool {
	if o == nil || IsNil(o.FailureLog.Get()) {
		var ret bool
		return ret
	}
	return *o.FailureLog.Get()
}

// GetFailureLogOk returns a tuple with the FailureLog field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HistoricExternalTaskLogQueryDto) GetFailureLogOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.FailureLog.Get(), o.FailureLog.IsSet()
}

// HasFailureLog returns a boolean if a field has been set.
func (o *HistoricExternalTaskLogQueryDto) HasFailureLog() bool {
	if o != nil && o.FailureLog.IsSet() {
		return true
	}

	return false
}

// SetFailureLog gets a reference to the given NullableBool and assigns it to the FailureLog field.
func (o *HistoricExternalTaskLogQueryDto) SetFailureLog(v bool) {
	o.FailureLog.Set(&v)
}
// SetFailureLogNil sets the value for FailureLog to be an explicit nil
func (o *HistoricExternalTaskLogQueryDto) SetFailureLogNil() {
	o.FailureLog.Set(nil)
}

// UnsetFailureLog ensures that no value is present for FailureLog, not even an explicit nil
func (o *HistoricExternalTaskLogQueryDto) UnsetFailureLog() {
	o.FailureLog.Unset()
}

// GetSuccessLog returns the SuccessLog field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HistoricExternalTaskLogQueryDto) GetSuccessLog() bool {
	if o == nil || IsNil(o.SuccessLog.Get()) {
		var ret bool
		return ret
	}
	return *o.SuccessLog.Get()
}

// GetSuccessLogOk returns a tuple with the SuccessLog field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HistoricExternalTaskLogQueryDto) GetSuccessLogOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.SuccessLog.Get(), o.SuccessLog.IsSet()
}

// HasSuccessLog returns a boolean if a field has been set.
func (o *HistoricExternalTaskLogQueryDto) HasSuccessLog() bool {
	if o != nil && o.SuccessLog.IsSet() {
		return true
	}

	return false
}

// SetSuccessLog gets a reference to the given NullableBool and assigns it to the SuccessLog field.
func (o *HistoricExternalTaskLogQueryDto) SetSuccessLog(v bool) {
	o.SuccessLog.Set(&v)
}
// SetSuccessLogNil sets the value for SuccessLog to be an explicit nil
func (o *HistoricExternalTaskLogQueryDto) SetSuccessLogNil() {
	o.SuccessLog.Set(nil)
}

// UnsetSuccessLog ensures that no value is present for SuccessLog, not even an explicit nil
func (o *HistoricExternalTaskLogQueryDto) UnsetSuccessLog() {
	o.SuccessLog.Unset()
}

// GetDeletionLog returns the DeletionLog field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HistoricExternalTaskLogQueryDto) GetDeletionLog() bool {
	if o == nil || IsNil(o.DeletionLog.Get()) {
		var ret bool
		return ret
	}
	return *o.DeletionLog.Get()
}

// GetDeletionLogOk returns a tuple with the DeletionLog field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HistoricExternalTaskLogQueryDto) GetDeletionLogOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeletionLog.Get(), o.DeletionLog.IsSet()
}

// HasDeletionLog returns a boolean if a field has been set.
func (o *HistoricExternalTaskLogQueryDto) HasDeletionLog() bool {
	if o != nil && o.DeletionLog.IsSet() {
		return true
	}

	return false
}

// SetDeletionLog gets a reference to the given NullableBool and assigns it to the DeletionLog field.
func (o *HistoricExternalTaskLogQueryDto) SetDeletionLog(v bool) {
	o.DeletionLog.Set(&v)
}
// SetDeletionLogNil sets the value for DeletionLog to be an explicit nil
func (o *HistoricExternalTaskLogQueryDto) SetDeletionLogNil() {
	o.DeletionLog.Set(nil)
}

// UnsetDeletionLog ensures that no value is present for DeletionLog, not even an explicit nil
func (o *HistoricExternalTaskLogQueryDto) UnsetDeletionLog() {
	o.DeletionLog.Unset()
}

// GetSorting returns the Sorting field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HistoricExternalTaskLogQueryDto) GetSorting() []HistoricExternalTaskLogQueryDtoSortingInner {
	if o == nil {
		var ret []HistoricExternalTaskLogQueryDtoSortingInner
		return ret
	}
	return o.Sorting
}

// GetSortingOk returns a tuple with the Sorting field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HistoricExternalTaskLogQueryDto) GetSortingOk() ([]HistoricExternalTaskLogQueryDtoSortingInner, bool) {
	if o == nil || IsNil(o.Sorting) {
		return nil, false
	}
	return o.Sorting, true
}

// HasSorting returns a boolean if a field has been set.
func (o *HistoricExternalTaskLogQueryDto) HasSorting() bool {
	if o != nil && !IsNil(o.Sorting) {
		return true
	}

	return false
}

// SetSorting gets a reference to the given []HistoricExternalTaskLogQueryDtoSortingInner and assigns it to the Sorting field.
func (o *HistoricExternalTaskLogQueryDto) SetSorting(v []HistoricExternalTaskLogQueryDtoSortingInner) {
	o.Sorting = v
}

func (o HistoricExternalTaskLogQueryDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HistoricExternalTaskLogQueryDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.LogId.IsSet() {
		toSerialize["logId"] = o.LogId.Get()
	}
	if o.ExternalTaskId.IsSet() {
		toSerialize["externalTaskId"] = o.ExternalTaskId.Get()
	}
	if o.TopicName.IsSet() {
		toSerialize["topicName"] = o.TopicName.Get()
	}
	if o.WorkerId.IsSet() {
		toSerialize["workerId"] = o.WorkerId.Get()
	}
	if o.ErrorMessage.IsSet() {
		toSerialize["errorMessage"] = o.ErrorMessage.Get()
	}
	if o.ActivityIdIn != nil {
		toSerialize["activityIdIn"] = o.ActivityIdIn
	}
	if o.ActivityInstanceIdIn != nil {
		toSerialize["activityInstanceIdIn"] = o.ActivityInstanceIdIn
	}
	if o.ExecutionIdIn != nil {
		toSerialize["executionIdIn"] = o.ExecutionIdIn
	}
	if o.ProcessInstanceId.IsSet() {
		toSerialize["processInstanceId"] = o.ProcessInstanceId.Get()
	}
	if o.ProcessDefinitionId.IsSet() {
		toSerialize["processDefinitionId"] = o.ProcessDefinitionId.Get()
	}
	if o.ProcessDefinitionKey.IsSet() {
		toSerialize["processDefinitionKey"] = o.ProcessDefinitionKey.Get()
	}
	if o.TenantIdIn != nil {
		toSerialize["tenantIdIn"] = o.TenantIdIn
	}
	if o.WithoutTenantId.IsSet() {
		toSerialize["withoutTenantId"] = o.WithoutTenantId.Get()
	}
	if o.PriorityLowerThanOrEquals.IsSet() {
		toSerialize["priorityLowerThanOrEquals"] = o.PriorityLowerThanOrEquals.Get()
	}
	if o.PriorityHigherThanOrEquals.IsSet() {
		toSerialize["priorityHigherThanOrEquals"] = o.PriorityHigherThanOrEquals.Get()
	}
	if o.CreationLog.IsSet() {
		toSerialize["creationLog"] = o.CreationLog.Get()
	}
	if o.FailureLog.IsSet() {
		toSerialize["failureLog"] = o.FailureLog.Get()
	}
	if o.SuccessLog.IsSet() {
		toSerialize["successLog"] = o.SuccessLog.Get()
	}
	if o.DeletionLog.IsSet() {
		toSerialize["deletionLog"] = o.DeletionLog.Get()
	}
	if o.Sorting != nil {
		toSerialize["sorting"] = o.Sorting
	}
	return toSerialize, nil
}

type NullableHistoricExternalTaskLogQueryDto struct {
	value *HistoricExternalTaskLogQueryDto
	isSet bool
}

func (v NullableHistoricExternalTaskLogQueryDto) Get() *HistoricExternalTaskLogQueryDto {
	return v.value
}

func (v *NullableHistoricExternalTaskLogQueryDto) Set(val *HistoricExternalTaskLogQueryDto) {
	v.value = val
	v.isSet = true
}

func (v NullableHistoricExternalTaskLogQueryDto) IsSet() bool {
	return v.isSet
}

func (v *NullableHistoricExternalTaskLogQueryDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHistoricExternalTaskLogQueryDto(val *HistoricExternalTaskLogQueryDto) *NullableHistoricExternalTaskLogQueryDto {
	return &NullableHistoricExternalTaskLogQueryDto{value: val, isSet: true}
}

func (v NullableHistoricExternalTaskLogQueryDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHistoricExternalTaskLogQueryDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


