/*
Camunda Platform REST API

OpenApi Spec for Camunda Platform REST API.

API version: 7.21.2-ee
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package camundarestgo

import (
	"encoding/json"
)

// checks if the MigrationInstructionDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MigrationInstructionDto{}

// MigrationInstructionDto struct for MigrationInstructionDto
type MigrationInstructionDto struct {
	// The activity ids from the source process definition being mapped.
	SourceActivityIds []string `json:"sourceActivityIds,omitempty"`
	// The activity ids from the target process definition being mapped.
	TargetActivityIds []string `json:"targetActivityIds,omitempty"`
	// Configuration flag whether event triggers defined are going to be updated during migration.
	UpdateEventTrigger NullableBool `json:"updateEventTrigger,omitempty"`
}

// NewMigrationInstructionDto instantiates a new MigrationInstructionDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMigrationInstructionDto() *MigrationInstructionDto {
	this := MigrationInstructionDto{}
	return &this
}

// NewMigrationInstructionDtoWithDefaults instantiates a new MigrationInstructionDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMigrationInstructionDtoWithDefaults() *MigrationInstructionDto {
	this := MigrationInstructionDto{}
	return &this
}

// GetSourceActivityIds returns the SourceActivityIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MigrationInstructionDto) GetSourceActivityIds() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.SourceActivityIds
}

// GetSourceActivityIdsOk returns a tuple with the SourceActivityIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MigrationInstructionDto) GetSourceActivityIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.SourceActivityIds) {
		return nil, false
	}
	return o.SourceActivityIds, true
}

// HasSourceActivityIds returns a boolean if a field has been set.
func (o *MigrationInstructionDto) HasSourceActivityIds() bool {
	if o != nil && !IsNil(o.SourceActivityIds) {
		return true
	}

	return false
}

// SetSourceActivityIds gets a reference to the given []string and assigns it to the SourceActivityIds field.
func (o *MigrationInstructionDto) SetSourceActivityIds(v []string) {
	o.SourceActivityIds = v
}

// GetTargetActivityIds returns the TargetActivityIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MigrationInstructionDto) GetTargetActivityIds() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.TargetActivityIds
}

// GetTargetActivityIdsOk returns a tuple with the TargetActivityIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MigrationInstructionDto) GetTargetActivityIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.TargetActivityIds) {
		return nil, false
	}
	return o.TargetActivityIds, true
}

// HasTargetActivityIds returns a boolean if a field has been set.
func (o *MigrationInstructionDto) HasTargetActivityIds() bool {
	if o != nil && !IsNil(o.TargetActivityIds) {
		return true
	}

	return false
}

// SetTargetActivityIds gets a reference to the given []string and assigns it to the TargetActivityIds field.
func (o *MigrationInstructionDto) SetTargetActivityIds(v []string) {
	o.TargetActivityIds = v
}

// GetUpdateEventTrigger returns the UpdateEventTrigger field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MigrationInstructionDto) GetUpdateEventTrigger() bool {
	if o == nil || IsNil(o.UpdateEventTrigger.Get()) {
		var ret bool
		return ret
	}
	return *o.UpdateEventTrigger.Get()
}

// GetUpdateEventTriggerOk returns a tuple with the UpdateEventTrigger field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MigrationInstructionDto) GetUpdateEventTriggerOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.UpdateEventTrigger.Get(), o.UpdateEventTrigger.IsSet()
}

// HasUpdateEventTrigger returns a boolean if a field has been set.
func (o *MigrationInstructionDto) HasUpdateEventTrigger() bool {
	if o != nil && o.UpdateEventTrigger.IsSet() {
		return true
	}

	return false
}

// SetUpdateEventTrigger gets a reference to the given NullableBool and assigns it to the UpdateEventTrigger field.
func (o *MigrationInstructionDto) SetUpdateEventTrigger(v bool) {
	o.UpdateEventTrigger.Set(&v)
}
// SetUpdateEventTriggerNil sets the value for UpdateEventTrigger to be an explicit nil
func (o *MigrationInstructionDto) SetUpdateEventTriggerNil() {
	o.UpdateEventTrigger.Set(nil)
}

// UnsetUpdateEventTrigger ensures that no value is present for UpdateEventTrigger, not even an explicit nil
func (o *MigrationInstructionDto) UnsetUpdateEventTrigger() {
	o.UpdateEventTrigger.Unset()
}

func (o MigrationInstructionDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MigrationInstructionDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.SourceActivityIds != nil {
		toSerialize["sourceActivityIds"] = o.SourceActivityIds
	}
	if o.TargetActivityIds != nil {
		toSerialize["targetActivityIds"] = o.TargetActivityIds
	}
	if o.UpdateEventTrigger.IsSet() {
		toSerialize["updateEventTrigger"] = o.UpdateEventTrigger.Get()
	}
	return toSerialize, nil
}

type NullableMigrationInstructionDto struct {
	value *MigrationInstructionDto
	isSet bool
}

func (v NullableMigrationInstructionDto) Get() *MigrationInstructionDto {
	return v.value
}

func (v *NullableMigrationInstructionDto) Set(val *MigrationInstructionDto) {
	v.value = val
	v.isSet = true
}

func (v NullableMigrationInstructionDto) IsSet() bool {
	return v.isSet
}

func (v *NullableMigrationInstructionDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMigrationInstructionDto(val *MigrationInstructionDto) *NullableMigrationInstructionDto {
	return &NullableMigrationInstructionDto{value: val, isSet: true}
}

func (v NullableMigrationInstructionDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMigrationInstructionDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


