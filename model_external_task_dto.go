/*
Camunda Platform REST API

OpenApi Spec for Camunda Platform REST API.

API version: 7.21.2-ee
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package camundarestgo

import (
	"encoding/json"
	"time"
)

// checks if the ExternalTaskDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExternalTaskDto{}

// ExternalTaskDto An External Task object with the following properties
type ExternalTaskDto struct {
	// The id of the activity that this external task belongs to.
	ActivityId NullableString `json:"activityId,omitempty"`
	// The id of the activity instance that the external task belongs to.
	ActivityInstanceId NullableString `json:"activityInstanceId,omitempty"`
	// The full error message submitted with the latest reported failure executing this task; `null` if no failure was reported previously or if no error message was submitted
	ErrorMessage NullableString `json:"errorMessage,omitempty"`
	// The id of the execution that the external task belongs to.
	ExecutionId NullableString `json:"executionId,omitempty"`
	// The id of the external task.
	Id NullableString `json:"id,omitempty"`
	// The date that the task's most recent lock expires or has expired.
	LockExpirationTime NullableTime `json:"lockExpirationTime,omitempty"`
	// The id of the process definition the external task is defined in.
	ProcessDefinitionId NullableString `json:"processDefinitionId,omitempty"`
	// The key of the process definition the external task is defined in.
	ProcessDefinitionKey NullableString `json:"processDefinitionKey,omitempty"`
	// The version tag of the process definition the external task is defined in.
	ProcessDefinitionVersionTag NullableString `json:"processDefinitionVersionTag,omitempty"`
	// The id of the process instance the external task belongs to.
	ProcessInstanceId NullableString `json:"processInstanceId,omitempty"`
	// The id of the tenant the external task belongs to.
	TenantId NullableString `json:"tenantId,omitempty"`
	// The number of retries the task currently has left.
	Retries NullableInt32 `json:"retries,omitempty"`
	// A flag indicating whether the external task is suspended or not.
	Suspended NullableBool `json:"suspended,omitempty"`
	// The id of the worker that posesses or posessed the most recent lock.
	WorkerId NullableString `json:"workerId,omitempty"`
	// The topic name of the external task.
	TopicName NullableString `json:"topicName,omitempty"`
	// The priority of the external task.
	Priority NullableInt64 `json:"priority,omitempty"`
	// The business key of the process instance the external task belongs to.
	BusinessKey NullableString `json:"businessKey,omitempty"`
}

// NewExternalTaskDto instantiates a new ExternalTaskDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExternalTaskDto() *ExternalTaskDto {
	this := ExternalTaskDto{}
	return &this
}

// NewExternalTaskDtoWithDefaults instantiates a new ExternalTaskDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExternalTaskDtoWithDefaults() *ExternalTaskDto {
	this := ExternalTaskDto{}
	return &this
}

// GetActivityId returns the ActivityId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExternalTaskDto) GetActivityId() string {
	if o == nil || IsNil(o.ActivityId.Get()) {
		var ret string
		return ret
	}
	return *o.ActivityId.Get()
}

// GetActivityIdOk returns a tuple with the ActivityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExternalTaskDto) GetActivityIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ActivityId.Get(), o.ActivityId.IsSet()
}

// HasActivityId returns a boolean if a field has been set.
func (o *ExternalTaskDto) HasActivityId() bool {
	if o != nil && o.ActivityId.IsSet() {
		return true
	}

	return false
}

// SetActivityId gets a reference to the given NullableString and assigns it to the ActivityId field.
func (o *ExternalTaskDto) SetActivityId(v string) {
	o.ActivityId.Set(&v)
}
// SetActivityIdNil sets the value for ActivityId to be an explicit nil
func (o *ExternalTaskDto) SetActivityIdNil() {
	o.ActivityId.Set(nil)
}

// UnsetActivityId ensures that no value is present for ActivityId, not even an explicit nil
func (o *ExternalTaskDto) UnsetActivityId() {
	o.ActivityId.Unset()
}

// GetActivityInstanceId returns the ActivityInstanceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExternalTaskDto) GetActivityInstanceId() string {
	if o == nil || IsNil(o.ActivityInstanceId.Get()) {
		var ret string
		return ret
	}
	return *o.ActivityInstanceId.Get()
}

// GetActivityInstanceIdOk returns a tuple with the ActivityInstanceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExternalTaskDto) GetActivityInstanceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ActivityInstanceId.Get(), o.ActivityInstanceId.IsSet()
}

// HasActivityInstanceId returns a boolean if a field has been set.
func (o *ExternalTaskDto) HasActivityInstanceId() bool {
	if o != nil && o.ActivityInstanceId.IsSet() {
		return true
	}

	return false
}

// SetActivityInstanceId gets a reference to the given NullableString and assigns it to the ActivityInstanceId field.
func (o *ExternalTaskDto) SetActivityInstanceId(v string) {
	o.ActivityInstanceId.Set(&v)
}
// SetActivityInstanceIdNil sets the value for ActivityInstanceId to be an explicit nil
func (o *ExternalTaskDto) SetActivityInstanceIdNil() {
	o.ActivityInstanceId.Set(nil)
}

// UnsetActivityInstanceId ensures that no value is present for ActivityInstanceId, not even an explicit nil
func (o *ExternalTaskDto) UnsetActivityInstanceId() {
	o.ActivityInstanceId.Unset()
}

// GetErrorMessage returns the ErrorMessage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExternalTaskDto) GetErrorMessage() string {
	if o == nil || IsNil(o.ErrorMessage.Get()) {
		var ret string
		return ret
	}
	return *o.ErrorMessage.Get()
}

// GetErrorMessageOk returns a tuple with the ErrorMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExternalTaskDto) GetErrorMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ErrorMessage.Get(), o.ErrorMessage.IsSet()
}

// HasErrorMessage returns a boolean if a field has been set.
func (o *ExternalTaskDto) HasErrorMessage() bool {
	if o != nil && o.ErrorMessage.IsSet() {
		return true
	}

	return false
}

// SetErrorMessage gets a reference to the given NullableString and assigns it to the ErrorMessage field.
func (o *ExternalTaskDto) SetErrorMessage(v string) {
	o.ErrorMessage.Set(&v)
}
// SetErrorMessageNil sets the value for ErrorMessage to be an explicit nil
func (o *ExternalTaskDto) SetErrorMessageNil() {
	o.ErrorMessage.Set(nil)
}

// UnsetErrorMessage ensures that no value is present for ErrorMessage, not even an explicit nil
func (o *ExternalTaskDto) UnsetErrorMessage() {
	o.ErrorMessage.Unset()
}

// GetExecutionId returns the ExecutionId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExternalTaskDto) GetExecutionId() string {
	if o == nil || IsNil(o.ExecutionId.Get()) {
		var ret string
		return ret
	}
	return *o.ExecutionId.Get()
}

// GetExecutionIdOk returns a tuple with the ExecutionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExternalTaskDto) GetExecutionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExecutionId.Get(), o.ExecutionId.IsSet()
}

// HasExecutionId returns a boolean if a field has been set.
func (o *ExternalTaskDto) HasExecutionId() bool {
	if o != nil && o.ExecutionId.IsSet() {
		return true
	}

	return false
}

// SetExecutionId gets a reference to the given NullableString and assigns it to the ExecutionId field.
func (o *ExternalTaskDto) SetExecutionId(v string) {
	o.ExecutionId.Set(&v)
}
// SetExecutionIdNil sets the value for ExecutionId to be an explicit nil
func (o *ExternalTaskDto) SetExecutionIdNil() {
	o.ExecutionId.Set(nil)
}

// UnsetExecutionId ensures that no value is present for ExecutionId, not even an explicit nil
func (o *ExternalTaskDto) UnsetExecutionId() {
	o.ExecutionId.Unset()
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExternalTaskDto) GetId() string {
	if o == nil || IsNil(o.Id.Get()) {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExternalTaskDto) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *ExternalTaskDto) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *ExternalTaskDto) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *ExternalTaskDto) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *ExternalTaskDto) UnsetId() {
	o.Id.Unset()
}

// GetLockExpirationTime returns the LockExpirationTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExternalTaskDto) GetLockExpirationTime() time.Time {
	if o == nil || IsNil(o.LockExpirationTime.Get()) {
		var ret time.Time
		return ret
	}
	return *o.LockExpirationTime.Get()
}

// GetLockExpirationTimeOk returns a tuple with the LockExpirationTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExternalTaskDto) GetLockExpirationTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.LockExpirationTime.Get(), o.LockExpirationTime.IsSet()
}

// HasLockExpirationTime returns a boolean if a field has been set.
func (o *ExternalTaskDto) HasLockExpirationTime() bool {
	if o != nil && o.LockExpirationTime.IsSet() {
		return true
	}

	return false
}

// SetLockExpirationTime gets a reference to the given NullableTime and assigns it to the LockExpirationTime field.
func (o *ExternalTaskDto) SetLockExpirationTime(v time.Time) {
	o.LockExpirationTime.Set(&v)
}
// SetLockExpirationTimeNil sets the value for LockExpirationTime to be an explicit nil
func (o *ExternalTaskDto) SetLockExpirationTimeNil() {
	o.LockExpirationTime.Set(nil)
}

// UnsetLockExpirationTime ensures that no value is present for LockExpirationTime, not even an explicit nil
func (o *ExternalTaskDto) UnsetLockExpirationTime() {
	o.LockExpirationTime.Unset()
}

// GetProcessDefinitionId returns the ProcessDefinitionId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExternalTaskDto) GetProcessDefinitionId() string {
	if o == nil || IsNil(o.ProcessDefinitionId.Get()) {
		var ret string
		return ret
	}
	return *o.ProcessDefinitionId.Get()
}

// GetProcessDefinitionIdOk returns a tuple with the ProcessDefinitionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExternalTaskDto) GetProcessDefinitionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProcessDefinitionId.Get(), o.ProcessDefinitionId.IsSet()
}

// HasProcessDefinitionId returns a boolean if a field has been set.
func (o *ExternalTaskDto) HasProcessDefinitionId() bool {
	if o != nil && o.ProcessDefinitionId.IsSet() {
		return true
	}

	return false
}

// SetProcessDefinitionId gets a reference to the given NullableString and assigns it to the ProcessDefinitionId field.
func (o *ExternalTaskDto) SetProcessDefinitionId(v string) {
	o.ProcessDefinitionId.Set(&v)
}
// SetProcessDefinitionIdNil sets the value for ProcessDefinitionId to be an explicit nil
func (o *ExternalTaskDto) SetProcessDefinitionIdNil() {
	o.ProcessDefinitionId.Set(nil)
}

// UnsetProcessDefinitionId ensures that no value is present for ProcessDefinitionId, not even an explicit nil
func (o *ExternalTaskDto) UnsetProcessDefinitionId() {
	o.ProcessDefinitionId.Unset()
}

// GetProcessDefinitionKey returns the ProcessDefinitionKey field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExternalTaskDto) GetProcessDefinitionKey() string {
	if o == nil || IsNil(o.ProcessDefinitionKey.Get()) {
		var ret string
		return ret
	}
	return *o.ProcessDefinitionKey.Get()
}

// GetProcessDefinitionKeyOk returns a tuple with the ProcessDefinitionKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExternalTaskDto) GetProcessDefinitionKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProcessDefinitionKey.Get(), o.ProcessDefinitionKey.IsSet()
}

// HasProcessDefinitionKey returns a boolean if a field has been set.
func (o *ExternalTaskDto) HasProcessDefinitionKey() bool {
	if o != nil && o.ProcessDefinitionKey.IsSet() {
		return true
	}

	return false
}

// SetProcessDefinitionKey gets a reference to the given NullableString and assigns it to the ProcessDefinitionKey field.
func (o *ExternalTaskDto) SetProcessDefinitionKey(v string) {
	o.ProcessDefinitionKey.Set(&v)
}
// SetProcessDefinitionKeyNil sets the value for ProcessDefinitionKey to be an explicit nil
func (o *ExternalTaskDto) SetProcessDefinitionKeyNil() {
	o.ProcessDefinitionKey.Set(nil)
}

// UnsetProcessDefinitionKey ensures that no value is present for ProcessDefinitionKey, not even an explicit nil
func (o *ExternalTaskDto) UnsetProcessDefinitionKey() {
	o.ProcessDefinitionKey.Unset()
}

// GetProcessDefinitionVersionTag returns the ProcessDefinitionVersionTag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExternalTaskDto) GetProcessDefinitionVersionTag() string {
	if o == nil || IsNil(o.ProcessDefinitionVersionTag.Get()) {
		var ret string
		return ret
	}
	return *o.ProcessDefinitionVersionTag.Get()
}

// GetProcessDefinitionVersionTagOk returns a tuple with the ProcessDefinitionVersionTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExternalTaskDto) GetProcessDefinitionVersionTagOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProcessDefinitionVersionTag.Get(), o.ProcessDefinitionVersionTag.IsSet()
}

// HasProcessDefinitionVersionTag returns a boolean if a field has been set.
func (o *ExternalTaskDto) HasProcessDefinitionVersionTag() bool {
	if o != nil && o.ProcessDefinitionVersionTag.IsSet() {
		return true
	}

	return false
}

// SetProcessDefinitionVersionTag gets a reference to the given NullableString and assigns it to the ProcessDefinitionVersionTag field.
func (o *ExternalTaskDto) SetProcessDefinitionVersionTag(v string) {
	o.ProcessDefinitionVersionTag.Set(&v)
}
// SetProcessDefinitionVersionTagNil sets the value for ProcessDefinitionVersionTag to be an explicit nil
func (o *ExternalTaskDto) SetProcessDefinitionVersionTagNil() {
	o.ProcessDefinitionVersionTag.Set(nil)
}

// UnsetProcessDefinitionVersionTag ensures that no value is present for ProcessDefinitionVersionTag, not even an explicit nil
func (o *ExternalTaskDto) UnsetProcessDefinitionVersionTag() {
	o.ProcessDefinitionVersionTag.Unset()
}

// GetProcessInstanceId returns the ProcessInstanceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExternalTaskDto) GetProcessInstanceId() string {
	if o == nil || IsNil(o.ProcessInstanceId.Get()) {
		var ret string
		return ret
	}
	return *o.ProcessInstanceId.Get()
}

// GetProcessInstanceIdOk returns a tuple with the ProcessInstanceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExternalTaskDto) GetProcessInstanceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProcessInstanceId.Get(), o.ProcessInstanceId.IsSet()
}

// HasProcessInstanceId returns a boolean if a field has been set.
func (o *ExternalTaskDto) HasProcessInstanceId() bool {
	if o != nil && o.ProcessInstanceId.IsSet() {
		return true
	}

	return false
}

// SetProcessInstanceId gets a reference to the given NullableString and assigns it to the ProcessInstanceId field.
func (o *ExternalTaskDto) SetProcessInstanceId(v string) {
	o.ProcessInstanceId.Set(&v)
}
// SetProcessInstanceIdNil sets the value for ProcessInstanceId to be an explicit nil
func (o *ExternalTaskDto) SetProcessInstanceIdNil() {
	o.ProcessInstanceId.Set(nil)
}

// UnsetProcessInstanceId ensures that no value is present for ProcessInstanceId, not even an explicit nil
func (o *ExternalTaskDto) UnsetProcessInstanceId() {
	o.ProcessInstanceId.Unset()
}

// GetTenantId returns the TenantId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExternalTaskDto) GetTenantId() string {
	if o == nil || IsNil(o.TenantId.Get()) {
		var ret string
		return ret
	}
	return *o.TenantId.Get()
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExternalTaskDto) GetTenantIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TenantId.Get(), o.TenantId.IsSet()
}

// HasTenantId returns a boolean if a field has been set.
func (o *ExternalTaskDto) HasTenantId() bool {
	if o != nil && o.TenantId.IsSet() {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given NullableString and assigns it to the TenantId field.
func (o *ExternalTaskDto) SetTenantId(v string) {
	o.TenantId.Set(&v)
}
// SetTenantIdNil sets the value for TenantId to be an explicit nil
func (o *ExternalTaskDto) SetTenantIdNil() {
	o.TenantId.Set(nil)
}

// UnsetTenantId ensures that no value is present for TenantId, not even an explicit nil
func (o *ExternalTaskDto) UnsetTenantId() {
	o.TenantId.Unset()
}

// GetRetries returns the Retries field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExternalTaskDto) GetRetries() int32 {
	if o == nil || IsNil(o.Retries.Get()) {
		var ret int32
		return ret
	}
	return *o.Retries.Get()
}

// GetRetriesOk returns a tuple with the Retries field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExternalTaskDto) GetRetriesOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Retries.Get(), o.Retries.IsSet()
}

// HasRetries returns a boolean if a field has been set.
func (o *ExternalTaskDto) HasRetries() bool {
	if o != nil && o.Retries.IsSet() {
		return true
	}

	return false
}

// SetRetries gets a reference to the given NullableInt32 and assigns it to the Retries field.
func (o *ExternalTaskDto) SetRetries(v int32) {
	o.Retries.Set(&v)
}
// SetRetriesNil sets the value for Retries to be an explicit nil
func (o *ExternalTaskDto) SetRetriesNil() {
	o.Retries.Set(nil)
}

// UnsetRetries ensures that no value is present for Retries, not even an explicit nil
func (o *ExternalTaskDto) UnsetRetries() {
	o.Retries.Unset()
}

// GetSuspended returns the Suspended field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExternalTaskDto) GetSuspended() bool {
	if o == nil || IsNil(o.Suspended.Get()) {
		var ret bool
		return ret
	}
	return *o.Suspended.Get()
}

// GetSuspendedOk returns a tuple with the Suspended field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExternalTaskDto) GetSuspendedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Suspended.Get(), o.Suspended.IsSet()
}

// HasSuspended returns a boolean if a field has been set.
func (o *ExternalTaskDto) HasSuspended() bool {
	if o != nil && o.Suspended.IsSet() {
		return true
	}

	return false
}

// SetSuspended gets a reference to the given NullableBool and assigns it to the Suspended field.
func (o *ExternalTaskDto) SetSuspended(v bool) {
	o.Suspended.Set(&v)
}
// SetSuspendedNil sets the value for Suspended to be an explicit nil
func (o *ExternalTaskDto) SetSuspendedNil() {
	o.Suspended.Set(nil)
}

// UnsetSuspended ensures that no value is present for Suspended, not even an explicit nil
func (o *ExternalTaskDto) UnsetSuspended() {
	o.Suspended.Unset()
}

// GetWorkerId returns the WorkerId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExternalTaskDto) GetWorkerId() string {
	if o == nil || IsNil(o.WorkerId.Get()) {
		var ret string
		return ret
	}
	return *o.WorkerId.Get()
}

// GetWorkerIdOk returns a tuple with the WorkerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExternalTaskDto) GetWorkerIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.WorkerId.Get(), o.WorkerId.IsSet()
}

// HasWorkerId returns a boolean if a field has been set.
func (o *ExternalTaskDto) HasWorkerId() bool {
	if o != nil && o.WorkerId.IsSet() {
		return true
	}

	return false
}

// SetWorkerId gets a reference to the given NullableString and assigns it to the WorkerId field.
func (o *ExternalTaskDto) SetWorkerId(v string) {
	o.WorkerId.Set(&v)
}
// SetWorkerIdNil sets the value for WorkerId to be an explicit nil
func (o *ExternalTaskDto) SetWorkerIdNil() {
	o.WorkerId.Set(nil)
}

// UnsetWorkerId ensures that no value is present for WorkerId, not even an explicit nil
func (o *ExternalTaskDto) UnsetWorkerId() {
	o.WorkerId.Unset()
}

// GetTopicName returns the TopicName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExternalTaskDto) GetTopicName() string {
	if o == nil || IsNil(o.TopicName.Get()) {
		var ret string
		return ret
	}
	return *o.TopicName.Get()
}

// GetTopicNameOk returns a tuple with the TopicName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExternalTaskDto) GetTopicNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TopicName.Get(), o.TopicName.IsSet()
}

// HasTopicName returns a boolean if a field has been set.
func (o *ExternalTaskDto) HasTopicName() bool {
	if o != nil && o.TopicName.IsSet() {
		return true
	}

	return false
}

// SetTopicName gets a reference to the given NullableString and assigns it to the TopicName field.
func (o *ExternalTaskDto) SetTopicName(v string) {
	o.TopicName.Set(&v)
}
// SetTopicNameNil sets the value for TopicName to be an explicit nil
func (o *ExternalTaskDto) SetTopicNameNil() {
	o.TopicName.Set(nil)
}

// UnsetTopicName ensures that no value is present for TopicName, not even an explicit nil
func (o *ExternalTaskDto) UnsetTopicName() {
	o.TopicName.Unset()
}

// GetPriority returns the Priority field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExternalTaskDto) GetPriority() int64 {
	if o == nil || IsNil(o.Priority.Get()) {
		var ret int64
		return ret
	}
	return *o.Priority.Get()
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExternalTaskDto) GetPriorityOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Priority.Get(), o.Priority.IsSet()
}

// HasPriority returns a boolean if a field has been set.
func (o *ExternalTaskDto) HasPriority() bool {
	if o != nil && o.Priority.IsSet() {
		return true
	}

	return false
}

// SetPriority gets a reference to the given NullableInt64 and assigns it to the Priority field.
func (o *ExternalTaskDto) SetPriority(v int64) {
	o.Priority.Set(&v)
}
// SetPriorityNil sets the value for Priority to be an explicit nil
func (o *ExternalTaskDto) SetPriorityNil() {
	o.Priority.Set(nil)
}

// UnsetPriority ensures that no value is present for Priority, not even an explicit nil
func (o *ExternalTaskDto) UnsetPriority() {
	o.Priority.Unset()
}

// GetBusinessKey returns the BusinessKey field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExternalTaskDto) GetBusinessKey() string {
	if o == nil || IsNil(o.BusinessKey.Get()) {
		var ret string
		return ret
	}
	return *o.BusinessKey.Get()
}

// GetBusinessKeyOk returns a tuple with the BusinessKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExternalTaskDto) GetBusinessKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BusinessKey.Get(), o.BusinessKey.IsSet()
}

// HasBusinessKey returns a boolean if a field has been set.
func (o *ExternalTaskDto) HasBusinessKey() bool {
	if o != nil && o.BusinessKey.IsSet() {
		return true
	}

	return false
}

// SetBusinessKey gets a reference to the given NullableString and assigns it to the BusinessKey field.
func (o *ExternalTaskDto) SetBusinessKey(v string) {
	o.BusinessKey.Set(&v)
}
// SetBusinessKeyNil sets the value for BusinessKey to be an explicit nil
func (o *ExternalTaskDto) SetBusinessKeyNil() {
	o.BusinessKey.Set(nil)
}

// UnsetBusinessKey ensures that no value is present for BusinessKey, not even an explicit nil
func (o *ExternalTaskDto) UnsetBusinessKey() {
	o.BusinessKey.Unset()
}

func (o ExternalTaskDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExternalTaskDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ActivityId.IsSet() {
		toSerialize["activityId"] = o.ActivityId.Get()
	}
	if o.ActivityInstanceId.IsSet() {
		toSerialize["activityInstanceId"] = o.ActivityInstanceId.Get()
	}
	if o.ErrorMessage.IsSet() {
		toSerialize["errorMessage"] = o.ErrorMessage.Get()
	}
	if o.ExecutionId.IsSet() {
		toSerialize["executionId"] = o.ExecutionId.Get()
	}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.LockExpirationTime.IsSet() {
		toSerialize["lockExpirationTime"] = o.LockExpirationTime.Get()
	}
	if o.ProcessDefinitionId.IsSet() {
		toSerialize["processDefinitionId"] = o.ProcessDefinitionId.Get()
	}
	if o.ProcessDefinitionKey.IsSet() {
		toSerialize["processDefinitionKey"] = o.ProcessDefinitionKey.Get()
	}
	if o.ProcessDefinitionVersionTag.IsSet() {
		toSerialize["processDefinitionVersionTag"] = o.ProcessDefinitionVersionTag.Get()
	}
	if o.ProcessInstanceId.IsSet() {
		toSerialize["processInstanceId"] = o.ProcessInstanceId.Get()
	}
	if o.TenantId.IsSet() {
		toSerialize["tenantId"] = o.TenantId.Get()
	}
	if o.Retries.IsSet() {
		toSerialize["retries"] = o.Retries.Get()
	}
	if o.Suspended.IsSet() {
		toSerialize["suspended"] = o.Suspended.Get()
	}
	if o.WorkerId.IsSet() {
		toSerialize["workerId"] = o.WorkerId.Get()
	}
	if o.TopicName.IsSet() {
		toSerialize["topicName"] = o.TopicName.Get()
	}
	if o.Priority.IsSet() {
		toSerialize["priority"] = o.Priority.Get()
	}
	if o.BusinessKey.IsSet() {
		toSerialize["businessKey"] = o.BusinessKey.Get()
	}
	return toSerialize, nil
}

type NullableExternalTaskDto struct {
	value *ExternalTaskDto
	isSet bool
}

func (v NullableExternalTaskDto) Get() *ExternalTaskDto {
	return v.value
}

func (v *NullableExternalTaskDto) Set(val *ExternalTaskDto) {
	v.value = val
	v.isSet = true
}

func (v NullableExternalTaskDto) IsSet() bool {
	return v.isSet
}

func (v *NullableExternalTaskDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExternalTaskDto(val *ExternalTaskDto) *NullableExternalTaskDto {
	return &NullableExternalTaskDto{value: val, isSet: true}
}

func (v NullableExternalTaskDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExternalTaskDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


