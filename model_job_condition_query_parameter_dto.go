/*
Camunda Platform REST API

OpenApi Spec for Camunda Platform REST API.

API version: 7.21.2-ee
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package camundarestgo

import (
	"encoding/json"
	"time"
)

// checks if the JobConditionQueryParameterDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &JobConditionQueryParameterDto{}

// JobConditionQueryParameterDto struct for JobConditionQueryParameterDto
type JobConditionQueryParameterDto struct {
	// Comparison operator to be used.
	Operator NullableString `json:"operator,omitempty"`
	// Date value to compare with.
	Value NullableTime `json:"value,omitempty"`
}

// NewJobConditionQueryParameterDto instantiates a new JobConditionQueryParameterDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJobConditionQueryParameterDto() *JobConditionQueryParameterDto {
	this := JobConditionQueryParameterDto{}
	return &this
}

// NewJobConditionQueryParameterDtoWithDefaults instantiates a new JobConditionQueryParameterDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJobConditionQueryParameterDtoWithDefaults() *JobConditionQueryParameterDto {
	this := JobConditionQueryParameterDto{}
	return &this
}

// GetOperator returns the Operator field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *JobConditionQueryParameterDto) GetOperator() string {
	if o == nil || IsNil(o.Operator.Get()) {
		var ret string
		return ret
	}
	return *o.Operator.Get()
}

// GetOperatorOk returns a tuple with the Operator field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *JobConditionQueryParameterDto) GetOperatorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Operator.Get(), o.Operator.IsSet()
}

// HasOperator returns a boolean if a field has been set.
func (o *JobConditionQueryParameterDto) HasOperator() bool {
	if o != nil && o.Operator.IsSet() {
		return true
	}

	return false
}

// SetOperator gets a reference to the given NullableString and assigns it to the Operator field.
func (o *JobConditionQueryParameterDto) SetOperator(v string) {
	o.Operator.Set(&v)
}
// SetOperatorNil sets the value for Operator to be an explicit nil
func (o *JobConditionQueryParameterDto) SetOperatorNil() {
	o.Operator.Set(nil)
}

// UnsetOperator ensures that no value is present for Operator, not even an explicit nil
func (o *JobConditionQueryParameterDto) UnsetOperator() {
	o.Operator.Unset()
}

// GetValue returns the Value field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *JobConditionQueryParameterDto) GetValue() time.Time {
	if o == nil || IsNil(o.Value.Get()) {
		var ret time.Time
		return ret
	}
	return *o.Value.Get()
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *JobConditionQueryParameterDto) GetValueOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.Value.Get(), o.Value.IsSet()
}

// HasValue returns a boolean if a field has been set.
func (o *JobConditionQueryParameterDto) HasValue() bool {
	if o != nil && o.Value.IsSet() {
		return true
	}

	return false
}

// SetValue gets a reference to the given NullableTime and assigns it to the Value field.
func (o *JobConditionQueryParameterDto) SetValue(v time.Time) {
	o.Value.Set(&v)
}
// SetValueNil sets the value for Value to be an explicit nil
func (o *JobConditionQueryParameterDto) SetValueNil() {
	o.Value.Set(nil)
}

// UnsetValue ensures that no value is present for Value, not even an explicit nil
func (o *JobConditionQueryParameterDto) UnsetValue() {
	o.Value.Unset()
}

func (o JobConditionQueryParameterDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o JobConditionQueryParameterDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Operator.IsSet() {
		toSerialize["operator"] = o.Operator.Get()
	}
	if o.Value.IsSet() {
		toSerialize["value"] = o.Value.Get()
	}
	return toSerialize, nil
}

type NullableJobConditionQueryParameterDto struct {
	value *JobConditionQueryParameterDto
	isSet bool
}

func (v NullableJobConditionQueryParameterDto) Get() *JobConditionQueryParameterDto {
	return v.value
}

func (v *NullableJobConditionQueryParameterDto) Set(val *JobConditionQueryParameterDto) {
	v.value = val
	v.isSet = true
}

func (v NullableJobConditionQueryParameterDto) IsSet() bool {
	return v.isSet
}

func (v *NullableJobConditionQueryParameterDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJobConditionQueryParameterDto(val *JobConditionQueryParameterDto) *NullableJobConditionQueryParameterDto {
	return &NullableJobConditionQueryParameterDto{value: val, isSet: true}
}

func (v NullableJobConditionQueryParameterDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJobConditionQueryParameterDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


