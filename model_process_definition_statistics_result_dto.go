/*
Camunda Platform REST API

OpenApi Spec for Camunda Platform REST API.

API version: 7.21.2-ee
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package camundarestgo

import (
	"encoding/json"
)

// checks if the ProcessDefinitionStatisticsResultDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProcessDefinitionStatisticsResultDto{}

// ProcessDefinitionStatisticsResultDto struct for ProcessDefinitionStatisticsResultDto
type ProcessDefinitionStatisticsResultDto struct {
	// The id of the process definition the results are aggregated for.
	Id NullableString `json:"id,omitempty"`
	// The total number of running process instances of this process definition.
	Instances *int32 `json:"instances,omitempty"`
	// The total number of failed jobs for the running instances. **Note**: Will be `0` (not `null`), if failed jobs were excluded.
	FailedJobs *int32 `json:"failedJobs,omitempty"`
	// Each item in the resulting array is an object which contains `incidentType` and `incidentCount`. **Note**: Will be an empty array, if `incidents` or `incidentsForType` were excluded. Furthermore, the array will be also empty if no incidents were found.
	Incidents []IncidentStatisticsResultDto `json:"incidents,omitempty"`
	// The fully qualified class name of the data transfer object class. The class name might change in future releases.
	Class NullableString `json:"@class,omitempty"`
	Definition *ProcessDefinitionDto `json:"definition,omitempty"`
}

// NewProcessDefinitionStatisticsResultDto instantiates a new ProcessDefinitionStatisticsResultDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProcessDefinitionStatisticsResultDto() *ProcessDefinitionStatisticsResultDto {
	this := ProcessDefinitionStatisticsResultDto{}
	return &this
}

// NewProcessDefinitionStatisticsResultDtoWithDefaults instantiates a new ProcessDefinitionStatisticsResultDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProcessDefinitionStatisticsResultDtoWithDefaults() *ProcessDefinitionStatisticsResultDto {
	this := ProcessDefinitionStatisticsResultDto{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProcessDefinitionStatisticsResultDto) GetId() string {
	if o == nil || IsNil(o.Id.Get()) {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProcessDefinitionStatisticsResultDto) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *ProcessDefinitionStatisticsResultDto) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *ProcessDefinitionStatisticsResultDto) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *ProcessDefinitionStatisticsResultDto) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *ProcessDefinitionStatisticsResultDto) UnsetId() {
	o.Id.Unset()
}

// GetInstances returns the Instances field value if set, zero value otherwise.
func (o *ProcessDefinitionStatisticsResultDto) GetInstances() int32 {
	if o == nil || IsNil(o.Instances) {
		var ret int32
		return ret
	}
	return *o.Instances
}

// GetInstancesOk returns a tuple with the Instances field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProcessDefinitionStatisticsResultDto) GetInstancesOk() (*int32, bool) {
	if o == nil || IsNil(o.Instances) {
		return nil, false
	}
	return o.Instances, true
}

// HasInstances returns a boolean if a field has been set.
func (o *ProcessDefinitionStatisticsResultDto) HasInstances() bool {
	if o != nil && !IsNil(o.Instances) {
		return true
	}

	return false
}

// SetInstances gets a reference to the given int32 and assigns it to the Instances field.
func (o *ProcessDefinitionStatisticsResultDto) SetInstances(v int32) {
	o.Instances = &v
}

// GetFailedJobs returns the FailedJobs field value if set, zero value otherwise.
func (o *ProcessDefinitionStatisticsResultDto) GetFailedJobs() int32 {
	if o == nil || IsNil(o.FailedJobs) {
		var ret int32
		return ret
	}
	return *o.FailedJobs
}

// GetFailedJobsOk returns a tuple with the FailedJobs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProcessDefinitionStatisticsResultDto) GetFailedJobsOk() (*int32, bool) {
	if o == nil || IsNil(o.FailedJobs) {
		return nil, false
	}
	return o.FailedJobs, true
}

// HasFailedJobs returns a boolean if a field has been set.
func (o *ProcessDefinitionStatisticsResultDto) HasFailedJobs() bool {
	if o != nil && !IsNil(o.FailedJobs) {
		return true
	}

	return false
}

// SetFailedJobs gets a reference to the given int32 and assigns it to the FailedJobs field.
func (o *ProcessDefinitionStatisticsResultDto) SetFailedJobs(v int32) {
	o.FailedJobs = &v
}

// GetIncidents returns the Incidents field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProcessDefinitionStatisticsResultDto) GetIncidents() []IncidentStatisticsResultDto {
	if o == nil {
		var ret []IncidentStatisticsResultDto
		return ret
	}
	return o.Incidents
}

// GetIncidentsOk returns a tuple with the Incidents field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProcessDefinitionStatisticsResultDto) GetIncidentsOk() ([]IncidentStatisticsResultDto, bool) {
	if o == nil || IsNil(o.Incidents) {
		return nil, false
	}
	return o.Incidents, true
}

// HasIncidents returns a boolean if a field has been set.
func (o *ProcessDefinitionStatisticsResultDto) HasIncidents() bool {
	if o != nil && !IsNil(o.Incidents) {
		return true
	}

	return false
}

// SetIncidents gets a reference to the given []IncidentStatisticsResultDto and assigns it to the Incidents field.
func (o *ProcessDefinitionStatisticsResultDto) SetIncidents(v []IncidentStatisticsResultDto) {
	o.Incidents = v
}

// GetClass returns the Class field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProcessDefinitionStatisticsResultDto) GetClass() string {
	if o == nil || IsNil(o.Class.Get()) {
		var ret string
		return ret
	}
	return *o.Class.Get()
}

// GetClassOk returns a tuple with the Class field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProcessDefinitionStatisticsResultDto) GetClassOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Class.Get(), o.Class.IsSet()
}

// HasClass returns a boolean if a field has been set.
func (o *ProcessDefinitionStatisticsResultDto) HasClass() bool {
	if o != nil && o.Class.IsSet() {
		return true
	}

	return false
}

// SetClass gets a reference to the given NullableString and assigns it to the Class field.
func (o *ProcessDefinitionStatisticsResultDto) SetClass(v string) {
	o.Class.Set(&v)
}
// SetClassNil sets the value for Class to be an explicit nil
func (o *ProcessDefinitionStatisticsResultDto) SetClassNil() {
	o.Class.Set(nil)
}

// UnsetClass ensures that no value is present for Class, not even an explicit nil
func (o *ProcessDefinitionStatisticsResultDto) UnsetClass() {
	o.Class.Unset()
}

// GetDefinition returns the Definition field value if set, zero value otherwise.
func (o *ProcessDefinitionStatisticsResultDto) GetDefinition() ProcessDefinitionDto {
	if o == nil || IsNil(o.Definition) {
		var ret ProcessDefinitionDto
		return ret
	}
	return *o.Definition
}

// GetDefinitionOk returns a tuple with the Definition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProcessDefinitionStatisticsResultDto) GetDefinitionOk() (*ProcessDefinitionDto, bool) {
	if o == nil || IsNil(o.Definition) {
		return nil, false
	}
	return o.Definition, true
}

// HasDefinition returns a boolean if a field has been set.
func (o *ProcessDefinitionStatisticsResultDto) HasDefinition() bool {
	if o != nil && !IsNil(o.Definition) {
		return true
	}

	return false
}

// SetDefinition gets a reference to the given ProcessDefinitionDto and assigns it to the Definition field.
func (o *ProcessDefinitionStatisticsResultDto) SetDefinition(v ProcessDefinitionDto) {
	o.Definition = &v
}

func (o ProcessDefinitionStatisticsResultDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProcessDefinitionStatisticsResultDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if !IsNil(o.Instances) {
		toSerialize["instances"] = o.Instances
	}
	if !IsNil(o.FailedJobs) {
		toSerialize["failedJobs"] = o.FailedJobs
	}
	if o.Incidents != nil {
		toSerialize["incidents"] = o.Incidents
	}
	if o.Class.IsSet() {
		toSerialize["@class"] = o.Class.Get()
	}
	if !IsNil(o.Definition) {
		toSerialize["definition"] = o.Definition
	}
	return toSerialize, nil
}

type NullableProcessDefinitionStatisticsResultDto struct {
	value *ProcessDefinitionStatisticsResultDto
	isSet bool
}

func (v NullableProcessDefinitionStatisticsResultDto) Get() *ProcessDefinitionStatisticsResultDto {
	return v.value
}

func (v *NullableProcessDefinitionStatisticsResultDto) Set(val *ProcessDefinitionStatisticsResultDto) {
	v.value = val
	v.isSet = true
}

func (v NullableProcessDefinitionStatisticsResultDto) IsSet() bool {
	return v.isSet
}

func (v *NullableProcessDefinitionStatisticsResultDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProcessDefinitionStatisticsResultDto(val *ProcessDefinitionStatisticsResultDto) *NullableProcessDefinitionStatisticsResultDto {
	return &NullableProcessDefinitionStatisticsResultDto{value: val, isSet: true}
}

func (v NullableProcessDefinitionStatisticsResultDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProcessDefinitionStatisticsResultDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


