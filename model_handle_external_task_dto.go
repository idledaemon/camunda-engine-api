/*
Camunda Platform REST API

OpenApi Spec for Camunda Platform REST API.

API version: 7.21.2-ee
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package camundarestgo

import (
	"encoding/json"
)

// checks if the HandleExternalTaskDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HandleExternalTaskDto{}

// HandleExternalTaskDto struct for HandleExternalTaskDto
type HandleExternalTaskDto struct {
	// **Mandatory.** The ID of the worker who is performing the operation on the external task. If the task is already locked, must match the id of the worker who has most recently locked the task.
	WorkerId *string `json:"workerId,omitempty"`
}

// NewHandleExternalTaskDto instantiates a new HandleExternalTaskDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHandleExternalTaskDto() *HandleExternalTaskDto {
	this := HandleExternalTaskDto{}
	return &this
}

// NewHandleExternalTaskDtoWithDefaults instantiates a new HandleExternalTaskDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHandleExternalTaskDtoWithDefaults() *HandleExternalTaskDto {
	this := HandleExternalTaskDto{}
	return &this
}

// GetWorkerId returns the WorkerId field value if set, zero value otherwise.
func (o *HandleExternalTaskDto) GetWorkerId() string {
	if o == nil || IsNil(o.WorkerId) {
		var ret string
		return ret
	}
	return *o.WorkerId
}

// GetWorkerIdOk returns a tuple with the WorkerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandleExternalTaskDto) GetWorkerIdOk() (*string, bool) {
	if o == nil || IsNil(o.WorkerId) {
		return nil, false
	}
	return o.WorkerId, true
}

// HasWorkerId returns a boolean if a field has been set.
func (o *HandleExternalTaskDto) HasWorkerId() bool {
	if o != nil && !IsNil(o.WorkerId) {
		return true
	}

	return false
}

// SetWorkerId gets a reference to the given string and assigns it to the WorkerId field.
func (o *HandleExternalTaskDto) SetWorkerId(v string) {
	o.WorkerId = &v
}

func (o HandleExternalTaskDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HandleExternalTaskDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.WorkerId) {
		toSerialize["workerId"] = o.WorkerId
	}
	return toSerialize, nil
}

type NullableHandleExternalTaskDto struct {
	value *HandleExternalTaskDto
	isSet bool
}

func (v NullableHandleExternalTaskDto) Get() *HandleExternalTaskDto {
	return v.value
}

func (v *NullableHandleExternalTaskDto) Set(val *HandleExternalTaskDto) {
	v.value = val
	v.isSet = true
}

func (v NullableHandleExternalTaskDto) IsSet() bool {
	return v.isSet
}

func (v *NullableHandleExternalTaskDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHandleExternalTaskDto(val *HandleExternalTaskDto) *NullableHandleExternalTaskDto {
	return &NullableHandleExternalTaskDto{value: val, isSet: true}
}

func (v NullableHandleExternalTaskDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHandleExternalTaskDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


