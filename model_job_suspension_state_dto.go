/*
Camunda Platform REST API

OpenApi Spec for Camunda Platform REST API.

API version: 7.21.2-ee
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package camundarestgo

import (
	"encoding/json"
)

// checks if the JobSuspensionStateDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &JobSuspensionStateDto{}

// JobSuspensionStateDto struct for JobSuspensionStateDto
type JobSuspensionStateDto struct {
	// A Boolean value which indicates whether to activate or suspend a given instance  (e.g. process instance, job, job definition, or batch). When the value is set to true,  the given instance will be suspended and when the value is set to false,  the given instance will be activated.
	Suspended NullableBool `json:"suspended,omitempty"`
	// The job definition id of the jobs to activate or suspend.
	JobDefinitionId NullableString `json:"jobDefinitionId,omitempty"`
	// The process definition id of the jobs to activate or suspend.
	ProcessDefinitionId NullableString `json:"processDefinitionId,omitempty"`
	// The process instance id of the jobs to activate or suspend.
	ProcessInstanceId NullableString `json:"processInstanceId,omitempty"`
	// The process definition key of the jobs to activate or suspend.
	ProcessDefinitionKey NullableString `json:"processDefinitionKey,omitempty"`
	// Only activate or suspend jobs of a process definition which belongs to a tenant with the given id. Works only when selecting with `processDefinitionKey`.
	ProcessDefinitionTenantId NullableString `json:"processDefinitionTenantId,omitempty"`
	// Only activate or suspend jobs of a process definition which belongs to no tenant. Value may only be `true`, as `false` is the default behavior. Works only when selecting with `processDefinitionKey`.
	ProcessDefinitionWithoutTenantId NullableBool `json:"processDefinitionWithoutTenantId,omitempty"`
}

// NewJobSuspensionStateDto instantiates a new JobSuspensionStateDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJobSuspensionStateDto() *JobSuspensionStateDto {
	this := JobSuspensionStateDto{}
	return &this
}

// NewJobSuspensionStateDtoWithDefaults instantiates a new JobSuspensionStateDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJobSuspensionStateDtoWithDefaults() *JobSuspensionStateDto {
	this := JobSuspensionStateDto{}
	return &this
}

// GetSuspended returns the Suspended field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *JobSuspensionStateDto) GetSuspended() bool {
	if o == nil || IsNil(o.Suspended.Get()) {
		var ret bool
		return ret
	}
	return *o.Suspended.Get()
}

// GetSuspendedOk returns a tuple with the Suspended field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *JobSuspensionStateDto) GetSuspendedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Suspended.Get(), o.Suspended.IsSet()
}

// HasSuspended returns a boolean if a field has been set.
func (o *JobSuspensionStateDto) HasSuspended() bool {
	if o != nil && o.Suspended.IsSet() {
		return true
	}

	return false
}

// SetSuspended gets a reference to the given NullableBool and assigns it to the Suspended field.
func (o *JobSuspensionStateDto) SetSuspended(v bool) {
	o.Suspended.Set(&v)
}
// SetSuspendedNil sets the value for Suspended to be an explicit nil
func (o *JobSuspensionStateDto) SetSuspendedNil() {
	o.Suspended.Set(nil)
}

// UnsetSuspended ensures that no value is present for Suspended, not even an explicit nil
func (o *JobSuspensionStateDto) UnsetSuspended() {
	o.Suspended.Unset()
}

// GetJobDefinitionId returns the JobDefinitionId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *JobSuspensionStateDto) GetJobDefinitionId() string {
	if o == nil || IsNil(o.JobDefinitionId.Get()) {
		var ret string
		return ret
	}
	return *o.JobDefinitionId.Get()
}

// GetJobDefinitionIdOk returns a tuple with the JobDefinitionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *JobSuspensionStateDto) GetJobDefinitionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.JobDefinitionId.Get(), o.JobDefinitionId.IsSet()
}

// HasJobDefinitionId returns a boolean if a field has been set.
func (o *JobSuspensionStateDto) HasJobDefinitionId() bool {
	if o != nil && o.JobDefinitionId.IsSet() {
		return true
	}

	return false
}

// SetJobDefinitionId gets a reference to the given NullableString and assigns it to the JobDefinitionId field.
func (o *JobSuspensionStateDto) SetJobDefinitionId(v string) {
	o.JobDefinitionId.Set(&v)
}
// SetJobDefinitionIdNil sets the value for JobDefinitionId to be an explicit nil
func (o *JobSuspensionStateDto) SetJobDefinitionIdNil() {
	o.JobDefinitionId.Set(nil)
}

// UnsetJobDefinitionId ensures that no value is present for JobDefinitionId, not even an explicit nil
func (o *JobSuspensionStateDto) UnsetJobDefinitionId() {
	o.JobDefinitionId.Unset()
}

// GetProcessDefinitionId returns the ProcessDefinitionId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *JobSuspensionStateDto) GetProcessDefinitionId() string {
	if o == nil || IsNil(o.ProcessDefinitionId.Get()) {
		var ret string
		return ret
	}
	return *o.ProcessDefinitionId.Get()
}

// GetProcessDefinitionIdOk returns a tuple with the ProcessDefinitionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *JobSuspensionStateDto) GetProcessDefinitionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProcessDefinitionId.Get(), o.ProcessDefinitionId.IsSet()
}

// HasProcessDefinitionId returns a boolean if a field has been set.
func (o *JobSuspensionStateDto) HasProcessDefinitionId() bool {
	if o != nil && o.ProcessDefinitionId.IsSet() {
		return true
	}

	return false
}

// SetProcessDefinitionId gets a reference to the given NullableString and assigns it to the ProcessDefinitionId field.
func (o *JobSuspensionStateDto) SetProcessDefinitionId(v string) {
	o.ProcessDefinitionId.Set(&v)
}
// SetProcessDefinitionIdNil sets the value for ProcessDefinitionId to be an explicit nil
func (o *JobSuspensionStateDto) SetProcessDefinitionIdNil() {
	o.ProcessDefinitionId.Set(nil)
}

// UnsetProcessDefinitionId ensures that no value is present for ProcessDefinitionId, not even an explicit nil
func (o *JobSuspensionStateDto) UnsetProcessDefinitionId() {
	o.ProcessDefinitionId.Unset()
}

// GetProcessInstanceId returns the ProcessInstanceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *JobSuspensionStateDto) GetProcessInstanceId() string {
	if o == nil || IsNil(o.ProcessInstanceId.Get()) {
		var ret string
		return ret
	}
	return *o.ProcessInstanceId.Get()
}

// GetProcessInstanceIdOk returns a tuple with the ProcessInstanceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *JobSuspensionStateDto) GetProcessInstanceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProcessInstanceId.Get(), o.ProcessInstanceId.IsSet()
}

// HasProcessInstanceId returns a boolean if a field has been set.
func (o *JobSuspensionStateDto) HasProcessInstanceId() bool {
	if o != nil && o.ProcessInstanceId.IsSet() {
		return true
	}

	return false
}

// SetProcessInstanceId gets a reference to the given NullableString and assigns it to the ProcessInstanceId field.
func (o *JobSuspensionStateDto) SetProcessInstanceId(v string) {
	o.ProcessInstanceId.Set(&v)
}
// SetProcessInstanceIdNil sets the value for ProcessInstanceId to be an explicit nil
func (o *JobSuspensionStateDto) SetProcessInstanceIdNil() {
	o.ProcessInstanceId.Set(nil)
}

// UnsetProcessInstanceId ensures that no value is present for ProcessInstanceId, not even an explicit nil
func (o *JobSuspensionStateDto) UnsetProcessInstanceId() {
	o.ProcessInstanceId.Unset()
}

// GetProcessDefinitionKey returns the ProcessDefinitionKey field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *JobSuspensionStateDto) GetProcessDefinitionKey() string {
	if o == nil || IsNil(o.ProcessDefinitionKey.Get()) {
		var ret string
		return ret
	}
	return *o.ProcessDefinitionKey.Get()
}

// GetProcessDefinitionKeyOk returns a tuple with the ProcessDefinitionKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *JobSuspensionStateDto) GetProcessDefinitionKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProcessDefinitionKey.Get(), o.ProcessDefinitionKey.IsSet()
}

// HasProcessDefinitionKey returns a boolean if a field has been set.
func (o *JobSuspensionStateDto) HasProcessDefinitionKey() bool {
	if o != nil && o.ProcessDefinitionKey.IsSet() {
		return true
	}

	return false
}

// SetProcessDefinitionKey gets a reference to the given NullableString and assigns it to the ProcessDefinitionKey field.
func (o *JobSuspensionStateDto) SetProcessDefinitionKey(v string) {
	o.ProcessDefinitionKey.Set(&v)
}
// SetProcessDefinitionKeyNil sets the value for ProcessDefinitionKey to be an explicit nil
func (o *JobSuspensionStateDto) SetProcessDefinitionKeyNil() {
	o.ProcessDefinitionKey.Set(nil)
}

// UnsetProcessDefinitionKey ensures that no value is present for ProcessDefinitionKey, not even an explicit nil
func (o *JobSuspensionStateDto) UnsetProcessDefinitionKey() {
	o.ProcessDefinitionKey.Unset()
}

// GetProcessDefinitionTenantId returns the ProcessDefinitionTenantId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *JobSuspensionStateDto) GetProcessDefinitionTenantId() string {
	if o == nil || IsNil(o.ProcessDefinitionTenantId.Get()) {
		var ret string
		return ret
	}
	return *o.ProcessDefinitionTenantId.Get()
}

// GetProcessDefinitionTenantIdOk returns a tuple with the ProcessDefinitionTenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *JobSuspensionStateDto) GetProcessDefinitionTenantIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProcessDefinitionTenantId.Get(), o.ProcessDefinitionTenantId.IsSet()
}

// HasProcessDefinitionTenantId returns a boolean if a field has been set.
func (o *JobSuspensionStateDto) HasProcessDefinitionTenantId() bool {
	if o != nil && o.ProcessDefinitionTenantId.IsSet() {
		return true
	}

	return false
}

// SetProcessDefinitionTenantId gets a reference to the given NullableString and assigns it to the ProcessDefinitionTenantId field.
func (o *JobSuspensionStateDto) SetProcessDefinitionTenantId(v string) {
	o.ProcessDefinitionTenantId.Set(&v)
}
// SetProcessDefinitionTenantIdNil sets the value for ProcessDefinitionTenantId to be an explicit nil
func (o *JobSuspensionStateDto) SetProcessDefinitionTenantIdNil() {
	o.ProcessDefinitionTenantId.Set(nil)
}

// UnsetProcessDefinitionTenantId ensures that no value is present for ProcessDefinitionTenantId, not even an explicit nil
func (o *JobSuspensionStateDto) UnsetProcessDefinitionTenantId() {
	o.ProcessDefinitionTenantId.Unset()
}

// GetProcessDefinitionWithoutTenantId returns the ProcessDefinitionWithoutTenantId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *JobSuspensionStateDto) GetProcessDefinitionWithoutTenantId() bool {
	if o == nil || IsNil(o.ProcessDefinitionWithoutTenantId.Get()) {
		var ret bool
		return ret
	}
	return *o.ProcessDefinitionWithoutTenantId.Get()
}

// GetProcessDefinitionWithoutTenantIdOk returns a tuple with the ProcessDefinitionWithoutTenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *JobSuspensionStateDto) GetProcessDefinitionWithoutTenantIdOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProcessDefinitionWithoutTenantId.Get(), o.ProcessDefinitionWithoutTenantId.IsSet()
}

// HasProcessDefinitionWithoutTenantId returns a boolean if a field has been set.
func (o *JobSuspensionStateDto) HasProcessDefinitionWithoutTenantId() bool {
	if o != nil && o.ProcessDefinitionWithoutTenantId.IsSet() {
		return true
	}

	return false
}

// SetProcessDefinitionWithoutTenantId gets a reference to the given NullableBool and assigns it to the ProcessDefinitionWithoutTenantId field.
func (o *JobSuspensionStateDto) SetProcessDefinitionWithoutTenantId(v bool) {
	o.ProcessDefinitionWithoutTenantId.Set(&v)
}
// SetProcessDefinitionWithoutTenantIdNil sets the value for ProcessDefinitionWithoutTenantId to be an explicit nil
func (o *JobSuspensionStateDto) SetProcessDefinitionWithoutTenantIdNil() {
	o.ProcessDefinitionWithoutTenantId.Set(nil)
}

// UnsetProcessDefinitionWithoutTenantId ensures that no value is present for ProcessDefinitionWithoutTenantId, not even an explicit nil
func (o *JobSuspensionStateDto) UnsetProcessDefinitionWithoutTenantId() {
	o.ProcessDefinitionWithoutTenantId.Unset()
}

func (o JobSuspensionStateDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o JobSuspensionStateDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Suspended.IsSet() {
		toSerialize["suspended"] = o.Suspended.Get()
	}
	if o.JobDefinitionId.IsSet() {
		toSerialize["jobDefinitionId"] = o.JobDefinitionId.Get()
	}
	if o.ProcessDefinitionId.IsSet() {
		toSerialize["processDefinitionId"] = o.ProcessDefinitionId.Get()
	}
	if o.ProcessInstanceId.IsSet() {
		toSerialize["processInstanceId"] = o.ProcessInstanceId.Get()
	}
	if o.ProcessDefinitionKey.IsSet() {
		toSerialize["processDefinitionKey"] = o.ProcessDefinitionKey.Get()
	}
	if o.ProcessDefinitionTenantId.IsSet() {
		toSerialize["processDefinitionTenantId"] = o.ProcessDefinitionTenantId.Get()
	}
	if o.ProcessDefinitionWithoutTenantId.IsSet() {
		toSerialize["processDefinitionWithoutTenantId"] = o.ProcessDefinitionWithoutTenantId.Get()
	}
	return toSerialize, nil
}

type NullableJobSuspensionStateDto struct {
	value *JobSuspensionStateDto
	isSet bool
}

func (v NullableJobSuspensionStateDto) Get() *JobSuspensionStateDto {
	return v.value
}

func (v *NullableJobSuspensionStateDto) Set(val *JobSuspensionStateDto) {
	v.value = val
	v.isSet = true
}

func (v NullableJobSuspensionStateDto) IsSet() bool {
	return v.isSet
}

func (v *NullableJobSuspensionStateDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJobSuspensionStateDto(val *JobSuspensionStateDto) *NullableJobSuspensionStateDto {
	return &NullableJobSuspensionStateDto{value: val, isSet: true}
}

func (v NullableJobSuspensionStateDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJobSuspensionStateDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


