/*
Camunda Platform REST API

OpenApi Spec for Camunda Platform REST API.

API version: 7.21.2-ee
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package camundarestgo

import (
	"encoding/json"
)

// checks if the TaskCountByCandidateGroupResultDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TaskCountByCandidateGroupResultDto{}

// TaskCountByCandidateGroupResultDto struct for TaskCountByCandidateGroupResultDto
type TaskCountByCandidateGroupResultDto struct {
	// The name of the candidate group. If there are tasks without a group name, the value will be `null`
	GroupName NullableString `json:"groupName,omitempty"`
	// The number of tasks which have the group name as candidate group.
	TaskCount NullableInt32 `json:"taskCount,omitempty"`
}

// NewTaskCountByCandidateGroupResultDto instantiates a new TaskCountByCandidateGroupResultDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTaskCountByCandidateGroupResultDto() *TaskCountByCandidateGroupResultDto {
	this := TaskCountByCandidateGroupResultDto{}
	return &this
}

// NewTaskCountByCandidateGroupResultDtoWithDefaults instantiates a new TaskCountByCandidateGroupResultDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTaskCountByCandidateGroupResultDtoWithDefaults() *TaskCountByCandidateGroupResultDto {
	this := TaskCountByCandidateGroupResultDto{}
	return &this
}

// GetGroupName returns the GroupName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TaskCountByCandidateGroupResultDto) GetGroupName() string {
	if o == nil || IsNil(o.GroupName.Get()) {
		var ret string
		return ret
	}
	return *o.GroupName.Get()
}

// GetGroupNameOk returns a tuple with the GroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TaskCountByCandidateGroupResultDto) GetGroupNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GroupName.Get(), o.GroupName.IsSet()
}

// HasGroupName returns a boolean if a field has been set.
func (o *TaskCountByCandidateGroupResultDto) HasGroupName() bool {
	if o != nil && o.GroupName.IsSet() {
		return true
	}

	return false
}

// SetGroupName gets a reference to the given NullableString and assigns it to the GroupName field.
func (o *TaskCountByCandidateGroupResultDto) SetGroupName(v string) {
	o.GroupName.Set(&v)
}
// SetGroupNameNil sets the value for GroupName to be an explicit nil
func (o *TaskCountByCandidateGroupResultDto) SetGroupNameNil() {
	o.GroupName.Set(nil)
}

// UnsetGroupName ensures that no value is present for GroupName, not even an explicit nil
func (o *TaskCountByCandidateGroupResultDto) UnsetGroupName() {
	o.GroupName.Unset()
}

// GetTaskCount returns the TaskCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TaskCountByCandidateGroupResultDto) GetTaskCount() int32 {
	if o == nil || IsNil(o.TaskCount.Get()) {
		var ret int32
		return ret
	}
	return *o.TaskCount.Get()
}

// GetTaskCountOk returns a tuple with the TaskCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TaskCountByCandidateGroupResultDto) GetTaskCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.TaskCount.Get(), o.TaskCount.IsSet()
}

// HasTaskCount returns a boolean if a field has been set.
func (o *TaskCountByCandidateGroupResultDto) HasTaskCount() bool {
	if o != nil && o.TaskCount.IsSet() {
		return true
	}

	return false
}

// SetTaskCount gets a reference to the given NullableInt32 and assigns it to the TaskCount field.
func (o *TaskCountByCandidateGroupResultDto) SetTaskCount(v int32) {
	o.TaskCount.Set(&v)
}
// SetTaskCountNil sets the value for TaskCount to be an explicit nil
func (o *TaskCountByCandidateGroupResultDto) SetTaskCountNil() {
	o.TaskCount.Set(nil)
}

// UnsetTaskCount ensures that no value is present for TaskCount, not even an explicit nil
func (o *TaskCountByCandidateGroupResultDto) UnsetTaskCount() {
	o.TaskCount.Unset()
}

func (o TaskCountByCandidateGroupResultDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TaskCountByCandidateGroupResultDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.GroupName.IsSet() {
		toSerialize["groupName"] = o.GroupName.Get()
	}
	if o.TaskCount.IsSet() {
		toSerialize["taskCount"] = o.TaskCount.Get()
	}
	return toSerialize, nil
}

type NullableTaskCountByCandidateGroupResultDto struct {
	value *TaskCountByCandidateGroupResultDto
	isSet bool
}

func (v NullableTaskCountByCandidateGroupResultDto) Get() *TaskCountByCandidateGroupResultDto {
	return v.value
}

func (v *NullableTaskCountByCandidateGroupResultDto) Set(val *TaskCountByCandidateGroupResultDto) {
	v.value = val
	v.isSet = true
}

func (v NullableTaskCountByCandidateGroupResultDto) IsSet() bool {
	return v.isSet
}

func (v *NullableTaskCountByCandidateGroupResultDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTaskCountByCandidateGroupResultDto(val *TaskCountByCandidateGroupResultDto) *NullableTaskCountByCandidateGroupResultDto {
	return &NullableTaskCountByCandidateGroupResultDto{value: val, isSet: true}
}

func (v NullableTaskCountByCandidateGroupResultDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTaskCountByCandidateGroupResultDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


