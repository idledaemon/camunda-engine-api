/*
Camunda Platform REST API

OpenApi Spec for Camunda Platform REST API.

API version: 7.21.2-ee
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package camundarestgo

import (
	"encoding/json"
)

// checks if the JobDefinitionPriorityDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &JobDefinitionPriorityDto{}

// JobDefinitionPriorityDto struct for JobDefinitionPriorityDto
type JobDefinitionPriorityDto struct {
	// The new execution priority number for jobs of the given definition. The definition's priority can be reset by using the value `null`. In that case, the job definition's priority no longer applies but a new job's priority is determined as specified in the process model.
	Priority NullableInt64 `json:"priority,omitempty"`
	// A boolean value indicating whether existing jobs of the given definition should receive the priority as well. Default value is `false`. Can only be `true` when the __priority__ parameter is not `null`.
	IncludeJobs NullableBool `json:"includeJobs,omitempty"`
}

// NewJobDefinitionPriorityDto instantiates a new JobDefinitionPriorityDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJobDefinitionPriorityDto() *JobDefinitionPriorityDto {
	this := JobDefinitionPriorityDto{}
	return &this
}

// NewJobDefinitionPriorityDtoWithDefaults instantiates a new JobDefinitionPriorityDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJobDefinitionPriorityDtoWithDefaults() *JobDefinitionPriorityDto {
	this := JobDefinitionPriorityDto{}
	return &this
}

// GetPriority returns the Priority field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *JobDefinitionPriorityDto) GetPriority() int64 {
	if o == nil || IsNil(o.Priority.Get()) {
		var ret int64
		return ret
	}
	return *o.Priority.Get()
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *JobDefinitionPriorityDto) GetPriorityOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Priority.Get(), o.Priority.IsSet()
}

// HasPriority returns a boolean if a field has been set.
func (o *JobDefinitionPriorityDto) HasPriority() bool {
	if o != nil && o.Priority.IsSet() {
		return true
	}

	return false
}

// SetPriority gets a reference to the given NullableInt64 and assigns it to the Priority field.
func (o *JobDefinitionPriorityDto) SetPriority(v int64) {
	o.Priority.Set(&v)
}
// SetPriorityNil sets the value for Priority to be an explicit nil
func (o *JobDefinitionPriorityDto) SetPriorityNil() {
	o.Priority.Set(nil)
}

// UnsetPriority ensures that no value is present for Priority, not even an explicit nil
func (o *JobDefinitionPriorityDto) UnsetPriority() {
	o.Priority.Unset()
}

// GetIncludeJobs returns the IncludeJobs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *JobDefinitionPriorityDto) GetIncludeJobs() bool {
	if o == nil || IsNil(o.IncludeJobs.Get()) {
		var ret bool
		return ret
	}
	return *o.IncludeJobs.Get()
}

// GetIncludeJobsOk returns a tuple with the IncludeJobs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *JobDefinitionPriorityDto) GetIncludeJobsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IncludeJobs.Get(), o.IncludeJobs.IsSet()
}

// HasIncludeJobs returns a boolean if a field has been set.
func (o *JobDefinitionPriorityDto) HasIncludeJobs() bool {
	if o != nil && o.IncludeJobs.IsSet() {
		return true
	}

	return false
}

// SetIncludeJobs gets a reference to the given NullableBool and assigns it to the IncludeJobs field.
func (o *JobDefinitionPriorityDto) SetIncludeJobs(v bool) {
	o.IncludeJobs.Set(&v)
}
// SetIncludeJobsNil sets the value for IncludeJobs to be an explicit nil
func (o *JobDefinitionPriorityDto) SetIncludeJobsNil() {
	o.IncludeJobs.Set(nil)
}

// UnsetIncludeJobs ensures that no value is present for IncludeJobs, not even an explicit nil
func (o *JobDefinitionPriorityDto) UnsetIncludeJobs() {
	o.IncludeJobs.Unset()
}

func (o JobDefinitionPriorityDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o JobDefinitionPriorityDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Priority.IsSet() {
		toSerialize["priority"] = o.Priority.Get()
	}
	if o.IncludeJobs.IsSet() {
		toSerialize["includeJobs"] = o.IncludeJobs.Get()
	}
	return toSerialize, nil
}

type NullableJobDefinitionPriorityDto struct {
	value *JobDefinitionPriorityDto
	isSet bool
}

func (v NullableJobDefinitionPriorityDto) Get() *JobDefinitionPriorityDto {
	return v.value
}

func (v *NullableJobDefinitionPriorityDto) Set(val *JobDefinitionPriorityDto) {
	v.value = val
	v.isSet = true
}

func (v NullableJobDefinitionPriorityDto) IsSet() bool {
	return v.isSet
}

func (v *NullableJobDefinitionPriorityDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJobDefinitionPriorityDto(val *JobDefinitionPriorityDto) *NullableJobDefinitionPriorityDto {
	return &NullableJobDefinitionPriorityDto{value: val, isSet: true}
}

func (v NullableJobDefinitionPriorityDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJobDefinitionPriorityDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


