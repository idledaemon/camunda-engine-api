/*
Camunda Platform REST API

OpenApi Spec for Camunda Platform REST API.

API version: 7.21.2-ee
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package camundarestgo

import (
	"encoding/json"
)

// checks if the MessageCorrelationResultWithVariableDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MessageCorrelationResultWithVariableDto{}

// MessageCorrelationResultWithVariableDto The `processInstance` property only has a value if the resultType is set to `ProcessDefinition`. The processInstance with the properties as described in the [get single instance](https://docs.camunda.org/manual/7.21/reference/rest/process-instance/get/) method.  The `execution` property only has a value if the resultType is set to `Execution`. The execution with the properties as described in the [get single execution](https://docs.camunda.org/manual/7.21/reference/rest/execution/get/) method.
type MessageCorrelationResultWithVariableDto struct {
	// Indicates if the message was correlated to a message start event or an  intermediate message catching event. In the first case, the resultType is  `ProcessDefinition` and otherwise `Execution`.
	ResultType NullableString `json:"resultType,omitempty"`
	ProcessInstance *ProcessInstanceDto `json:"processInstance,omitempty"`
	Execution *ExecutionDto `json:"execution,omitempty"`
	// This property is returned if the `variablesInResultEnabled` is set to `true`. Contains a list of the process variables. 
	Variables map[string]VariableValueDto `json:"variables,omitempty"`
}

// NewMessageCorrelationResultWithVariableDto instantiates a new MessageCorrelationResultWithVariableDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMessageCorrelationResultWithVariableDto() *MessageCorrelationResultWithVariableDto {
	this := MessageCorrelationResultWithVariableDto{}
	return &this
}

// NewMessageCorrelationResultWithVariableDtoWithDefaults instantiates a new MessageCorrelationResultWithVariableDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMessageCorrelationResultWithVariableDtoWithDefaults() *MessageCorrelationResultWithVariableDto {
	this := MessageCorrelationResultWithVariableDto{}
	return &this
}

// GetResultType returns the ResultType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MessageCorrelationResultWithVariableDto) GetResultType() string {
	if o == nil || IsNil(o.ResultType.Get()) {
		var ret string
		return ret
	}
	return *o.ResultType.Get()
}

// GetResultTypeOk returns a tuple with the ResultType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MessageCorrelationResultWithVariableDto) GetResultTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ResultType.Get(), o.ResultType.IsSet()
}

// HasResultType returns a boolean if a field has been set.
func (o *MessageCorrelationResultWithVariableDto) HasResultType() bool {
	if o != nil && o.ResultType.IsSet() {
		return true
	}

	return false
}

// SetResultType gets a reference to the given NullableString and assigns it to the ResultType field.
func (o *MessageCorrelationResultWithVariableDto) SetResultType(v string) {
	o.ResultType.Set(&v)
}
// SetResultTypeNil sets the value for ResultType to be an explicit nil
func (o *MessageCorrelationResultWithVariableDto) SetResultTypeNil() {
	o.ResultType.Set(nil)
}

// UnsetResultType ensures that no value is present for ResultType, not even an explicit nil
func (o *MessageCorrelationResultWithVariableDto) UnsetResultType() {
	o.ResultType.Unset()
}

// GetProcessInstance returns the ProcessInstance field value if set, zero value otherwise.
func (o *MessageCorrelationResultWithVariableDto) GetProcessInstance() ProcessInstanceDto {
	if o == nil || IsNil(o.ProcessInstance) {
		var ret ProcessInstanceDto
		return ret
	}
	return *o.ProcessInstance
}

// GetProcessInstanceOk returns a tuple with the ProcessInstance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageCorrelationResultWithVariableDto) GetProcessInstanceOk() (*ProcessInstanceDto, bool) {
	if o == nil || IsNil(o.ProcessInstance) {
		return nil, false
	}
	return o.ProcessInstance, true
}

// HasProcessInstance returns a boolean if a field has been set.
func (o *MessageCorrelationResultWithVariableDto) HasProcessInstance() bool {
	if o != nil && !IsNil(o.ProcessInstance) {
		return true
	}

	return false
}

// SetProcessInstance gets a reference to the given ProcessInstanceDto and assigns it to the ProcessInstance field.
func (o *MessageCorrelationResultWithVariableDto) SetProcessInstance(v ProcessInstanceDto) {
	o.ProcessInstance = &v
}

// GetExecution returns the Execution field value if set, zero value otherwise.
func (o *MessageCorrelationResultWithVariableDto) GetExecution() ExecutionDto {
	if o == nil || IsNil(o.Execution) {
		var ret ExecutionDto
		return ret
	}
	return *o.Execution
}

// GetExecutionOk returns a tuple with the Execution field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageCorrelationResultWithVariableDto) GetExecutionOk() (*ExecutionDto, bool) {
	if o == nil || IsNil(o.Execution) {
		return nil, false
	}
	return o.Execution, true
}

// HasExecution returns a boolean if a field has been set.
func (o *MessageCorrelationResultWithVariableDto) HasExecution() bool {
	if o != nil && !IsNil(o.Execution) {
		return true
	}

	return false
}

// SetExecution gets a reference to the given ExecutionDto and assigns it to the Execution field.
func (o *MessageCorrelationResultWithVariableDto) SetExecution(v ExecutionDto) {
	o.Execution = &v
}

// GetVariables returns the Variables field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MessageCorrelationResultWithVariableDto) GetVariables() map[string]VariableValueDto {
	if o == nil {
		var ret map[string]VariableValueDto
		return ret
	}
	return o.Variables
}

// GetVariablesOk returns a tuple with the Variables field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MessageCorrelationResultWithVariableDto) GetVariablesOk() (*map[string]VariableValueDto, bool) {
	if o == nil || IsNil(o.Variables) {
		return nil, false
	}
	return &o.Variables, true
}

// HasVariables returns a boolean if a field has been set.
func (o *MessageCorrelationResultWithVariableDto) HasVariables() bool {
	if o != nil && !IsNil(o.Variables) {
		return true
	}

	return false
}

// SetVariables gets a reference to the given map[string]VariableValueDto and assigns it to the Variables field.
func (o *MessageCorrelationResultWithVariableDto) SetVariables(v map[string]VariableValueDto) {
	o.Variables = v
}

func (o MessageCorrelationResultWithVariableDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MessageCorrelationResultWithVariableDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ResultType.IsSet() {
		toSerialize["resultType"] = o.ResultType.Get()
	}
	if !IsNil(o.ProcessInstance) {
		toSerialize["processInstance"] = o.ProcessInstance
	}
	if !IsNil(o.Execution) {
		toSerialize["execution"] = o.Execution
	}
	if o.Variables != nil {
		toSerialize["variables"] = o.Variables
	}
	return toSerialize, nil
}

type NullableMessageCorrelationResultWithVariableDto struct {
	value *MessageCorrelationResultWithVariableDto
	isSet bool
}

func (v NullableMessageCorrelationResultWithVariableDto) Get() *MessageCorrelationResultWithVariableDto {
	return v.value
}

func (v *NullableMessageCorrelationResultWithVariableDto) Set(val *MessageCorrelationResultWithVariableDto) {
	v.value = val
	v.isSet = true
}

func (v NullableMessageCorrelationResultWithVariableDto) IsSet() bool {
	return v.isSet
}

func (v *NullableMessageCorrelationResultWithVariableDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMessageCorrelationResultWithVariableDto(val *MessageCorrelationResultWithVariableDto) *NullableMessageCorrelationResultWithVariableDto {
	return &NullableMessageCorrelationResultWithVariableDto{value: val, isSet: true}
}

func (v NullableMessageCorrelationResultWithVariableDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMessageCorrelationResultWithVariableDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


