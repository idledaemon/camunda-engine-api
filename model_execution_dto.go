/*
Camunda Platform REST API

OpenApi Spec for Camunda Platform REST API.

API version: 7.21.2-ee
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package camundarestgo

import (
	"encoding/json"
)

// checks if the ExecutionDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExecutionDto{}

// ExecutionDto struct for ExecutionDto
type ExecutionDto struct {
	// The id of the Execution.
	Id NullableString `json:"id,omitempty"`
	// The id of the root of the execution tree representing the process instance.
	ProcessInstanceId NullableString `json:"processInstanceId,omitempty"`
	// Indicates if the execution is ended.
	Ended NullableBool `json:"ended,omitempty"`
	// The id of the tenant this execution belongs to. Can be `null` if the execution belongs to no single tenant.
	TenantId NullableString `json:"tenantId,omitempty"`
}

// NewExecutionDto instantiates a new ExecutionDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExecutionDto() *ExecutionDto {
	this := ExecutionDto{}
	return &this
}

// NewExecutionDtoWithDefaults instantiates a new ExecutionDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExecutionDtoWithDefaults() *ExecutionDto {
	this := ExecutionDto{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExecutionDto) GetId() string {
	if o == nil || IsNil(o.Id.Get()) {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExecutionDto) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *ExecutionDto) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *ExecutionDto) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *ExecutionDto) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *ExecutionDto) UnsetId() {
	o.Id.Unset()
}

// GetProcessInstanceId returns the ProcessInstanceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExecutionDto) GetProcessInstanceId() string {
	if o == nil || IsNil(o.ProcessInstanceId.Get()) {
		var ret string
		return ret
	}
	return *o.ProcessInstanceId.Get()
}

// GetProcessInstanceIdOk returns a tuple with the ProcessInstanceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExecutionDto) GetProcessInstanceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProcessInstanceId.Get(), o.ProcessInstanceId.IsSet()
}

// HasProcessInstanceId returns a boolean if a field has been set.
func (o *ExecutionDto) HasProcessInstanceId() bool {
	if o != nil && o.ProcessInstanceId.IsSet() {
		return true
	}

	return false
}

// SetProcessInstanceId gets a reference to the given NullableString and assigns it to the ProcessInstanceId field.
func (o *ExecutionDto) SetProcessInstanceId(v string) {
	o.ProcessInstanceId.Set(&v)
}
// SetProcessInstanceIdNil sets the value for ProcessInstanceId to be an explicit nil
func (o *ExecutionDto) SetProcessInstanceIdNil() {
	o.ProcessInstanceId.Set(nil)
}

// UnsetProcessInstanceId ensures that no value is present for ProcessInstanceId, not even an explicit nil
func (o *ExecutionDto) UnsetProcessInstanceId() {
	o.ProcessInstanceId.Unset()
}

// GetEnded returns the Ended field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExecutionDto) GetEnded() bool {
	if o == nil || IsNil(o.Ended.Get()) {
		var ret bool
		return ret
	}
	return *o.Ended.Get()
}

// GetEndedOk returns a tuple with the Ended field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExecutionDto) GetEndedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Ended.Get(), o.Ended.IsSet()
}

// HasEnded returns a boolean if a field has been set.
func (o *ExecutionDto) HasEnded() bool {
	if o != nil && o.Ended.IsSet() {
		return true
	}

	return false
}

// SetEnded gets a reference to the given NullableBool and assigns it to the Ended field.
func (o *ExecutionDto) SetEnded(v bool) {
	o.Ended.Set(&v)
}
// SetEndedNil sets the value for Ended to be an explicit nil
func (o *ExecutionDto) SetEndedNil() {
	o.Ended.Set(nil)
}

// UnsetEnded ensures that no value is present for Ended, not even an explicit nil
func (o *ExecutionDto) UnsetEnded() {
	o.Ended.Unset()
}

// GetTenantId returns the TenantId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExecutionDto) GetTenantId() string {
	if o == nil || IsNil(o.TenantId.Get()) {
		var ret string
		return ret
	}
	return *o.TenantId.Get()
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExecutionDto) GetTenantIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TenantId.Get(), o.TenantId.IsSet()
}

// HasTenantId returns a boolean if a field has been set.
func (o *ExecutionDto) HasTenantId() bool {
	if o != nil && o.TenantId.IsSet() {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given NullableString and assigns it to the TenantId field.
func (o *ExecutionDto) SetTenantId(v string) {
	o.TenantId.Set(&v)
}
// SetTenantIdNil sets the value for TenantId to be an explicit nil
func (o *ExecutionDto) SetTenantIdNil() {
	o.TenantId.Set(nil)
}

// UnsetTenantId ensures that no value is present for TenantId, not even an explicit nil
func (o *ExecutionDto) UnsetTenantId() {
	o.TenantId.Unset()
}

func (o ExecutionDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExecutionDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.ProcessInstanceId.IsSet() {
		toSerialize["processInstanceId"] = o.ProcessInstanceId.Get()
	}
	if o.Ended.IsSet() {
		toSerialize["ended"] = o.Ended.Get()
	}
	if o.TenantId.IsSet() {
		toSerialize["tenantId"] = o.TenantId.Get()
	}
	return toSerialize, nil
}

type NullableExecutionDto struct {
	value *ExecutionDto
	isSet bool
}

func (v NullableExecutionDto) Get() *ExecutionDto {
	return v.value
}

func (v *NullableExecutionDto) Set(val *ExecutionDto) {
	v.value = val
	v.isSet = true
}

func (v NullableExecutionDto) IsSet() bool {
	return v.isSet
}

func (v *NullableExecutionDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExecutionDto(val *ExecutionDto) *NullableExecutionDto {
	return &NullableExecutionDto{value: val, isSet: true}
}

func (v NullableExecutionDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExecutionDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


