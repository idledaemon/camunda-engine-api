/*
Camunda Platform REST API

OpenApi Spec for Camunda Platform REST API.

API version: 7.21.2-ee
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package camundarestgo

import (
	"encoding/json"
)

// checks if the CorrelationMessageDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CorrelationMessageDto{}

// CorrelationMessageDto struct for CorrelationMessageDto
type CorrelationMessageDto struct {
	// The name of the message to deliver.
	MessageName NullableString `json:"messageName,omitempty"`
	// Used for correlation of process instances that wait for incoming messages. Will only correlate to executions that belong to a process instance with the provided business key.
	BusinessKey NullableString `json:"businessKey,omitempty"`
	// Used to correlate the message for a tenant with the given id. Will only correlate to executions and process definitions which belong to the tenant. Must not be supplied in conjunction with a `withoutTenantId`.
	TenantId NullableString `json:"tenantId,omitempty"`
	// A Boolean value that indicates whether the message should only be correlated to executions and process definitions which belong to no tenant or not. Value may only be `true`, as `false` is the default behavior. Must not be supplied in conjunction with a `tenantId`.
	WithoutTenantId NullableBool `json:"withoutTenantId,omitempty"`
	// Used to correlate the message to the process instance with the given id.
	ProcessInstanceId NullableString `json:"processInstanceId,omitempty"`
	// Used for correlation of process instances that wait for incoming messages. Has to be a JSON object containing key-value pairs that are matched against process instance variables during correlation. Each key is a variable name and each value a JSON variable value object with the following properties.
	CorrelationKeys map[string]VariableValueDto `json:"correlationKeys,omitempty"`
	// Local variables used for correlation of executions (process instances) that wait for incoming messages. Has to be a JSON object containing key-value pairs that are matched against local variables during correlation. Each key is a variable name and each value a JSON variable value object with the following properties.
	LocalCorrelationKeys map[string]VariableValueDto `json:"localCorrelationKeys,omitempty"`
	// A map of variables that is injected into the triggered execution or process instance after the message has been delivered. Each key is a variable name and each value a JSON variable value object with the following properties.
	ProcessVariables map[string]VariableValueDto `json:"processVariables,omitempty"`
	// A map of local variables that is injected into the execution waiting on the message. Each key is a variable name and each value a JSON variable value object with the following properties.
	ProcessVariablesLocal map[string]VariableValueDto `json:"processVariablesLocal,omitempty"`
	// A map of variables that is injected into the new scope triggered by message correlation. Each key is a variable name and each value a JSON variable value object with the following properties.
	ProcessVariablesToTriggeredScope map[string]VariableValueDto `json:"processVariablesToTriggeredScope,omitempty"`
	// A Boolean value that indicates whether the message should be correlated to exactly one entity or multiple entities. If the value is set to `false`, the message will be correlated to exactly one entity (execution or process definition). If the value is set to `true`, the message will be correlated to multiple executions and a process definition that can be instantiated by this message in one go.
	All NullableBool `json:"all,omitempty"`
	// A Boolean value that indicates whether the result of the correlation should be returned or not. If this property is set to `true`, there will be returned a list of message correlation result objects. Depending on the all property, there will be either one ore more returned results in the list.  The default value is `false`, which means no result will be returned.
	ResultEnabled NullableBool `json:"resultEnabled,omitempty"`
	// A Boolean value that indicates whether the result of the correlation should contain process variables or not. The parameter resultEnabled should be set to `true` in order to use this it.  The default value is `false`, which means the variables will not be returned.
	VariablesInResultEnabled NullableBool `json:"variablesInResultEnabled,omitempty"`
}

// NewCorrelationMessageDto instantiates a new CorrelationMessageDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCorrelationMessageDto() *CorrelationMessageDto {
	this := CorrelationMessageDto{}
	var withoutTenantId bool = false
	this.WithoutTenantId = *NewNullableBool(&withoutTenantId)
	var all bool = false
	this.All = *NewNullableBool(&all)
	var resultEnabled bool = false
	this.ResultEnabled = *NewNullableBool(&resultEnabled)
	var variablesInResultEnabled bool = false
	this.VariablesInResultEnabled = *NewNullableBool(&variablesInResultEnabled)
	return &this
}

// NewCorrelationMessageDtoWithDefaults instantiates a new CorrelationMessageDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCorrelationMessageDtoWithDefaults() *CorrelationMessageDto {
	this := CorrelationMessageDto{}
	var withoutTenantId bool = false
	this.WithoutTenantId = *NewNullableBool(&withoutTenantId)
	var all bool = false
	this.All = *NewNullableBool(&all)
	var resultEnabled bool = false
	this.ResultEnabled = *NewNullableBool(&resultEnabled)
	var variablesInResultEnabled bool = false
	this.VariablesInResultEnabled = *NewNullableBool(&variablesInResultEnabled)
	return &this
}

// GetMessageName returns the MessageName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CorrelationMessageDto) GetMessageName() string {
	if o == nil || IsNil(o.MessageName.Get()) {
		var ret string
		return ret
	}
	return *o.MessageName.Get()
}

// GetMessageNameOk returns a tuple with the MessageName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CorrelationMessageDto) GetMessageNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MessageName.Get(), o.MessageName.IsSet()
}

// HasMessageName returns a boolean if a field has been set.
func (o *CorrelationMessageDto) HasMessageName() bool {
	if o != nil && o.MessageName.IsSet() {
		return true
	}

	return false
}

// SetMessageName gets a reference to the given NullableString and assigns it to the MessageName field.
func (o *CorrelationMessageDto) SetMessageName(v string) {
	o.MessageName.Set(&v)
}
// SetMessageNameNil sets the value for MessageName to be an explicit nil
func (o *CorrelationMessageDto) SetMessageNameNil() {
	o.MessageName.Set(nil)
}

// UnsetMessageName ensures that no value is present for MessageName, not even an explicit nil
func (o *CorrelationMessageDto) UnsetMessageName() {
	o.MessageName.Unset()
}

// GetBusinessKey returns the BusinessKey field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CorrelationMessageDto) GetBusinessKey() string {
	if o == nil || IsNil(o.BusinessKey.Get()) {
		var ret string
		return ret
	}
	return *o.BusinessKey.Get()
}

// GetBusinessKeyOk returns a tuple with the BusinessKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CorrelationMessageDto) GetBusinessKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BusinessKey.Get(), o.BusinessKey.IsSet()
}

// HasBusinessKey returns a boolean if a field has been set.
func (o *CorrelationMessageDto) HasBusinessKey() bool {
	if o != nil && o.BusinessKey.IsSet() {
		return true
	}

	return false
}

// SetBusinessKey gets a reference to the given NullableString and assigns it to the BusinessKey field.
func (o *CorrelationMessageDto) SetBusinessKey(v string) {
	o.BusinessKey.Set(&v)
}
// SetBusinessKeyNil sets the value for BusinessKey to be an explicit nil
func (o *CorrelationMessageDto) SetBusinessKeyNil() {
	o.BusinessKey.Set(nil)
}

// UnsetBusinessKey ensures that no value is present for BusinessKey, not even an explicit nil
func (o *CorrelationMessageDto) UnsetBusinessKey() {
	o.BusinessKey.Unset()
}

// GetTenantId returns the TenantId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CorrelationMessageDto) GetTenantId() string {
	if o == nil || IsNil(o.TenantId.Get()) {
		var ret string
		return ret
	}
	return *o.TenantId.Get()
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CorrelationMessageDto) GetTenantIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TenantId.Get(), o.TenantId.IsSet()
}

// HasTenantId returns a boolean if a field has been set.
func (o *CorrelationMessageDto) HasTenantId() bool {
	if o != nil && o.TenantId.IsSet() {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given NullableString and assigns it to the TenantId field.
func (o *CorrelationMessageDto) SetTenantId(v string) {
	o.TenantId.Set(&v)
}
// SetTenantIdNil sets the value for TenantId to be an explicit nil
func (o *CorrelationMessageDto) SetTenantIdNil() {
	o.TenantId.Set(nil)
}

// UnsetTenantId ensures that no value is present for TenantId, not even an explicit nil
func (o *CorrelationMessageDto) UnsetTenantId() {
	o.TenantId.Unset()
}

// GetWithoutTenantId returns the WithoutTenantId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CorrelationMessageDto) GetWithoutTenantId() bool {
	if o == nil || IsNil(o.WithoutTenantId.Get()) {
		var ret bool
		return ret
	}
	return *o.WithoutTenantId.Get()
}

// GetWithoutTenantIdOk returns a tuple with the WithoutTenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CorrelationMessageDto) GetWithoutTenantIdOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.WithoutTenantId.Get(), o.WithoutTenantId.IsSet()
}

// HasWithoutTenantId returns a boolean if a field has been set.
func (o *CorrelationMessageDto) HasWithoutTenantId() bool {
	if o != nil && o.WithoutTenantId.IsSet() {
		return true
	}

	return false
}

// SetWithoutTenantId gets a reference to the given NullableBool and assigns it to the WithoutTenantId field.
func (o *CorrelationMessageDto) SetWithoutTenantId(v bool) {
	o.WithoutTenantId.Set(&v)
}
// SetWithoutTenantIdNil sets the value for WithoutTenantId to be an explicit nil
func (o *CorrelationMessageDto) SetWithoutTenantIdNil() {
	o.WithoutTenantId.Set(nil)
}

// UnsetWithoutTenantId ensures that no value is present for WithoutTenantId, not even an explicit nil
func (o *CorrelationMessageDto) UnsetWithoutTenantId() {
	o.WithoutTenantId.Unset()
}

// GetProcessInstanceId returns the ProcessInstanceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CorrelationMessageDto) GetProcessInstanceId() string {
	if o == nil || IsNil(o.ProcessInstanceId.Get()) {
		var ret string
		return ret
	}
	return *o.ProcessInstanceId.Get()
}

// GetProcessInstanceIdOk returns a tuple with the ProcessInstanceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CorrelationMessageDto) GetProcessInstanceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProcessInstanceId.Get(), o.ProcessInstanceId.IsSet()
}

// HasProcessInstanceId returns a boolean if a field has been set.
func (o *CorrelationMessageDto) HasProcessInstanceId() bool {
	if o != nil && o.ProcessInstanceId.IsSet() {
		return true
	}

	return false
}

// SetProcessInstanceId gets a reference to the given NullableString and assigns it to the ProcessInstanceId field.
func (o *CorrelationMessageDto) SetProcessInstanceId(v string) {
	o.ProcessInstanceId.Set(&v)
}
// SetProcessInstanceIdNil sets the value for ProcessInstanceId to be an explicit nil
func (o *CorrelationMessageDto) SetProcessInstanceIdNil() {
	o.ProcessInstanceId.Set(nil)
}

// UnsetProcessInstanceId ensures that no value is present for ProcessInstanceId, not even an explicit nil
func (o *CorrelationMessageDto) UnsetProcessInstanceId() {
	o.ProcessInstanceId.Unset()
}

// GetCorrelationKeys returns the CorrelationKeys field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CorrelationMessageDto) GetCorrelationKeys() map[string]VariableValueDto {
	if o == nil {
		var ret map[string]VariableValueDto
		return ret
	}
	return o.CorrelationKeys
}

// GetCorrelationKeysOk returns a tuple with the CorrelationKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CorrelationMessageDto) GetCorrelationKeysOk() (*map[string]VariableValueDto, bool) {
	if o == nil || IsNil(o.CorrelationKeys) {
		return nil, false
	}
	return &o.CorrelationKeys, true
}

// HasCorrelationKeys returns a boolean if a field has been set.
func (o *CorrelationMessageDto) HasCorrelationKeys() bool {
	if o != nil && !IsNil(o.CorrelationKeys) {
		return true
	}

	return false
}

// SetCorrelationKeys gets a reference to the given map[string]VariableValueDto and assigns it to the CorrelationKeys field.
func (o *CorrelationMessageDto) SetCorrelationKeys(v map[string]VariableValueDto) {
	o.CorrelationKeys = v
}

// GetLocalCorrelationKeys returns the LocalCorrelationKeys field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CorrelationMessageDto) GetLocalCorrelationKeys() map[string]VariableValueDto {
	if o == nil {
		var ret map[string]VariableValueDto
		return ret
	}
	return o.LocalCorrelationKeys
}

// GetLocalCorrelationKeysOk returns a tuple with the LocalCorrelationKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CorrelationMessageDto) GetLocalCorrelationKeysOk() (*map[string]VariableValueDto, bool) {
	if o == nil || IsNil(o.LocalCorrelationKeys) {
		return nil, false
	}
	return &o.LocalCorrelationKeys, true
}

// HasLocalCorrelationKeys returns a boolean if a field has been set.
func (o *CorrelationMessageDto) HasLocalCorrelationKeys() bool {
	if o != nil && !IsNil(o.LocalCorrelationKeys) {
		return true
	}

	return false
}

// SetLocalCorrelationKeys gets a reference to the given map[string]VariableValueDto and assigns it to the LocalCorrelationKeys field.
func (o *CorrelationMessageDto) SetLocalCorrelationKeys(v map[string]VariableValueDto) {
	o.LocalCorrelationKeys = v
}

// GetProcessVariables returns the ProcessVariables field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CorrelationMessageDto) GetProcessVariables() map[string]VariableValueDto {
	if o == nil {
		var ret map[string]VariableValueDto
		return ret
	}
	return o.ProcessVariables
}

// GetProcessVariablesOk returns a tuple with the ProcessVariables field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CorrelationMessageDto) GetProcessVariablesOk() (*map[string]VariableValueDto, bool) {
	if o == nil || IsNil(o.ProcessVariables) {
		return nil, false
	}
	return &o.ProcessVariables, true
}

// HasProcessVariables returns a boolean if a field has been set.
func (o *CorrelationMessageDto) HasProcessVariables() bool {
	if o != nil && !IsNil(o.ProcessVariables) {
		return true
	}

	return false
}

// SetProcessVariables gets a reference to the given map[string]VariableValueDto and assigns it to the ProcessVariables field.
func (o *CorrelationMessageDto) SetProcessVariables(v map[string]VariableValueDto) {
	o.ProcessVariables = v
}

// GetProcessVariablesLocal returns the ProcessVariablesLocal field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CorrelationMessageDto) GetProcessVariablesLocal() map[string]VariableValueDto {
	if o == nil {
		var ret map[string]VariableValueDto
		return ret
	}
	return o.ProcessVariablesLocal
}

// GetProcessVariablesLocalOk returns a tuple with the ProcessVariablesLocal field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CorrelationMessageDto) GetProcessVariablesLocalOk() (*map[string]VariableValueDto, bool) {
	if o == nil || IsNil(o.ProcessVariablesLocal) {
		return nil, false
	}
	return &o.ProcessVariablesLocal, true
}

// HasProcessVariablesLocal returns a boolean if a field has been set.
func (o *CorrelationMessageDto) HasProcessVariablesLocal() bool {
	if o != nil && !IsNil(o.ProcessVariablesLocal) {
		return true
	}

	return false
}

// SetProcessVariablesLocal gets a reference to the given map[string]VariableValueDto and assigns it to the ProcessVariablesLocal field.
func (o *CorrelationMessageDto) SetProcessVariablesLocal(v map[string]VariableValueDto) {
	o.ProcessVariablesLocal = v
}

// GetProcessVariablesToTriggeredScope returns the ProcessVariablesToTriggeredScope field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CorrelationMessageDto) GetProcessVariablesToTriggeredScope() map[string]VariableValueDto {
	if o == nil {
		var ret map[string]VariableValueDto
		return ret
	}
	return o.ProcessVariablesToTriggeredScope
}

// GetProcessVariablesToTriggeredScopeOk returns a tuple with the ProcessVariablesToTriggeredScope field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CorrelationMessageDto) GetProcessVariablesToTriggeredScopeOk() (*map[string]VariableValueDto, bool) {
	if o == nil || IsNil(o.ProcessVariablesToTriggeredScope) {
		return nil, false
	}
	return &o.ProcessVariablesToTriggeredScope, true
}

// HasProcessVariablesToTriggeredScope returns a boolean if a field has been set.
func (o *CorrelationMessageDto) HasProcessVariablesToTriggeredScope() bool {
	if o != nil && !IsNil(o.ProcessVariablesToTriggeredScope) {
		return true
	}

	return false
}

// SetProcessVariablesToTriggeredScope gets a reference to the given map[string]VariableValueDto and assigns it to the ProcessVariablesToTriggeredScope field.
func (o *CorrelationMessageDto) SetProcessVariablesToTriggeredScope(v map[string]VariableValueDto) {
	o.ProcessVariablesToTriggeredScope = v
}

// GetAll returns the All field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CorrelationMessageDto) GetAll() bool {
	if o == nil || IsNil(o.All.Get()) {
		var ret bool
		return ret
	}
	return *o.All.Get()
}

// GetAllOk returns a tuple with the All field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CorrelationMessageDto) GetAllOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.All.Get(), o.All.IsSet()
}

// HasAll returns a boolean if a field has been set.
func (o *CorrelationMessageDto) HasAll() bool {
	if o != nil && o.All.IsSet() {
		return true
	}

	return false
}

// SetAll gets a reference to the given NullableBool and assigns it to the All field.
func (o *CorrelationMessageDto) SetAll(v bool) {
	o.All.Set(&v)
}
// SetAllNil sets the value for All to be an explicit nil
func (o *CorrelationMessageDto) SetAllNil() {
	o.All.Set(nil)
}

// UnsetAll ensures that no value is present for All, not even an explicit nil
func (o *CorrelationMessageDto) UnsetAll() {
	o.All.Unset()
}

// GetResultEnabled returns the ResultEnabled field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CorrelationMessageDto) GetResultEnabled() bool {
	if o == nil || IsNil(o.ResultEnabled.Get()) {
		var ret bool
		return ret
	}
	return *o.ResultEnabled.Get()
}

// GetResultEnabledOk returns a tuple with the ResultEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CorrelationMessageDto) GetResultEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ResultEnabled.Get(), o.ResultEnabled.IsSet()
}

// HasResultEnabled returns a boolean if a field has been set.
func (o *CorrelationMessageDto) HasResultEnabled() bool {
	if o != nil && o.ResultEnabled.IsSet() {
		return true
	}

	return false
}

// SetResultEnabled gets a reference to the given NullableBool and assigns it to the ResultEnabled field.
func (o *CorrelationMessageDto) SetResultEnabled(v bool) {
	o.ResultEnabled.Set(&v)
}
// SetResultEnabledNil sets the value for ResultEnabled to be an explicit nil
func (o *CorrelationMessageDto) SetResultEnabledNil() {
	o.ResultEnabled.Set(nil)
}

// UnsetResultEnabled ensures that no value is present for ResultEnabled, not even an explicit nil
func (o *CorrelationMessageDto) UnsetResultEnabled() {
	o.ResultEnabled.Unset()
}

// GetVariablesInResultEnabled returns the VariablesInResultEnabled field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CorrelationMessageDto) GetVariablesInResultEnabled() bool {
	if o == nil || IsNil(o.VariablesInResultEnabled.Get()) {
		var ret bool
		return ret
	}
	return *o.VariablesInResultEnabled.Get()
}

// GetVariablesInResultEnabledOk returns a tuple with the VariablesInResultEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CorrelationMessageDto) GetVariablesInResultEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.VariablesInResultEnabled.Get(), o.VariablesInResultEnabled.IsSet()
}

// HasVariablesInResultEnabled returns a boolean if a field has been set.
func (o *CorrelationMessageDto) HasVariablesInResultEnabled() bool {
	if o != nil && o.VariablesInResultEnabled.IsSet() {
		return true
	}

	return false
}

// SetVariablesInResultEnabled gets a reference to the given NullableBool and assigns it to the VariablesInResultEnabled field.
func (o *CorrelationMessageDto) SetVariablesInResultEnabled(v bool) {
	o.VariablesInResultEnabled.Set(&v)
}
// SetVariablesInResultEnabledNil sets the value for VariablesInResultEnabled to be an explicit nil
func (o *CorrelationMessageDto) SetVariablesInResultEnabledNil() {
	o.VariablesInResultEnabled.Set(nil)
}

// UnsetVariablesInResultEnabled ensures that no value is present for VariablesInResultEnabled, not even an explicit nil
func (o *CorrelationMessageDto) UnsetVariablesInResultEnabled() {
	o.VariablesInResultEnabled.Unset()
}

func (o CorrelationMessageDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CorrelationMessageDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.MessageName.IsSet() {
		toSerialize["messageName"] = o.MessageName.Get()
	}
	if o.BusinessKey.IsSet() {
		toSerialize["businessKey"] = o.BusinessKey.Get()
	}
	if o.TenantId.IsSet() {
		toSerialize["tenantId"] = o.TenantId.Get()
	}
	if o.WithoutTenantId.IsSet() {
		toSerialize["withoutTenantId"] = o.WithoutTenantId.Get()
	}
	if o.ProcessInstanceId.IsSet() {
		toSerialize["processInstanceId"] = o.ProcessInstanceId.Get()
	}
	if o.CorrelationKeys != nil {
		toSerialize["correlationKeys"] = o.CorrelationKeys
	}
	if o.LocalCorrelationKeys != nil {
		toSerialize["localCorrelationKeys"] = o.LocalCorrelationKeys
	}
	if o.ProcessVariables != nil {
		toSerialize["processVariables"] = o.ProcessVariables
	}
	if o.ProcessVariablesLocal != nil {
		toSerialize["processVariablesLocal"] = o.ProcessVariablesLocal
	}
	if o.ProcessVariablesToTriggeredScope != nil {
		toSerialize["processVariablesToTriggeredScope"] = o.ProcessVariablesToTriggeredScope
	}
	if o.All.IsSet() {
		toSerialize["all"] = o.All.Get()
	}
	if o.ResultEnabled.IsSet() {
		toSerialize["resultEnabled"] = o.ResultEnabled.Get()
	}
	if o.VariablesInResultEnabled.IsSet() {
		toSerialize["variablesInResultEnabled"] = o.VariablesInResultEnabled.Get()
	}
	return toSerialize, nil
}

type NullableCorrelationMessageDto struct {
	value *CorrelationMessageDto
	isSet bool
}

func (v NullableCorrelationMessageDto) Get() *CorrelationMessageDto {
	return v.value
}

func (v *NullableCorrelationMessageDto) Set(val *CorrelationMessageDto) {
	v.value = val
	v.isSet = true
}

func (v NullableCorrelationMessageDto) IsSet() bool {
	return v.isSet
}

func (v *NullableCorrelationMessageDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCorrelationMessageDto(val *CorrelationMessageDto) *NullableCorrelationMessageDto {
	return &NullableCorrelationMessageDto{value: val, isSet: true}
}

func (v NullableCorrelationMessageDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCorrelationMessageDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


