/*
Camunda Platform REST API

OpenApi Spec for Camunda Platform REST API.

API version: 7.21.2-ee
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package camundarestgo

import (
	"encoding/json"
)

// checks if the LockExternalTaskDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LockExternalTaskDto{}

// LockExternalTaskDto struct for LockExternalTaskDto
type LockExternalTaskDto struct {
	// **Mandatory.** The ID of the worker who is performing the operation on the external task. If the task is already locked, must match the id of the worker who has most recently locked the task.
	WorkerId *string `json:"workerId,omitempty"`
	// The duration to lock the external task for in milliseconds. **Note:** Attempting to lock an already locked external task with the same `workerId` will succeed and a new lock duration will be set, starting from the current moment.
	LockDuration *int64 `json:"lockDuration,omitempty"`
}

// NewLockExternalTaskDto instantiates a new LockExternalTaskDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLockExternalTaskDto() *LockExternalTaskDto {
	this := LockExternalTaskDto{}
	return &this
}

// NewLockExternalTaskDtoWithDefaults instantiates a new LockExternalTaskDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLockExternalTaskDtoWithDefaults() *LockExternalTaskDto {
	this := LockExternalTaskDto{}
	return &this
}

// GetWorkerId returns the WorkerId field value if set, zero value otherwise.
func (o *LockExternalTaskDto) GetWorkerId() string {
	if o == nil || IsNil(o.WorkerId) {
		var ret string
		return ret
	}
	return *o.WorkerId
}

// GetWorkerIdOk returns a tuple with the WorkerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LockExternalTaskDto) GetWorkerIdOk() (*string, bool) {
	if o == nil || IsNil(o.WorkerId) {
		return nil, false
	}
	return o.WorkerId, true
}

// HasWorkerId returns a boolean if a field has been set.
func (o *LockExternalTaskDto) HasWorkerId() bool {
	if o != nil && !IsNil(o.WorkerId) {
		return true
	}

	return false
}

// SetWorkerId gets a reference to the given string and assigns it to the WorkerId field.
func (o *LockExternalTaskDto) SetWorkerId(v string) {
	o.WorkerId = &v
}

// GetLockDuration returns the LockDuration field value if set, zero value otherwise.
func (o *LockExternalTaskDto) GetLockDuration() int64 {
	if o == nil || IsNil(o.LockDuration) {
		var ret int64
		return ret
	}
	return *o.LockDuration
}

// GetLockDurationOk returns a tuple with the LockDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LockExternalTaskDto) GetLockDurationOk() (*int64, bool) {
	if o == nil || IsNil(o.LockDuration) {
		return nil, false
	}
	return o.LockDuration, true
}

// HasLockDuration returns a boolean if a field has been set.
func (o *LockExternalTaskDto) HasLockDuration() bool {
	if o != nil && !IsNil(o.LockDuration) {
		return true
	}

	return false
}

// SetLockDuration gets a reference to the given int64 and assigns it to the LockDuration field.
func (o *LockExternalTaskDto) SetLockDuration(v int64) {
	o.LockDuration = &v
}

func (o LockExternalTaskDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LockExternalTaskDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.WorkerId) {
		toSerialize["workerId"] = o.WorkerId
	}
	if !IsNil(o.LockDuration) {
		toSerialize["lockDuration"] = o.LockDuration
	}
	return toSerialize, nil
}

type NullableLockExternalTaskDto struct {
	value *LockExternalTaskDto
	isSet bool
}

func (v NullableLockExternalTaskDto) Get() *LockExternalTaskDto {
	return v.value
}

func (v *NullableLockExternalTaskDto) Set(val *LockExternalTaskDto) {
	v.value = val
	v.isSet = true
}

func (v NullableLockExternalTaskDto) IsSet() bool {
	return v.isSet
}

func (v *NullableLockExternalTaskDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLockExternalTaskDto(val *LockExternalTaskDto) *NullableLockExternalTaskDto {
	return &NullableLockExternalTaskDto{value: val, isSet: true}
}

func (v NullableLockExternalTaskDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLockExternalTaskDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


