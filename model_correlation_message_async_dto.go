/*
Camunda Platform REST API

OpenApi Spec for Camunda Platform REST API.

API version: 7.21.2-ee
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package camundarestgo

import (
	"encoding/json"
)

// checks if the CorrelationMessageAsyncDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CorrelationMessageAsyncDto{}

// CorrelationMessageAsyncDto struct for CorrelationMessageAsyncDto
type CorrelationMessageAsyncDto struct {
	// The name of the message to correlate. Corresponds to the 'name' element of the message defined in BPMN 2.0 XML. Can be null to correlate by other criteria only.
	MessageName NullableString `json:"messageName,omitempty"`
	// A list of process instance ids that define a group of process instances to which the operation will correlate a message.  Please note that if `processInstanceIds`, `processInstanceQuery` and `historicProcessInstanceQuery` are defined, the resulting operation will be performed on the union of these sets.
	ProcessInstanceIds []string `json:"processInstanceIds,omitempty"`
	ProcessInstanceQuery *ProcessInstanceQueryDto `json:"processInstanceQuery,omitempty"`
	HistoricProcessInstanceQuery *HistoricProcessInstanceQueryDto `json:"historicProcessInstanceQuery,omitempty"`
	// All variables the operation will set in the root scope of the process instances the message is correlated to.
	Variables map[string]VariableValueDto `json:"variables,omitempty"`
}

// NewCorrelationMessageAsyncDto instantiates a new CorrelationMessageAsyncDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCorrelationMessageAsyncDto() *CorrelationMessageAsyncDto {
	this := CorrelationMessageAsyncDto{}
	return &this
}

// NewCorrelationMessageAsyncDtoWithDefaults instantiates a new CorrelationMessageAsyncDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCorrelationMessageAsyncDtoWithDefaults() *CorrelationMessageAsyncDto {
	this := CorrelationMessageAsyncDto{}
	return &this
}

// GetMessageName returns the MessageName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CorrelationMessageAsyncDto) GetMessageName() string {
	if o == nil || IsNil(o.MessageName.Get()) {
		var ret string
		return ret
	}
	return *o.MessageName.Get()
}

// GetMessageNameOk returns a tuple with the MessageName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CorrelationMessageAsyncDto) GetMessageNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MessageName.Get(), o.MessageName.IsSet()
}

// HasMessageName returns a boolean if a field has been set.
func (o *CorrelationMessageAsyncDto) HasMessageName() bool {
	if o != nil && o.MessageName.IsSet() {
		return true
	}

	return false
}

// SetMessageName gets a reference to the given NullableString and assigns it to the MessageName field.
func (o *CorrelationMessageAsyncDto) SetMessageName(v string) {
	o.MessageName.Set(&v)
}
// SetMessageNameNil sets the value for MessageName to be an explicit nil
func (o *CorrelationMessageAsyncDto) SetMessageNameNil() {
	o.MessageName.Set(nil)
}

// UnsetMessageName ensures that no value is present for MessageName, not even an explicit nil
func (o *CorrelationMessageAsyncDto) UnsetMessageName() {
	o.MessageName.Unset()
}

// GetProcessInstanceIds returns the ProcessInstanceIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CorrelationMessageAsyncDto) GetProcessInstanceIds() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.ProcessInstanceIds
}

// GetProcessInstanceIdsOk returns a tuple with the ProcessInstanceIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CorrelationMessageAsyncDto) GetProcessInstanceIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.ProcessInstanceIds) {
		return nil, false
	}
	return o.ProcessInstanceIds, true
}

// HasProcessInstanceIds returns a boolean if a field has been set.
func (o *CorrelationMessageAsyncDto) HasProcessInstanceIds() bool {
	if o != nil && !IsNil(o.ProcessInstanceIds) {
		return true
	}

	return false
}

// SetProcessInstanceIds gets a reference to the given []string and assigns it to the ProcessInstanceIds field.
func (o *CorrelationMessageAsyncDto) SetProcessInstanceIds(v []string) {
	o.ProcessInstanceIds = v
}

// GetProcessInstanceQuery returns the ProcessInstanceQuery field value if set, zero value otherwise.
func (o *CorrelationMessageAsyncDto) GetProcessInstanceQuery() ProcessInstanceQueryDto {
	if o == nil || IsNil(o.ProcessInstanceQuery) {
		var ret ProcessInstanceQueryDto
		return ret
	}
	return *o.ProcessInstanceQuery
}

// GetProcessInstanceQueryOk returns a tuple with the ProcessInstanceQuery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorrelationMessageAsyncDto) GetProcessInstanceQueryOk() (*ProcessInstanceQueryDto, bool) {
	if o == nil || IsNil(o.ProcessInstanceQuery) {
		return nil, false
	}
	return o.ProcessInstanceQuery, true
}

// HasProcessInstanceQuery returns a boolean if a field has been set.
func (o *CorrelationMessageAsyncDto) HasProcessInstanceQuery() bool {
	if o != nil && !IsNil(o.ProcessInstanceQuery) {
		return true
	}

	return false
}

// SetProcessInstanceQuery gets a reference to the given ProcessInstanceQueryDto and assigns it to the ProcessInstanceQuery field.
func (o *CorrelationMessageAsyncDto) SetProcessInstanceQuery(v ProcessInstanceQueryDto) {
	o.ProcessInstanceQuery = &v
}

// GetHistoricProcessInstanceQuery returns the HistoricProcessInstanceQuery field value if set, zero value otherwise.
func (o *CorrelationMessageAsyncDto) GetHistoricProcessInstanceQuery() HistoricProcessInstanceQueryDto {
	if o == nil || IsNil(o.HistoricProcessInstanceQuery) {
		var ret HistoricProcessInstanceQueryDto
		return ret
	}
	return *o.HistoricProcessInstanceQuery
}

// GetHistoricProcessInstanceQueryOk returns a tuple with the HistoricProcessInstanceQuery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorrelationMessageAsyncDto) GetHistoricProcessInstanceQueryOk() (*HistoricProcessInstanceQueryDto, bool) {
	if o == nil || IsNil(o.HistoricProcessInstanceQuery) {
		return nil, false
	}
	return o.HistoricProcessInstanceQuery, true
}

// HasHistoricProcessInstanceQuery returns a boolean if a field has been set.
func (o *CorrelationMessageAsyncDto) HasHistoricProcessInstanceQuery() bool {
	if o != nil && !IsNil(o.HistoricProcessInstanceQuery) {
		return true
	}

	return false
}

// SetHistoricProcessInstanceQuery gets a reference to the given HistoricProcessInstanceQueryDto and assigns it to the HistoricProcessInstanceQuery field.
func (o *CorrelationMessageAsyncDto) SetHistoricProcessInstanceQuery(v HistoricProcessInstanceQueryDto) {
	o.HistoricProcessInstanceQuery = &v
}

// GetVariables returns the Variables field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CorrelationMessageAsyncDto) GetVariables() map[string]VariableValueDto {
	if o == nil {
		var ret map[string]VariableValueDto
		return ret
	}
	return o.Variables
}

// GetVariablesOk returns a tuple with the Variables field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CorrelationMessageAsyncDto) GetVariablesOk() (*map[string]VariableValueDto, bool) {
	if o == nil || IsNil(o.Variables) {
		return nil, false
	}
	return &o.Variables, true
}

// HasVariables returns a boolean if a field has been set.
func (o *CorrelationMessageAsyncDto) HasVariables() bool {
	if o != nil && !IsNil(o.Variables) {
		return true
	}

	return false
}

// SetVariables gets a reference to the given map[string]VariableValueDto and assigns it to the Variables field.
func (o *CorrelationMessageAsyncDto) SetVariables(v map[string]VariableValueDto) {
	o.Variables = v
}

func (o CorrelationMessageAsyncDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CorrelationMessageAsyncDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.MessageName.IsSet() {
		toSerialize["messageName"] = o.MessageName.Get()
	}
	if o.ProcessInstanceIds != nil {
		toSerialize["processInstanceIds"] = o.ProcessInstanceIds
	}
	if !IsNil(o.ProcessInstanceQuery) {
		toSerialize["processInstanceQuery"] = o.ProcessInstanceQuery
	}
	if !IsNil(o.HistoricProcessInstanceQuery) {
		toSerialize["historicProcessInstanceQuery"] = o.HistoricProcessInstanceQuery
	}
	if o.Variables != nil {
		toSerialize["variables"] = o.Variables
	}
	return toSerialize, nil
}

type NullableCorrelationMessageAsyncDto struct {
	value *CorrelationMessageAsyncDto
	isSet bool
}

func (v NullableCorrelationMessageAsyncDto) Get() *CorrelationMessageAsyncDto {
	return v.value
}

func (v *NullableCorrelationMessageAsyncDto) Set(val *CorrelationMessageAsyncDto) {
	v.value = val
	v.isSet = true
}

func (v NullableCorrelationMessageAsyncDto) IsSet() bool {
	return v.isSet
}

func (v *NullableCorrelationMessageAsyncDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCorrelationMessageAsyncDto(val *CorrelationMessageAsyncDto) *NullableCorrelationMessageAsyncDto {
	return &NullableCorrelationMessageAsyncDto{value: val, isSet: true}
}

func (v NullableCorrelationMessageAsyncDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCorrelationMessageAsyncDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


