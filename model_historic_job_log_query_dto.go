/*
Camunda Platform REST API

OpenApi Spec for Camunda Platform REST API.

API version: 7.21.2-ee
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package camundarestgo

import (
	"encoding/json"
)

// checks if the HistoricJobLogQueryDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HistoricJobLogQueryDto{}

// HistoricJobLogQueryDto A Historic Job Log instance query which defines a list of Historic Job Log instances
type HistoricJobLogQueryDto struct {
	// Filter by historic job log id.
	LogId NullableString `json:"logId,omitempty"`
	// Filter by job id.
	JobId NullableString `json:"jobId,omitempty"`
	// Filter by job exception message.
	JobExceptionMessage NullableString `json:"jobExceptionMessage,omitempty"`
	// Filter by job definition id.
	JobDefinitionId NullableString `json:"jobDefinitionId,omitempty"`
	// Filter by job definition type. See the [User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/the-job-executor/#job-creation) for more information about job definition types.
	JobDefinitionType NullableString `json:"jobDefinitionType,omitempty"`
	// Filter by job definition configuration.
	JobDefinitionConfiguration NullableString `json:"jobDefinitionConfiguration,omitempty"`
	// Only include historic job logs which belong to one of the passed activity ids.
	ActivityIdIn []string `json:"activityIdIn,omitempty"`
	// Only include historic job logs which belong to failures of one of the passed activity ids.
	FailedActivityIdIn []string `json:"failedActivityIdIn,omitempty"`
	// Only include historic job logs which belong to one of the passed execution ids.
	ExecutionIdIn []string `json:"executionIdIn,omitempty"`
	// Filter by process instance id.
	ProcessInstanceId NullableString `json:"processInstanceId,omitempty"`
	// Filter by process definition id.
	ProcessDefinitionId NullableString `json:"processDefinitionId,omitempty"`
	// Filter by process definition key.
	ProcessDefinitionKey NullableString `json:"processDefinitionKey,omitempty"`
	// Filter by deployment id.
	DeploymentId NullableString `json:"deploymentId,omitempty"`
	// Only include historic job log entries which belong to one of the passed and comma- separated tenant ids.
	TenantIdIn []string `json:"tenantIdIn,omitempty"`
	// Only include historic job log entries that belong to no tenant. Value may only be `true`, as `false` is the default behavior.
	WithoutTenantId NullableBool `json:"withoutTenantId,omitempty"`
	// Filter by hostname.
	Hostname NullableString `json:"hostname,omitempty"`
	// Only include logs for which the associated job had a priority lower than or equal to the given value. Value must be a valid `long` value.
	JobPriorityLowerThanOrEquals NullableInt64 `json:"jobPriorityLowerThanOrEquals,omitempty"`
	// Only include logs for which the associated job had a priority higher than or equal to the given value. Value must be a valid `long` value.
	JobPriorityHigherThanOrEquals NullableInt64 `json:"jobPriorityHigherThanOrEquals,omitempty"`
	// Only include creation logs. Value may only be `true`, as `false` is the default behavior.
	CreationLog NullableBool `json:"creationLog,omitempty"`
	// Only include failure logs. Value may only be `true`, as `false` is the default behavior.
	FailureLog NullableBool `json:"failureLog,omitempty"`
	// Only include success logs. Value may only be `true`, as `false` is the default behavior.
	SuccessLog NullableBool `json:"successLog,omitempty"`
	// Only include deletion logs. Value may only be `true`, as `false` is the default behavior.
	DeletionLog NullableBool `json:"deletionLog,omitempty"`
	// An array of criteria to sort the result by. Each element of the array is                        an object that specifies one ordering. The position in the array                        identifies the rank of an ordering, i.e., whether it is primary, secondary,                        etc. Sorting has no effect for `count` endpoints
	Sorting []HistoricJobLogQueryDtoSortingInner `json:"sorting,omitempty"`
}

// NewHistoricJobLogQueryDto instantiates a new HistoricJobLogQueryDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHistoricJobLogQueryDto() *HistoricJobLogQueryDto {
	this := HistoricJobLogQueryDto{}
	return &this
}

// NewHistoricJobLogQueryDtoWithDefaults instantiates a new HistoricJobLogQueryDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHistoricJobLogQueryDtoWithDefaults() *HistoricJobLogQueryDto {
	this := HistoricJobLogQueryDto{}
	return &this
}

// GetLogId returns the LogId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HistoricJobLogQueryDto) GetLogId() string {
	if o == nil || IsNil(o.LogId.Get()) {
		var ret string
		return ret
	}
	return *o.LogId.Get()
}

// GetLogIdOk returns a tuple with the LogId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HistoricJobLogQueryDto) GetLogIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LogId.Get(), o.LogId.IsSet()
}

// HasLogId returns a boolean if a field has been set.
func (o *HistoricJobLogQueryDto) HasLogId() bool {
	if o != nil && o.LogId.IsSet() {
		return true
	}

	return false
}

// SetLogId gets a reference to the given NullableString and assigns it to the LogId field.
func (o *HistoricJobLogQueryDto) SetLogId(v string) {
	o.LogId.Set(&v)
}
// SetLogIdNil sets the value for LogId to be an explicit nil
func (o *HistoricJobLogQueryDto) SetLogIdNil() {
	o.LogId.Set(nil)
}

// UnsetLogId ensures that no value is present for LogId, not even an explicit nil
func (o *HistoricJobLogQueryDto) UnsetLogId() {
	o.LogId.Unset()
}

// GetJobId returns the JobId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HistoricJobLogQueryDto) GetJobId() string {
	if o == nil || IsNil(o.JobId.Get()) {
		var ret string
		return ret
	}
	return *o.JobId.Get()
}

// GetJobIdOk returns a tuple with the JobId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HistoricJobLogQueryDto) GetJobIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.JobId.Get(), o.JobId.IsSet()
}

// HasJobId returns a boolean if a field has been set.
func (o *HistoricJobLogQueryDto) HasJobId() bool {
	if o != nil && o.JobId.IsSet() {
		return true
	}

	return false
}

// SetJobId gets a reference to the given NullableString and assigns it to the JobId field.
func (o *HistoricJobLogQueryDto) SetJobId(v string) {
	o.JobId.Set(&v)
}
// SetJobIdNil sets the value for JobId to be an explicit nil
func (o *HistoricJobLogQueryDto) SetJobIdNil() {
	o.JobId.Set(nil)
}

// UnsetJobId ensures that no value is present for JobId, not even an explicit nil
func (o *HistoricJobLogQueryDto) UnsetJobId() {
	o.JobId.Unset()
}

// GetJobExceptionMessage returns the JobExceptionMessage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HistoricJobLogQueryDto) GetJobExceptionMessage() string {
	if o == nil || IsNil(o.JobExceptionMessage.Get()) {
		var ret string
		return ret
	}
	return *o.JobExceptionMessage.Get()
}

// GetJobExceptionMessageOk returns a tuple with the JobExceptionMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HistoricJobLogQueryDto) GetJobExceptionMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.JobExceptionMessage.Get(), o.JobExceptionMessage.IsSet()
}

// HasJobExceptionMessage returns a boolean if a field has been set.
func (o *HistoricJobLogQueryDto) HasJobExceptionMessage() bool {
	if o != nil && o.JobExceptionMessage.IsSet() {
		return true
	}

	return false
}

// SetJobExceptionMessage gets a reference to the given NullableString and assigns it to the JobExceptionMessage field.
func (o *HistoricJobLogQueryDto) SetJobExceptionMessage(v string) {
	o.JobExceptionMessage.Set(&v)
}
// SetJobExceptionMessageNil sets the value for JobExceptionMessage to be an explicit nil
func (o *HistoricJobLogQueryDto) SetJobExceptionMessageNil() {
	o.JobExceptionMessage.Set(nil)
}

// UnsetJobExceptionMessage ensures that no value is present for JobExceptionMessage, not even an explicit nil
func (o *HistoricJobLogQueryDto) UnsetJobExceptionMessage() {
	o.JobExceptionMessage.Unset()
}

// GetJobDefinitionId returns the JobDefinitionId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HistoricJobLogQueryDto) GetJobDefinitionId() string {
	if o == nil || IsNil(o.JobDefinitionId.Get()) {
		var ret string
		return ret
	}
	return *o.JobDefinitionId.Get()
}

// GetJobDefinitionIdOk returns a tuple with the JobDefinitionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HistoricJobLogQueryDto) GetJobDefinitionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.JobDefinitionId.Get(), o.JobDefinitionId.IsSet()
}

// HasJobDefinitionId returns a boolean if a field has been set.
func (o *HistoricJobLogQueryDto) HasJobDefinitionId() bool {
	if o != nil && o.JobDefinitionId.IsSet() {
		return true
	}

	return false
}

// SetJobDefinitionId gets a reference to the given NullableString and assigns it to the JobDefinitionId field.
func (o *HistoricJobLogQueryDto) SetJobDefinitionId(v string) {
	o.JobDefinitionId.Set(&v)
}
// SetJobDefinitionIdNil sets the value for JobDefinitionId to be an explicit nil
func (o *HistoricJobLogQueryDto) SetJobDefinitionIdNil() {
	o.JobDefinitionId.Set(nil)
}

// UnsetJobDefinitionId ensures that no value is present for JobDefinitionId, not even an explicit nil
func (o *HistoricJobLogQueryDto) UnsetJobDefinitionId() {
	o.JobDefinitionId.Unset()
}

// GetJobDefinitionType returns the JobDefinitionType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HistoricJobLogQueryDto) GetJobDefinitionType() string {
	if o == nil || IsNil(o.JobDefinitionType.Get()) {
		var ret string
		return ret
	}
	return *o.JobDefinitionType.Get()
}

// GetJobDefinitionTypeOk returns a tuple with the JobDefinitionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HistoricJobLogQueryDto) GetJobDefinitionTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.JobDefinitionType.Get(), o.JobDefinitionType.IsSet()
}

// HasJobDefinitionType returns a boolean if a field has been set.
func (o *HistoricJobLogQueryDto) HasJobDefinitionType() bool {
	if o != nil && o.JobDefinitionType.IsSet() {
		return true
	}

	return false
}

// SetJobDefinitionType gets a reference to the given NullableString and assigns it to the JobDefinitionType field.
func (o *HistoricJobLogQueryDto) SetJobDefinitionType(v string) {
	o.JobDefinitionType.Set(&v)
}
// SetJobDefinitionTypeNil sets the value for JobDefinitionType to be an explicit nil
func (o *HistoricJobLogQueryDto) SetJobDefinitionTypeNil() {
	o.JobDefinitionType.Set(nil)
}

// UnsetJobDefinitionType ensures that no value is present for JobDefinitionType, not even an explicit nil
func (o *HistoricJobLogQueryDto) UnsetJobDefinitionType() {
	o.JobDefinitionType.Unset()
}

// GetJobDefinitionConfiguration returns the JobDefinitionConfiguration field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HistoricJobLogQueryDto) GetJobDefinitionConfiguration() string {
	if o == nil || IsNil(o.JobDefinitionConfiguration.Get()) {
		var ret string
		return ret
	}
	return *o.JobDefinitionConfiguration.Get()
}

// GetJobDefinitionConfigurationOk returns a tuple with the JobDefinitionConfiguration field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HistoricJobLogQueryDto) GetJobDefinitionConfigurationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.JobDefinitionConfiguration.Get(), o.JobDefinitionConfiguration.IsSet()
}

// HasJobDefinitionConfiguration returns a boolean if a field has been set.
func (o *HistoricJobLogQueryDto) HasJobDefinitionConfiguration() bool {
	if o != nil && o.JobDefinitionConfiguration.IsSet() {
		return true
	}

	return false
}

// SetJobDefinitionConfiguration gets a reference to the given NullableString and assigns it to the JobDefinitionConfiguration field.
func (o *HistoricJobLogQueryDto) SetJobDefinitionConfiguration(v string) {
	o.JobDefinitionConfiguration.Set(&v)
}
// SetJobDefinitionConfigurationNil sets the value for JobDefinitionConfiguration to be an explicit nil
func (o *HistoricJobLogQueryDto) SetJobDefinitionConfigurationNil() {
	o.JobDefinitionConfiguration.Set(nil)
}

// UnsetJobDefinitionConfiguration ensures that no value is present for JobDefinitionConfiguration, not even an explicit nil
func (o *HistoricJobLogQueryDto) UnsetJobDefinitionConfiguration() {
	o.JobDefinitionConfiguration.Unset()
}

// GetActivityIdIn returns the ActivityIdIn field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HistoricJobLogQueryDto) GetActivityIdIn() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.ActivityIdIn
}

// GetActivityIdInOk returns a tuple with the ActivityIdIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HistoricJobLogQueryDto) GetActivityIdInOk() ([]string, bool) {
	if o == nil || IsNil(o.ActivityIdIn) {
		return nil, false
	}
	return o.ActivityIdIn, true
}

// HasActivityIdIn returns a boolean if a field has been set.
func (o *HistoricJobLogQueryDto) HasActivityIdIn() bool {
	if o != nil && !IsNil(o.ActivityIdIn) {
		return true
	}

	return false
}

// SetActivityIdIn gets a reference to the given []string and assigns it to the ActivityIdIn field.
func (o *HistoricJobLogQueryDto) SetActivityIdIn(v []string) {
	o.ActivityIdIn = v
}

// GetFailedActivityIdIn returns the FailedActivityIdIn field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HistoricJobLogQueryDto) GetFailedActivityIdIn() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.FailedActivityIdIn
}

// GetFailedActivityIdInOk returns a tuple with the FailedActivityIdIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HistoricJobLogQueryDto) GetFailedActivityIdInOk() ([]string, bool) {
	if o == nil || IsNil(o.FailedActivityIdIn) {
		return nil, false
	}
	return o.FailedActivityIdIn, true
}

// HasFailedActivityIdIn returns a boolean if a field has been set.
func (o *HistoricJobLogQueryDto) HasFailedActivityIdIn() bool {
	if o != nil && !IsNil(o.FailedActivityIdIn) {
		return true
	}

	return false
}

// SetFailedActivityIdIn gets a reference to the given []string and assigns it to the FailedActivityIdIn field.
func (o *HistoricJobLogQueryDto) SetFailedActivityIdIn(v []string) {
	o.FailedActivityIdIn = v
}

// GetExecutionIdIn returns the ExecutionIdIn field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HistoricJobLogQueryDto) GetExecutionIdIn() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.ExecutionIdIn
}

// GetExecutionIdInOk returns a tuple with the ExecutionIdIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HistoricJobLogQueryDto) GetExecutionIdInOk() ([]string, bool) {
	if o == nil || IsNil(o.ExecutionIdIn) {
		return nil, false
	}
	return o.ExecutionIdIn, true
}

// HasExecutionIdIn returns a boolean if a field has been set.
func (o *HistoricJobLogQueryDto) HasExecutionIdIn() bool {
	if o != nil && !IsNil(o.ExecutionIdIn) {
		return true
	}

	return false
}

// SetExecutionIdIn gets a reference to the given []string and assigns it to the ExecutionIdIn field.
func (o *HistoricJobLogQueryDto) SetExecutionIdIn(v []string) {
	o.ExecutionIdIn = v
}

// GetProcessInstanceId returns the ProcessInstanceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HistoricJobLogQueryDto) GetProcessInstanceId() string {
	if o == nil || IsNil(o.ProcessInstanceId.Get()) {
		var ret string
		return ret
	}
	return *o.ProcessInstanceId.Get()
}

// GetProcessInstanceIdOk returns a tuple with the ProcessInstanceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HistoricJobLogQueryDto) GetProcessInstanceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProcessInstanceId.Get(), o.ProcessInstanceId.IsSet()
}

// HasProcessInstanceId returns a boolean if a field has been set.
func (o *HistoricJobLogQueryDto) HasProcessInstanceId() bool {
	if o != nil && o.ProcessInstanceId.IsSet() {
		return true
	}

	return false
}

// SetProcessInstanceId gets a reference to the given NullableString and assigns it to the ProcessInstanceId field.
func (o *HistoricJobLogQueryDto) SetProcessInstanceId(v string) {
	o.ProcessInstanceId.Set(&v)
}
// SetProcessInstanceIdNil sets the value for ProcessInstanceId to be an explicit nil
func (o *HistoricJobLogQueryDto) SetProcessInstanceIdNil() {
	o.ProcessInstanceId.Set(nil)
}

// UnsetProcessInstanceId ensures that no value is present for ProcessInstanceId, not even an explicit nil
func (o *HistoricJobLogQueryDto) UnsetProcessInstanceId() {
	o.ProcessInstanceId.Unset()
}

// GetProcessDefinitionId returns the ProcessDefinitionId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HistoricJobLogQueryDto) GetProcessDefinitionId() string {
	if o == nil || IsNil(o.ProcessDefinitionId.Get()) {
		var ret string
		return ret
	}
	return *o.ProcessDefinitionId.Get()
}

// GetProcessDefinitionIdOk returns a tuple with the ProcessDefinitionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HistoricJobLogQueryDto) GetProcessDefinitionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProcessDefinitionId.Get(), o.ProcessDefinitionId.IsSet()
}

// HasProcessDefinitionId returns a boolean if a field has been set.
func (o *HistoricJobLogQueryDto) HasProcessDefinitionId() bool {
	if o != nil && o.ProcessDefinitionId.IsSet() {
		return true
	}

	return false
}

// SetProcessDefinitionId gets a reference to the given NullableString and assigns it to the ProcessDefinitionId field.
func (o *HistoricJobLogQueryDto) SetProcessDefinitionId(v string) {
	o.ProcessDefinitionId.Set(&v)
}
// SetProcessDefinitionIdNil sets the value for ProcessDefinitionId to be an explicit nil
func (o *HistoricJobLogQueryDto) SetProcessDefinitionIdNil() {
	o.ProcessDefinitionId.Set(nil)
}

// UnsetProcessDefinitionId ensures that no value is present for ProcessDefinitionId, not even an explicit nil
func (o *HistoricJobLogQueryDto) UnsetProcessDefinitionId() {
	o.ProcessDefinitionId.Unset()
}

// GetProcessDefinitionKey returns the ProcessDefinitionKey field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HistoricJobLogQueryDto) GetProcessDefinitionKey() string {
	if o == nil || IsNil(o.ProcessDefinitionKey.Get()) {
		var ret string
		return ret
	}
	return *o.ProcessDefinitionKey.Get()
}

// GetProcessDefinitionKeyOk returns a tuple with the ProcessDefinitionKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HistoricJobLogQueryDto) GetProcessDefinitionKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProcessDefinitionKey.Get(), o.ProcessDefinitionKey.IsSet()
}

// HasProcessDefinitionKey returns a boolean if a field has been set.
func (o *HistoricJobLogQueryDto) HasProcessDefinitionKey() bool {
	if o != nil && o.ProcessDefinitionKey.IsSet() {
		return true
	}

	return false
}

// SetProcessDefinitionKey gets a reference to the given NullableString and assigns it to the ProcessDefinitionKey field.
func (o *HistoricJobLogQueryDto) SetProcessDefinitionKey(v string) {
	o.ProcessDefinitionKey.Set(&v)
}
// SetProcessDefinitionKeyNil sets the value for ProcessDefinitionKey to be an explicit nil
func (o *HistoricJobLogQueryDto) SetProcessDefinitionKeyNil() {
	o.ProcessDefinitionKey.Set(nil)
}

// UnsetProcessDefinitionKey ensures that no value is present for ProcessDefinitionKey, not even an explicit nil
func (o *HistoricJobLogQueryDto) UnsetProcessDefinitionKey() {
	o.ProcessDefinitionKey.Unset()
}

// GetDeploymentId returns the DeploymentId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HistoricJobLogQueryDto) GetDeploymentId() string {
	if o == nil || IsNil(o.DeploymentId.Get()) {
		var ret string
		return ret
	}
	return *o.DeploymentId.Get()
}

// GetDeploymentIdOk returns a tuple with the DeploymentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HistoricJobLogQueryDto) GetDeploymentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeploymentId.Get(), o.DeploymentId.IsSet()
}

// HasDeploymentId returns a boolean if a field has been set.
func (o *HistoricJobLogQueryDto) HasDeploymentId() bool {
	if o != nil && o.DeploymentId.IsSet() {
		return true
	}

	return false
}

// SetDeploymentId gets a reference to the given NullableString and assigns it to the DeploymentId field.
func (o *HistoricJobLogQueryDto) SetDeploymentId(v string) {
	o.DeploymentId.Set(&v)
}
// SetDeploymentIdNil sets the value for DeploymentId to be an explicit nil
func (o *HistoricJobLogQueryDto) SetDeploymentIdNil() {
	o.DeploymentId.Set(nil)
}

// UnsetDeploymentId ensures that no value is present for DeploymentId, not even an explicit nil
func (o *HistoricJobLogQueryDto) UnsetDeploymentId() {
	o.DeploymentId.Unset()
}

// GetTenantIdIn returns the TenantIdIn field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HistoricJobLogQueryDto) GetTenantIdIn() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.TenantIdIn
}

// GetTenantIdInOk returns a tuple with the TenantIdIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HistoricJobLogQueryDto) GetTenantIdInOk() ([]string, bool) {
	if o == nil || IsNil(o.TenantIdIn) {
		return nil, false
	}
	return o.TenantIdIn, true
}

// HasTenantIdIn returns a boolean if a field has been set.
func (o *HistoricJobLogQueryDto) HasTenantIdIn() bool {
	if o != nil && !IsNil(o.TenantIdIn) {
		return true
	}

	return false
}

// SetTenantIdIn gets a reference to the given []string and assigns it to the TenantIdIn field.
func (o *HistoricJobLogQueryDto) SetTenantIdIn(v []string) {
	o.TenantIdIn = v
}

// GetWithoutTenantId returns the WithoutTenantId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HistoricJobLogQueryDto) GetWithoutTenantId() bool {
	if o == nil || IsNil(o.WithoutTenantId.Get()) {
		var ret bool
		return ret
	}
	return *o.WithoutTenantId.Get()
}

// GetWithoutTenantIdOk returns a tuple with the WithoutTenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HistoricJobLogQueryDto) GetWithoutTenantIdOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.WithoutTenantId.Get(), o.WithoutTenantId.IsSet()
}

// HasWithoutTenantId returns a boolean if a field has been set.
func (o *HistoricJobLogQueryDto) HasWithoutTenantId() bool {
	if o != nil && o.WithoutTenantId.IsSet() {
		return true
	}

	return false
}

// SetWithoutTenantId gets a reference to the given NullableBool and assigns it to the WithoutTenantId field.
func (o *HistoricJobLogQueryDto) SetWithoutTenantId(v bool) {
	o.WithoutTenantId.Set(&v)
}
// SetWithoutTenantIdNil sets the value for WithoutTenantId to be an explicit nil
func (o *HistoricJobLogQueryDto) SetWithoutTenantIdNil() {
	o.WithoutTenantId.Set(nil)
}

// UnsetWithoutTenantId ensures that no value is present for WithoutTenantId, not even an explicit nil
func (o *HistoricJobLogQueryDto) UnsetWithoutTenantId() {
	o.WithoutTenantId.Unset()
}

// GetHostname returns the Hostname field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HistoricJobLogQueryDto) GetHostname() string {
	if o == nil || IsNil(o.Hostname.Get()) {
		var ret string
		return ret
	}
	return *o.Hostname.Get()
}

// GetHostnameOk returns a tuple with the Hostname field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HistoricJobLogQueryDto) GetHostnameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Hostname.Get(), o.Hostname.IsSet()
}

// HasHostname returns a boolean if a field has been set.
func (o *HistoricJobLogQueryDto) HasHostname() bool {
	if o != nil && o.Hostname.IsSet() {
		return true
	}

	return false
}

// SetHostname gets a reference to the given NullableString and assigns it to the Hostname field.
func (o *HistoricJobLogQueryDto) SetHostname(v string) {
	o.Hostname.Set(&v)
}
// SetHostnameNil sets the value for Hostname to be an explicit nil
func (o *HistoricJobLogQueryDto) SetHostnameNil() {
	o.Hostname.Set(nil)
}

// UnsetHostname ensures that no value is present for Hostname, not even an explicit nil
func (o *HistoricJobLogQueryDto) UnsetHostname() {
	o.Hostname.Unset()
}

// GetJobPriorityLowerThanOrEquals returns the JobPriorityLowerThanOrEquals field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HistoricJobLogQueryDto) GetJobPriorityLowerThanOrEquals() int64 {
	if o == nil || IsNil(o.JobPriorityLowerThanOrEquals.Get()) {
		var ret int64
		return ret
	}
	return *o.JobPriorityLowerThanOrEquals.Get()
}

// GetJobPriorityLowerThanOrEqualsOk returns a tuple with the JobPriorityLowerThanOrEquals field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HistoricJobLogQueryDto) GetJobPriorityLowerThanOrEqualsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.JobPriorityLowerThanOrEquals.Get(), o.JobPriorityLowerThanOrEquals.IsSet()
}

// HasJobPriorityLowerThanOrEquals returns a boolean if a field has been set.
func (o *HistoricJobLogQueryDto) HasJobPriorityLowerThanOrEquals() bool {
	if o != nil && o.JobPriorityLowerThanOrEquals.IsSet() {
		return true
	}

	return false
}

// SetJobPriorityLowerThanOrEquals gets a reference to the given NullableInt64 and assigns it to the JobPriorityLowerThanOrEquals field.
func (o *HistoricJobLogQueryDto) SetJobPriorityLowerThanOrEquals(v int64) {
	o.JobPriorityLowerThanOrEquals.Set(&v)
}
// SetJobPriorityLowerThanOrEqualsNil sets the value for JobPriorityLowerThanOrEquals to be an explicit nil
func (o *HistoricJobLogQueryDto) SetJobPriorityLowerThanOrEqualsNil() {
	o.JobPriorityLowerThanOrEquals.Set(nil)
}

// UnsetJobPriorityLowerThanOrEquals ensures that no value is present for JobPriorityLowerThanOrEquals, not even an explicit nil
func (o *HistoricJobLogQueryDto) UnsetJobPriorityLowerThanOrEquals() {
	o.JobPriorityLowerThanOrEquals.Unset()
}

// GetJobPriorityHigherThanOrEquals returns the JobPriorityHigherThanOrEquals field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HistoricJobLogQueryDto) GetJobPriorityHigherThanOrEquals() int64 {
	if o == nil || IsNil(o.JobPriorityHigherThanOrEquals.Get()) {
		var ret int64
		return ret
	}
	return *o.JobPriorityHigherThanOrEquals.Get()
}

// GetJobPriorityHigherThanOrEqualsOk returns a tuple with the JobPriorityHigherThanOrEquals field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HistoricJobLogQueryDto) GetJobPriorityHigherThanOrEqualsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.JobPriorityHigherThanOrEquals.Get(), o.JobPriorityHigherThanOrEquals.IsSet()
}

// HasJobPriorityHigherThanOrEquals returns a boolean if a field has been set.
func (o *HistoricJobLogQueryDto) HasJobPriorityHigherThanOrEquals() bool {
	if o != nil && o.JobPriorityHigherThanOrEquals.IsSet() {
		return true
	}

	return false
}

// SetJobPriorityHigherThanOrEquals gets a reference to the given NullableInt64 and assigns it to the JobPriorityHigherThanOrEquals field.
func (o *HistoricJobLogQueryDto) SetJobPriorityHigherThanOrEquals(v int64) {
	o.JobPriorityHigherThanOrEquals.Set(&v)
}
// SetJobPriorityHigherThanOrEqualsNil sets the value for JobPriorityHigherThanOrEquals to be an explicit nil
func (o *HistoricJobLogQueryDto) SetJobPriorityHigherThanOrEqualsNil() {
	o.JobPriorityHigherThanOrEquals.Set(nil)
}

// UnsetJobPriorityHigherThanOrEquals ensures that no value is present for JobPriorityHigherThanOrEquals, not even an explicit nil
func (o *HistoricJobLogQueryDto) UnsetJobPriorityHigherThanOrEquals() {
	o.JobPriorityHigherThanOrEquals.Unset()
}

// GetCreationLog returns the CreationLog field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HistoricJobLogQueryDto) GetCreationLog() bool {
	if o == nil || IsNil(o.CreationLog.Get()) {
		var ret bool
		return ret
	}
	return *o.CreationLog.Get()
}

// GetCreationLogOk returns a tuple with the CreationLog field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HistoricJobLogQueryDto) GetCreationLogOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreationLog.Get(), o.CreationLog.IsSet()
}

// HasCreationLog returns a boolean if a field has been set.
func (o *HistoricJobLogQueryDto) HasCreationLog() bool {
	if o != nil && o.CreationLog.IsSet() {
		return true
	}

	return false
}

// SetCreationLog gets a reference to the given NullableBool and assigns it to the CreationLog field.
func (o *HistoricJobLogQueryDto) SetCreationLog(v bool) {
	o.CreationLog.Set(&v)
}
// SetCreationLogNil sets the value for CreationLog to be an explicit nil
func (o *HistoricJobLogQueryDto) SetCreationLogNil() {
	o.CreationLog.Set(nil)
}

// UnsetCreationLog ensures that no value is present for CreationLog, not even an explicit nil
func (o *HistoricJobLogQueryDto) UnsetCreationLog() {
	o.CreationLog.Unset()
}

// GetFailureLog returns the FailureLog field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HistoricJobLogQueryDto) GetFailureLog() bool {
	if o == nil || IsNil(o.FailureLog.Get()) {
		var ret bool
		return ret
	}
	return *o.FailureLog.Get()
}

// GetFailureLogOk returns a tuple with the FailureLog field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HistoricJobLogQueryDto) GetFailureLogOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.FailureLog.Get(), o.FailureLog.IsSet()
}

// HasFailureLog returns a boolean if a field has been set.
func (o *HistoricJobLogQueryDto) HasFailureLog() bool {
	if o != nil && o.FailureLog.IsSet() {
		return true
	}

	return false
}

// SetFailureLog gets a reference to the given NullableBool and assigns it to the FailureLog field.
func (o *HistoricJobLogQueryDto) SetFailureLog(v bool) {
	o.FailureLog.Set(&v)
}
// SetFailureLogNil sets the value for FailureLog to be an explicit nil
func (o *HistoricJobLogQueryDto) SetFailureLogNil() {
	o.FailureLog.Set(nil)
}

// UnsetFailureLog ensures that no value is present for FailureLog, not even an explicit nil
func (o *HistoricJobLogQueryDto) UnsetFailureLog() {
	o.FailureLog.Unset()
}

// GetSuccessLog returns the SuccessLog field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HistoricJobLogQueryDto) GetSuccessLog() bool {
	if o == nil || IsNil(o.SuccessLog.Get()) {
		var ret bool
		return ret
	}
	return *o.SuccessLog.Get()
}

// GetSuccessLogOk returns a tuple with the SuccessLog field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HistoricJobLogQueryDto) GetSuccessLogOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.SuccessLog.Get(), o.SuccessLog.IsSet()
}

// HasSuccessLog returns a boolean if a field has been set.
func (o *HistoricJobLogQueryDto) HasSuccessLog() bool {
	if o != nil && o.SuccessLog.IsSet() {
		return true
	}

	return false
}

// SetSuccessLog gets a reference to the given NullableBool and assigns it to the SuccessLog field.
func (o *HistoricJobLogQueryDto) SetSuccessLog(v bool) {
	o.SuccessLog.Set(&v)
}
// SetSuccessLogNil sets the value for SuccessLog to be an explicit nil
func (o *HistoricJobLogQueryDto) SetSuccessLogNil() {
	o.SuccessLog.Set(nil)
}

// UnsetSuccessLog ensures that no value is present for SuccessLog, not even an explicit nil
func (o *HistoricJobLogQueryDto) UnsetSuccessLog() {
	o.SuccessLog.Unset()
}

// GetDeletionLog returns the DeletionLog field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HistoricJobLogQueryDto) GetDeletionLog() bool {
	if o == nil || IsNil(o.DeletionLog.Get()) {
		var ret bool
		return ret
	}
	return *o.DeletionLog.Get()
}

// GetDeletionLogOk returns a tuple with the DeletionLog field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HistoricJobLogQueryDto) GetDeletionLogOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeletionLog.Get(), o.DeletionLog.IsSet()
}

// HasDeletionLog returns a boolean if a field has been set.
func (o *HistoricJobLogQueryDto) HasDeletionLog() bool {
	if o != nil && o.DeletionLog.IsSet() {
		return true
	}

	return false
}

// SetDeletionLog gets a reference to the given NullableBool and assigns it to the DeletionLog field.
func (o *HistoricJobLogQueryDto) SetDeletionLog(v bool) {
	o.DeletionLog.Set(&v)
}
// SetDeletionLogNil sets the value for DeletionLog to be an explicit nil
func (o *HistoricJobLogQueryDto) SetDeletionLogNil() {
	o.DeletionLog.Set(nil)
}

// UnsetDeletionLog ensures that no value is present for DeletionLog, not even an explicit nil
func (o *HistoricJobLogQueryDto) UnsetDeletionLog() {
	o.DeletionLog.Unset()
}

// GetSorting returns the Sorting field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HistoricJobLogQueryDto) GetSorting() []HistoricJobLogQueryDtoSortingInner {
	if o == nil {
		var ret []HistoricJobLogQueryDtoSortingInner
		return ret
	}
	return o.Sorting
}

// GetSortingOk returns a tuple with the Sorting field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HistoricJobLogQueryDto) GetSortingOk() ([]HistoricJobLogQueryDtoSortingInner, bool) {
	if o == nil || IsNil(o.Sorting) {
		return nil, false
	}
	return o.Sorting, true
}

// HasSorting returns a boolean if a field has been set.
func (o *HistoricJobLogQueryDto) HasSorting() bool {
	if o != nil && !IsNil(o.Sorting) {
		return true
	}

	return false
}

// SetSorting gets a reference to the given []HistoricJobLogQueryDtoSortingInner and assigns it to the Sorting field.
func (o *HistoricJobLogQueryDto) SetSorting(v []HistoricJobLogQueryDtoSortingInner) {
	o.Sorting = v
}

func (o HistoricJobLogQueryDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HistoricJobLogQueryDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.LogId.IsSet() {
		toSerialize["logId"] = o.LogId.Get()
	}
	if o.JobId.IsSet() {
		toSerialize["jobId"] = o.JobId.Get()
	}
	if o.JobExceptionMessage.IsSet() {
		toSerialize["jobExceptionMessage"] = o.JobExceptionMessage.Get()
	}
	if o.JobDefinitionId.IsSet() {
		toSerialize["jobDefinitionId"] = o.JobDefinitionId.Get()
	}
	if o.JobDefinitionType.IsSet() {
		toSerialize["jobDefinitionType"] = o.JobDefinitionType.Get()
	}
	if o.JobDefinitionConfiguration.IsSet() {
		toSerialize["jobDefinitionConfiguration"] = o.JobDefinitionConfiguration.Get()
	}
	if o.ActivityIdIn != nil {
		toSerialize["activityIdIn"] = o.ActivityIdIn
	}
	if o.FailedActivityIdIn != nil {
		toSerialize["failedActivityIdIn"] = o.FailedActivityIdIn
	}
	if o.ExecutionIdIn != nil {
		toSerialize["executionIdIn"] = o.ExecutionIdIn
	}
	if o.ProcessInstanceId.IsSet() {
		toSerialize["processInstanceId"] = o.ProcessInstanceId.Get()
	}
	if o.ProcessDefinitionId.IsSet() {
		toSerialize["processDefinitionId"] = o.ProcessDefinitionId.Get()
	}
	if o.ProcessDefinitionKey.IsSet() {
		toSerialize["processDefinitionKey"] = o.ProcessDefinitionKey.Get()
	}
	if o.DeploymentId.IsSet() {
		toSerialize["deploymentId"] = o.DeploymentId.Get()
	}
	if o.TenantIdIn != nil {
		toSerialize["tenantIdIn"] = o.TenantIdIn
	}
	if o.WithoutTenantId.IsSet() {
		toSerialize["withoutTenantId"] = o.WithoutTenantId.Get()
	}
	if o.Hostname.IsSet() {
		toSerialize["hostname"] = o.Hostname.Get()
	}
	if o.JobPriorityLowerThanOrEquals.IsSet() {
		toSerialize["jobPriorityLowerThanOrEquals"] = o.JobPriorityLowerThanOrEquals.Get()
	}
	if o.JobPriorityHigherThanOrEquals.IsSet() {
		toSerialize["jobPriorityHigherThanOrEquals"] = o.JobPriorityHigherThanOrEquals.Get()
	}
	if o.CreationLog.IsSet() {
		toSerialize["creationLog"] = o.CreationLog.Get()
	}
	if o.FailureLog.IsSet() {
		toSerialize["failureLog"] = o.FailureLog.Get()
	}
	if o.SuccessLog.IsSet() {
		toSerialize["successLog"] = o.SuccessLog.Get()
	}
	if o.DeletionLog.IsSet() {
		toSerialize["deletionLog"] = o.DeletionLog.Get()
	}
	if o.Sorting != nil {
		toSerialize["sorting"] = o.Sorting
	}
	return toSerialize, nil
}

type NullableHistoricJobLogQueryDto struct {
	value *HistoricJobLogQueryDto
	isSet bool
}

func (v NullableHistoricJobLogQueryDto) Get() *HistoricJobLogQueryDto {
	return v.value
}

func (v *NullableHistoricJobLogQueryDto) Set(val *HistoricJobLogQueryDto) {
	v.value = val
	v.isSet = true
}

func (v NullableHistoricJobLogQueryDto) IsSet() bool {
	return v.isSet
}

func (v *NullableHistoricJobLogQueryDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHistoricJobLogQueryDto(val *HistoricJobLogQueryDto) *NullableHistoricJobLogQueryDto {
	return &NullableHistoricJobLogQueryDto{value: val, isSet: true}
}

func (v NullableHistoricJobLogQueryDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHistoricJobLogQueryDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


