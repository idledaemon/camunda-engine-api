/*
Camunda Platform REST API

OpenApi Spec for Camunda Platform REST API.

API version: 7.21.2-ee
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package camundarestgo

import (
	"encoding/json"
)

// checks if the StartProcessInstanceDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StartProcessInstanceDto{}

// StartProcessInstanceDto struct for StartProcessInstanceDto
type StartProcessInstanceDto struct {
	// The business key of the process instance.
	BusinessKey NullableString `json:"businessKey,omitempty"`
	// 
	Variables map[string]VariableValueDto `json:"variables,omitempty"`
	// The case instance id the process instance is to be initialized with.
	CaseInstanceId NullableString `json:"caseInstanceId,omitempty"`
	// **Optional**. A JSON array of instructions that specify which activities to start the process instance at. If this property is omitted, the process instance starts at its default blank start event.
	StartInstructions []ProcessInstanceModificationInstructionDto `json:"startInstructions,omitempty"`
	// Skip execution listener invocation for activities that are started or ended as part of this request. **Note**: This option is currently only respected when start instructions are submitted via the `startInstructions` property.
	SkipCustomListeners NullableBool `json:"skipCustomListeners,omitempty"`
	// Skip execution of [input/output variable mappings](https://docs.camunda.org/manual/7.21/user-guide/process-engine/variables/#input-output-variable-mapping) for activities that are started or ended as part of this request. **Note**: This option is currently only respected when start instructions are submitted via the `startInstructions` property.
	SkipIoMappings NullableBool `json:"skipIoMappings,omitempty"`
	// Indicates if the variables, which was used by the process instance during execution, should be returned. Default value: `false`
	WithVariablesInReturn NullableBool `json:"withVariablesInReturn,omitempty"`
}

// NewStartProcessInstanceDto instantiates a new StartProcessInstanceDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStartProcessInstanceDto() *StartProcessInstanceDto {
	this := StartProcessInstanceDto{}
	return &this
}

// NewStartProcessInstanceDtoWithDefaults instantiates a new StartProcessInstanceDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStartProcessInstanceDtoWithDefaults() *StartProcessInstanceDto {
	this := StartProcessInstanceDto{}
	return &this
}

// GetBusinessKey returns the BusinessKey field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *StartProcessInstanceDto) GetBusinessKey() string {
	if o == nil || IsNil(o.BusinessKey.Get()) {
		var ret string
		return ret
	}
	return *o.BusinessKey.Get()
}

// GetBusinessKeyOk returns a tuple with the BusinessKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *StartProcessInstanceDto) GetBusinessKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BusinessKey.Get(), o.BusinessKey.IsSet()
}

// HasBusinessKey returns a boolean if a field has been set.
func (o *StartProcessInstanceDto) HasBusinessKey() bool {
	if o != nil && o.BusinessKey.IsSet() {
		return true
	}

	return false
}

// SetBusinessKey gets a reference to the given NullableString and assigns it to the BusinessKey field.
func (o *StartProcessInstanceDto) SetBusinessKey(v string) {
	o.BusinessKey.Set(&v)
}
// SetBusinessKeyNil sets the value for BusinessKey to be an explicit nil
func (o *StartProcessInstanceDto) SetBusinessKeyNil() {
	o.BusinessKey.Set(nil)
}

// UnsetBusinessKey ensures that no value is present for BusinessKey, not even an explicit nil
func (o *StartProcessInstanceDto) UnsetBusinessKey() {
	o.BusinessKey.Unset()
}

// GetVariables returns the Variables field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *StartProcessInstanceDto) GetVariables() map[string]VariableValueDto {
	if o == nil {
		var ret map[string]VariableValueDto
		return ret
	}
	return o.Variables
}

// GetVariablesOk returns a tuple with the Variables field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *StartProcessInstanceDto) GetVariablesOk() (*map[string]VariableValueDto, bool) {
	if o == nil || IsNil(o.Variables) {
		return nil, false
	}
	return &o.Variables, true
}

// HasVariables returns a boolean if a field has been set.
func (o *StartProcessInstanceDto) HasVariables() bool {
	if o != nil && !IsNil(o.Variables) {
		return true
	}

	return false
}

// SetVariables gets a reference to the given map[string]VariableValueDto and assigns it to the Variables field.
func (o *StartProcessInstanceDto) SetVariables(v map[string]VariableValueDto) {
	o.Variables = v
}

// GetCaseInstanceId returns the CaseInstanceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *StartProcessInstanceDto) GetCaseInstanceId() string {
	if o == nil || IsNil(o.CaseInstanceId.Get()) {
		var ret string
		return ret
	}
	return *o.CaseInstanceId.Get()
}

// GetCaseInstanceIdOk returns a tuple with the CaseInstanceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *StartProcessInstanceDto) GetCaseInstanceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CaseInstanceId.Get(), o.CaseInstanceId.IsSet()
}

// HasCaseInstanceId returns a boolean if a field has been set.
func (o *StartProcessInstanceDto) HasCaseInstanceId() bool {
	if o != nil && o.CaseInstanceId.IsSet() {
		return true
	}

	return false
}

// SetCaseInstanceId gets a reference to the given NullableString and assigns it to the CaseInstanceId field.
func (o *StartProcessInstanceDto) SetCaseInstanceId(v string) {
	o.CaseInstanceId.Set(&v)
}
// SetCaseInstanceIdNil sets the value for CaseInstanceId to be an explicit nil
func (o *StartProcessInstanceDto) SetCaseInstanceIdNil() {
	o.CaseInstanceId.Set(nil)
}

// UnsetCaseInstanceId ensures that no value is present for CaseInstanceId, not even an explicit nil
func (o *StartProcessInstanceDto) UnsetCaseInstanceId() {
	o.CaseInstanceId.Unset()
}

// GetStartInstructions returns the StartInstructions field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *StartProcessInstanceDto) GetStartInstructions() []ProcessInstanceModificationInstructionDto {
	if o == nil {
		var ret []ProcessInstanceModificationInstructionDto
		return ret
	}
	return o.StartInstructions
}

// GetStartInstructionsOk returns a tuple with the StartInstructions field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *StartProcessInstanceDto) GetStartInstructionsOk() ([]ProcessInstanceModificationInstructionDto, bool) {
	if o == nil || IsNil(o.StartInstructions) {
		return nil, false
	}
	return o.StartInstructions, true
}

// HasStartInstructions returns a boolean if a field has been set.
func (o *StartProcessInstanceDto) HasStartInstructions() bool {
	if o != nil && !IsNil(o.StartInstructions) {
		return true
	}

	return false
}

// SetStartInstructions gets a reference to the given []ProcessInstanceModificationInstructionDto and assigns it to the StartInstructions field.
func (o *StartProcessInstanceDto) SetStartInstructions(v []ProcessInstanceModificationInstructionDto) {
	o.StartInstructions = v
}

// GetSkipCustomListeners returns the SkipCustomListeners field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *StartProcessInstanceDto) GetSkipCustomListeners() bool {
	if o == nil || IsNil(o.SkipCustomListeners.Get()) {
		var ret bool
		return ret
	}
	return *o.SkipCustomListeners.Get()
}

// GetSkipCustomListenersOk returns a tuple with the SkipCustomListeners field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *StartProcessInstanceDto) GetSkipCustomListenersOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.SkipCustomListeners.Get(), o.SkipCustomListeners.IsSet()
}

// HasSkipCustomListeners returns a boolean if a field has been set.
func (o *StartProcessInstanceDto) HasSkipCustomListeners() bool {
	if o != nil && o.SkipCustomListeners.IsSet() {
		return true
	}

	return false
}

// SetSkipCustomListeners gets a reference to the given NullableBool and assigns it to the SkipCustomListeners field.
func (o *StartProcessInstanceDto) SetSkipCustomListeners(v bool) {
	o.SkipCustomListeners.Set(&v)
}
// SetSkipCustomListenersNil sets the value for SkipCustomListeners to be an explicit nil
func (o *StartProcessInstanceDto) SetSkipCustomListenersNil() {
	o.SkipCustomListeners.Set(nil)
}

// UnsetSkipCustomListeners ensures that no value is present for SkipCustomListeners, not even an explicit nil
func (o *StartProcessInstanceDto) UnsetSkipCustomListeners() {
	o.SkipCustomListeners.Unset()
}

// GetSkipIoMappings returns the SkipIoMappings field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *StartProcessInstanceDto) GetSkipIoMappings() bool {
	if o == nil || IsNil(o.SkipIoMappings.Get()) {
		var ret bool
		return ret
	}
	return *o.SkipIoMappings.Get()
}

// GetSkipIoMappingsOk returns a tuple with the SkipIoMappings field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *StartProcessInstanceDto) GetSkipIoMappingsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.SkipIoMappings.Get(), o.SkipIoMappings.IsSet()
}

// HasSkipIoMappings returns a boolean if a field has been set.
func (o *StartProcessInstanceDto) HasSkipIoMappings() bool {
	if o != nil && o.SkipIoMappings.IsSet() {
		return true
	}

	return false
}

// SetSkipIoMappings gets a reference to the given NullableBool and assigns it to the SkipIoMappings field.
func (o *StartProcessInstanceDto) SetSkipIoMappings(v bool) {
	o.SkipIoMappings.Set(&v)
}
// SetSkipIoMappingsNil sets the value for SkipIoMappings to be an explicit nil
func (o *StartProcessInstanceDto) SetSkipIoMappingsNil() {
	o.SkipIoMappings.Set(nil)
}

// UnsetSkipIoMappings ensures that no value is present for SkipIoMappings, not even an explicit nil
func (o *StartProcessInstanceDto) UnsetSkipIoMappings() {
	o.SkipIoMappings.Unset()
}

// GetWithVariablesInReturn returns the WithVariablesInReturn field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *StartProcessInstanceDto) GetWithVariablesInReturn() bool {
	if o == nil || IsNil(o.WithVariablesInReturn.Get()) {
		var ret bool
		return ret
	}
	return *o.WithVariablesInReturn.Get()
}

// GetWithVariablesInReturnOk returns a tuple with the WithVariablesInReturn field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *StartProcessInstanceDto) GetWithVariablesInReturnOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.WithVariablesInReturn.Get(), o.WithVariablesInReturn.IsSet()
}

// HasWithVariablesInReturn returns a boolean if a field has been set.
func (o *StartProcessInstanceDto) HasWithVariablesInReturn() bool {
	if o != nil && o.WithVariablesInReturn.IsSet() {
		return true
	}

	return false
}

// SetWithVariablesInReturn gets a reference to the given NullableBool and assigns it to the WithVariablesInReturn field.
func (o *StartProcessInstanceDto) SetWithVariablesInReturn(v bool) {
	o.WithVariablesInReturn.Set(&v)
}
// SetWithVariablesInReturnNil sets the value for WithVariablesInReturn to be an explicit nil
func (o *StartProcessInstanceDto) SetWithVariablesInReturnNil() {
	o.WithVariablesInReturn.Set(nil)
}

// UnsetWithVariablesInReturn ensures that no value is present for WithVariablesInReturn, not even an explicit nil
func (o *StartProcessInstanceDto) UnsetWithVariablesInReturn() {
	o.WithVariablesInReturn.Unset()
}

func (o StartProcessInstanceDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StartProcessInstanceDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.BusinessKey.IsSet() {
		toSerialize["businessKey"] = o.BusinessKey.Get()
	}
	if o.Variables != nil {
		toSerialize["variables"] = o.Variables
	}
	if o.CaseInstanceId.IsSet() {
		toSerialize["caseInstanceId"] = o.CaseInstanceId.Get()
	}
	if o.StartInstructions != nil {
		toSerialize["startInstructions"] = o.StartInstructions
	}
	if o.SkipCustomListeners.IsSet() {
		toSerialize["skipCustomListeners"] = o.SkipCustomListeners.Get()
	}
	if o.SkipIoMappings.IsSet() {
		toSerialize["skipIoMappings"] = o.SkipIoMappings.Get()
	}
	if o.WithVariablesInReturn.IsSet() {
		toSerialize["withVariablesInReturn"] = o.WithVariablesInReturn.Get()
	}
	return toSerialize, nil
}

type NullableStartProcessInstanceDto struct {
	value *StartProcessInstanceDto
	isSet bool
}

func (v NullableStartProcessInstanceDto) Get() *StartProcessInstanceDto {
	return v.value
}

func (v *NullableStartProcessInstanceDto) Set(val *StartProcessInstanceDto) {
	v.value = val
	v.isSet = true
}

func (v NullableStartProcessInstanceDto) IsSet() bool {
	return v.isSet
}

func (v *NullableStartProcessInstanceDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStartProcessInstanceDto(val *StartProcessInstanceDto) *NullableStartProcessInstanceDto {
	return &NullableStartProcessInstanceDto{value: val, isSet: true}
}

func (v NullableStartProcessInstanceDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStartProcessInstanceDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


