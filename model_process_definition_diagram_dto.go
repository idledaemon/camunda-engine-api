/*
Camunda Platform REST API

OpenApi Spec for Camunda Platform REST API.

API version: 7.21.2-ee
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package camundarestgo

import (
	"encoding/json"
)

// checks if the ProcessDefinitionDiagramDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProcessDefinitionDiagramDto{}

// ProcessDefinitionDiagramDto struct for ProcessDefinitionDiagramDto
type ProcessDefinitionDiagramDto struct {
	// The id of the process definition.
	Id NullableString `json:"id,omitempty"`
	// An escaped XML string containing the XML that this definition was deployed with. Carriage returns, line feeds and quotation marks are escaped.
	Bpmn20Xml NullableString `json:"bpmn20Xml,omitempty"`
}

// NewProcessDefinitionDiagramDto instantiates a new ProcessDefinitionDiagramDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProcessDefinitionDiagramDto() *ProcessDefinitionDiagramDto {
	this := ProcessDefinitionDiagramDto{}
	return &this
}

// NewProcessDefinitionDiagramDtoWithDefaults instantiates a new ProcessDefinitionDiagramDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProcessDefinitionDiagramDtoWithDefaults() *ProcessDefinitionDiagramDto {
	this := ProcessDefinitionDiagramDto{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProcessDefinitionDiagramDto) GetId() string {
	if o == nil || IsNil(o.Id.Get()) {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProcessDefinitionDiagramDto) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *ProcessDefinitionDiagramDto) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *ProcessDefinitionDiagramDto) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *ProcessDefinitionDiagramDto) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *ProcessDefinitionDiagramDto) UnsetId() {
	o.Id.Unset()
}

// GetBpmn20Xml returns the Bpmn20Xml field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProcessDefinitionDiagramDto) GetBpmn20Xml() string {
	if o == nil || IsNil(o.Bpmn20Xml.Get()) {
		var ret string
		return ret
	}
	return *o.Bpmn20Xml.Get()
}

// GetBpmn20XmlOk returns a tuple with the Bpmn20Xml field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProcessDefinitionDiagramDto) GetBpmn20XmlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Bpmn20Xml.Get(), o.Bpmn20Xml.IsSet()
}

// HasBpmn20Xml returns a boolean if a field has been set.
func (o *ProcessDefinitionDiagramDto) HasBpmn20Xml() bool {
	if o != nil && o.Bpmn20Xml.IsSet() {
		return true
	}

	return false
}

// SetBpmn20Xml gets a reference to the given NullableString and assigns it to the Bpmn20Xml field.
func (o *ProcessDefinitionDiagramDto) SetBpmn20Xml(v string) {
	o.Bpmn20Xml.Set(&v)
}
// SetBpmn20XmlNil sets the value for Bpmn20Xml to be an explicit nil
func (o *ProcessDefinitionDiagramDto) SetBpmn20XmlNil() {
	o.Bpmn20Xml.Set(nil)
}

// UnsetBpmn20Xml ensures that no value is present for Bpmn20Xml, not even an explicit nil
func (o *ProcessDefinitionDiagramDto) UnsetBpmn20Xml() {
	o.Bpmn20Xml.Unset()
}

func (o ProcessDefinitionDiagramDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProcessDefinitionDiagramDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.Bpmn20Xml.IsSet() {
		toSerialize["bpmn20Xml"] = o.Bpmn20Xml.Get()
	}
	return toSerialize, nil
}

type NullableProcessDefinitionDiagramDto struct {
	value *ProcessDefinitionDiagramDto
	isSet bool
}

func (v NullableProcessDefinitionDiagramDto) Get() *ProcessDefinitionDiagramDto {
	return v.value
}

func (v *NullableProcessDefinitionDiagramDto) Set(val *ProcessDefinitionDiagramDto) {
	v.value = val
	v.isSet = true
}

func (v NullableProcessDefinitionDiagramDto) IsSet() bool {
	return v.isSet
}

func (v *NullableProcessDefinitionDiagramDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProcessDefinitionDiagramDto(val *ProcessDefinitionDiagramDto) *NullableProcessDefinitionDiagramDto {
	return &NullableProcessDefinitionDiagramDto{value: val, isSet: true}
}

func (v NullableProcessDefinitionDiagramDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProcessDefinitionDiagramDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


